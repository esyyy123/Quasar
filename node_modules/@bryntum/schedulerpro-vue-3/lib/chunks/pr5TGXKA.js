import { defineComponent as F, ref as d, provide as R, onMounted as h, getCurrentInstance as b, toRaw as D, onBeforeUnmount as S, openBlock as n, createElementBlock as u, createElementVNode as E, Fragment as M, renderList as x, createBlock as c, Teleport as y, resolveDynamicComponent as k, mergeProps as v, watch as H } from "vue";
import { Grid as B } from "@bryntum/schedulerpro";
import { WrapperHelper as t } from "../helper/WrapperHelper.js";
const T = {
  ref: "teleportsHolder",
  style: { display: "none" }
}, O = /* @__PURE__ */ F({
  __name: "BryntumGrid",
  props: {
    adopt: {},
    alignSelf: {},
    animateRemovingRows: {},
    animateTreeNodeToggle: {},
    appendTo: {},
    ariaDescription: {},
    ariaLabel: {},
    ariaLive: {},
    autoHeight: {},
    bbar: {},
    bodyCls: {},
    bubbleEvents: {},
    callOnFunctions: {},
    cls: {},
    collapsed: {},
    collapsible: {},
    columnLines: {},
    columns: {},
    config: {},
    contentElementCls: {},
    contextMenuTriggerEvent: {},
    data: {},
    dataset: {},
    defaultRegion: {},
    destroyStore: {},
    disabled: {},
    disableGridColumnIdWarning: {},
    disableGridRowModelWarning: {},
    dock: {},
    emptyText: {},
    enableSticky: {},
    enableTextSelection: {},
    enableUndoRedoKeys: {},
    extraData: {},
    fillLastColumn: {},
    fixedRowHeight: {},
    flex: {},
    footer: {},
    fullRowRefresh: {},
    getRowHeight: { type: Function },
    header: {},
    height: {},
    hidden: {},
    hideFooters: {},
    hideHeaders: {},
    hideHorizontalScrollbar: {},
    hoverCls: {},
    id: {},
    ignoreParentReadOnly: {},
    insertBefore: {},
    insertFirst: {},
    keyMap: {},
    listeners: {},
    loadMask: {},
    loadMaskDefaults: {},
    loadMaskError: {},
    localizable: {},
    longPressTime: {},
    margin: {},
    maskDefaults: {},
    masked: {},
    maxHeight: {},
    maxWidth: {},
    minHeight: {},
    minWidth: {},
    monitorResize: {},
    owner: {},
    plugins: {},
    preserveFocusOnDatasetChange: {},
    preserveScroll: {},
    preserveScrollOnDatasetChange: {},
    preventTooltipOnTouch: {},
    readOnly: {},
    relayStoreEvents: {},
    resizeToFitIncludesHeader: {},
    responsiveLevels: {},
    ripple: {},
    rootElement: {},
    rowHeight: {},
    rowLines: {},
    scrollable: {},
    scrollerClass: {},
    scrollManager: {},
    selectionMode: {},
    showDirty: {},
    stateful: {},
    statefulEvents: {},
    stateId: {},
    stateProvider: {},
    store: {},
    strips: {},
    subGridConfigs: {},
    syncMask: {},
    tab: {},
    tbar: {},
    title: {},
    tools: {},
    transitionDuration: {},
    type: {},
    ui: {},
    weight: {},
    width: {},
    cellCopyPasteFeature: {},
    cellEditFeature: {},
    cellMenuFeature: {},
    cellTooltipFeature: {},
    columnAutoWidthFeature: {},
    columnDragToolbarFeature: {},
    columnPickerFeature: {},
    columnRenameFeature: {},
    columnReorderFeature: {},
    columnResizeFeature: {},
    excelExporterFeature: {},
    fileDropFeature: {},
    fillHandleFeature: {},
    filterFeature: {},
    filterBarFeature: {},
    groupFeature: {},
    groupSummaryFeature: {},
    headerMenuFeature: {},
    lockRowsFeature: {},
    mergeCellsFeature: {},
    pdfExportFeature: {},
    printFeature: {},
    quickFindFeature: {},
    regionResizeFeature: {},
    rowCopyPasteFeature: {},
    rowExpanderFeature: {},
    rowReorderFeature: {},
    rowResizeFeature: {},
    searchFeature: {},
    sortFeature: {},
    splitFeature: {},
    stickyCellsFeature: {},
    stripeFeature: {},
    summaryFeature: {},
    treeFeature: {},
    treeGroupFeature: {}
  },
  emits: ["beforeCancelCellEdit", "beforeCellDelete", "beforeCellEditStart", "beforeColumnDragStart", "beforeColumnDropFinalize", "beforeColumnResize", "beforeCopy", "beforeCSVExport", "beforeDestroy", "beforeExcelExport", "beforeFillHandleDragStart", "beforeFinishCellEdit", "beforeHide", "beforePaste", "beforePdfExport", "beforeRenderRow", "beforeRenderRows", "beforeRowCollapse", "beforeRowExpand", "beforeSelectionChange", "beforeSetRecord", "beforeShow", "beforeToggleGroup", "beforeToggleNode", "cancelCellEdit", "catchAll", "cellClick", "cellContextMenu", "cellDblClick", "cellMenuBeforeShow", "cellMenuItem", "cellMenuShow", "cellMenuToggleItem", "cellMouseEnter", "cellMouseLeave", "cellMouseOut", "cellMouseOver", "collapse", "collapseNode", "columnDrag", "columnDragStart", "columnDrop", "columnResize", "columnResizeStart", "contextMenuItem", "contextMenuToggleItem", "copy", "dataChange", "destroy", "dragSelecting", "expand", "expandNode", "fileDrop", "fillHandleBeforeDragFinalize", "fillHandleDrag", "fillHandleDragAbort", "fillHandleDragEnd", "fillHandleDragStart", "finishCellEdit", "focusIn", "focusOut", "gridRowBeforeDragStart", "gridRowBeforeDropFinalize", "gridRowDrag", "gridRowDragAbort", "gridRowDragStart", "gridRowDrop", "headerClick", "headerMenuBeforeShow", "headerMenuItem", "headerMenuShow", "headerMenuToggleItem", "hide", "lockRows", "mouseOut", "mouseOver", "paint", "paste", "pdfExport", "recompose", "renderRow", "renderRows", "resize", "responsive", "rowCollapse", "rowExpand", "rowMouseEnter", "rowMouseLeave", "scroll", "selectionChange", "selectionModeChange", "show", "split", "splitterCollapseClick", "splitterDragEnd", "splitterDragStart", "splitterExpandClick", "startCellEdit", "subGridCollapse", "subGridExpand", "toggleGroup", "toggleNode", "toolClick", "unlockRows", "unsplit"],
  setup(p, { expose: g, emit: f }) {
    const C = p, m = f, s = {
      instanceClass: B,
      instanceName: "Grid",
      isView: !0,
      dataStores: {
        originalStore: "originals",
        store: "data"
      },
      projectStores: !1,
      featureNames: [
        "cellCopyPasteFeature",
        "cellEditFeature",
        "cellMenuFeature",
        "cellTooltipFeature",
        "columnAutoWidthFeature",
        "columnDragToolbarFeature",
        "columnPickerFeature",
        "columnRenameFeature",
        "columnReorderFeature",
        "columnResizeFeature",
        "excelExporterFeature",
        "fileDropFeature",
        "fillHandleFeature",
        "filterFeature",
        "filterBarFeature",
        "groupFeature",
        "groupSummaryFeature",
        "headerMenuFeature",
        "lockRowsFeature",
        "mergeCellsFeature",
        "pdfExportFeature",
        "printFeature",
        "quickFindFeature",
        "regionResizeFeature",
        "rowCopyPasteFeature",
        "rowExpanderFeature",
        "rowReorderFeature",
        "rowResizeFeature",
        "searchFeature",
        "sortFeature",
        "splitFeature",
        "stickyCellsFeature",
        "stripeFeature",
        "summaryFeature",
        "treeFeature",
        "treeGroupFeature"
      ],
      configNames: [
        "adopt",
        "animateRemovingRows",
        "ariaDescription",
        "ariaLabel",
        "autoHeight",
        "bbar",
        "bodyCls",
        "bubbleEvents",
        "callOnFunctions",
        "collapsible",
        "config",
        "contentElementCls",
        "contextMenuTriggerEvent",
        "defaultRegion",
        "destroyStore",
        "disableGridColumnIdWarning",
        "disableGridRowModelWarning",
        "dock",
        "enableSticky",
        "enableTextSelection",
        "fillLastColumn",
        "fixedRowHeight",
        "footer",
        "fullRowRefresh",
        "getRowHeight",
        "header",
        "hideHorizontalScrollbar",
        "hoverCls",
        "ignoreParentReadOnly",
        "listeners",
        "loadMask",
        "loadMaskDefaults",
        "loadMaskError",
        "localizable",
        "maskDefaults",
        "masked",
        "monitorResize",
        "owner",
        "plugins",
        "preserveFocusOnDatasetChange",
        "preserveScrollOnDatasetChange",
        "preventTooltipOnTouch",
        "relayStoreEvents",
        "resizeToFitIncludesHeader",
        "responsiveLevels",
        "ripple",
        "rootElement",
        "scrollerClass",
        "scrollManager",
        "showDirty",
        "stateful",
        "statefulEvents",
        "stateId",
        "stateProvider",
        "strips",
        "subGridConfigs",
        "syncMask",
        "tab",
        "tbar",
        "type",
        "ui",
        "weight"
      ],
      propertyConfigNames: [
        "alignSelf",
        "animateTreeNodeToggle",
        "appendTo",
        "ariaLive",
        "cls",
        "collapsed",
        "columnLines",
        "columns",
        "data",
        "dataset",
        "disabled",
        "emptyText",
        "enableUndoRedoKeys",
        "extraData",
        "flex",
        "height",
        "hidden",
        "hideFooters",
        "hideHeaders",
        "id",
        "insertBefore",
        "insertFirst",
        "keyMap",
        "longPressTime",
        "margin",
        "maxHeight",
        "maxWidth",
        "minHeight",
        "minWidth",
        "onBeforeCancelCellEdit",
        "onBeforeCellDelete",
        "onBeforeCellEditStart",
        "onBeforeColumnDragStart",
        "onBeforeColumnDropFinalize",
        "onBeforeColumnResize",
        "onBeforeCopy",
        "onBeforeCSVExport",
        "onBeforeDestroy",
        "onBeforeExcelExport",
        "onBeforeFillHandleDragStart",
        "onBeforeFinishCellEdit",
        "onBeforeHide",
        "onBeforePaste",
        "onBeforePdfExport",
        "onBeforeRenderRow",
        "onBeforeRenderRows",
        "onBeforeRowCollapse",
        "onBeforeRowExpand",
        "onBeforeSelectionChange",
        "onBeforeSetRecord",
        "onBeforeShow",
        "onBeforeToggleGroup",
        "onBeforeToggleNode",
        "onCancelCellEdit",
        "onCatchAll",
        "onCellClick",
        "onCellContextMenu",
        "onCellDblClick",
        "onCellMenuBeforeShow",
        "onCellMenuItem",
        "onCellMenuShow",
        "onCellMenuToggleItem",
        "onCellMouseEnter",
        "onCellMouseLeave",
        "onCellMouseOut",
        "onCellMouseOver",
        "onCollapse",
        "onCollapseNode",
        "onColumnDrag",
        "onColumnDragStart",
        "onColumnDrop",
        "onColumnResize",
        "onColumnResizeStart",
        "onContextMenuItem",
        "onContextMenuToggleItem",
        "onCopy",
        "onDataChange",
        "onDestroy",
        "onDragSelecting",
        "onExpand",
        "onExpandNode",
        "onFileDrop",
        "onFillHandleBeforeDragFinalize",
        "onFillHandleDrag",
        "onFillHandleDragAbort",
        "onFillHandleDragEnd",
        "onFillHandleDragStart",
        "onFinishCellEdit",
        "onFocusIn",
        "onFocusOut",
        "onGridRowBeforeDragStart",
        "onGridRowBeforeDropFinalize",
        "onGridRowDrag",
        "onGridRowDragAbort",
        "onGridRowDragStart",
        "onGridRowDrop",
        "onHeaderClick",
        "onHeaderMenuBeforeShow",
        "onHeaderMenuItem",
        "onHeaderMenuShow",
        "onHeaderMenuToggleItem",
        "onHide",
        "onLockRows",
        "onMouseOut",
        "onMouseOver",
        "onPaint",
        "onPaste",
        "onPdfExport",
        "onReadOnly",
        "onRecompose",
        "onRenderRow",
        "onRenderRows",
        "onResize",
        "onResponsive",
        "onRowCollapse",
        "onRowExpand",
        "onRowMouseEnter",
        "onRowMouseLeave",
        "onScroll",
        "onSelectionChange",
        "onSelectionModeChange",
        "onShow",
        "onSplit",
        "onSplitterCollapseClick",
        "onSplitterDragEnd",
        "onSplitterDragStart",
        "onSplitterExpandClick",
        "onStartCellEdit",
        "onSubGridCollapse",
        "onSubGridExpand",
        "onToggleGroup",
        "onToggleNode",
        "onToolClick",
        "onUnlockRows",
        "onUnsplit",
        "preserveScroll",
        "readOnly",
        "rowHeight",
        "rowLines",
        "scrollable",
        "selectionMode",
        "store",
        "title",
        "tools",
        "transitionDuration",
        "width"
      ],
      propertyNames: [
        "accessibility",
        "originalStore",
        "selectedCell",
        "selectedCells",
        "selectedRecord",
        "selectedRecords",
        "selectedRows",
        "state",
        "tooltip"
      ],
      eventNames: [
        "beforeCancelCellEdit",
        "beforeCellDelete",
        "beforeCellEditStart",
        "beforeColumnDragStart",
        "beforeColumnDropFinalize",
        "beforeColumnResize",
        "beforeCopy",
        "beforeCSVExport",
        "beforeDestroy",
        "beforeExcelExport",
        "beforeFillHandleDragStart",
        "beforeFinishCellEdit",
        "beforeHide",
        "beforePaste",
        "beforePdfExport",
        "beforeRenderRow",
        "beforeRenderRows",
        "beforeRowCollapse",
        "beforeRowExpand",
        "beforeSelectionChange",
        "beforeSetRecord",
        "beforeShow",
        "beforeToggleGroup",
        "beforeToggleNode",
        "cancelCellEdit",
        "catchAll",
        "cellClick",
        "cellContextMenu",
        "cellDblClick",
        "cellMenuBeforeShow",
        "cellMenuItem",
        "cellMenuShow",
        "cellMenuToggleItem",
        "cellMouseEnter",
        "cellMouseLeave",
        "cellMouseOut",
        "cellMouseOver",
        "collapse",
        "collapseNode",
        "columnDrag",
        "columnDragStart",
        "columnDrop",
        "columnResize",
        "columnResizeStart",
        "contextMenuItem",
        "contextMenuToggleItem",
        "copy",
        "dataChange",
        "destroy",
        "dragSelecting",
        "expand",
        "expandNode",
        "fileDrop",
        "fillHandleBeforeDragFinalize",
        "fillHandleDrag",
        "fillHandleDragAbort",
        "fillHandleDragEnd",
        "fillHandleDragStart",
        "finishCellEdit",
        "focusIn",
        "focusOut",
        "gridRowBeforeDragStart",
        "gridRowBeforeDropFinalize",
        "gridRowDrag",
        "gridRowDragAbort",
        "gridRowDragStart",
        "gridRowDrop",
        "headerClick",
        "headerMenuBeforeShow",
        "headerMenuItem",
        "headerMenuShow",
        "headerMenuToggleItem",
        "hide",
        "lockRows",
        "mouseOut",
        "mouseOver",
        "paint",
        "paste",
        "pdfExport",
        "recompose",
        "renderRow",
        "renderRows",
        "resize",
        "responsive",
        "rowCollapse",
        "rowExpand",
        "rowMouseEnter",
        "rowMouseLeave",
        "scroll",
        "selectionChange",
        "selectionModeChange",
        "show",
        "split",
        "splitterCollapseClick",
        "splitterDragEnd",
        "splitterDragStart",
        "splitterExpandClick",
        "startCellEdit",
        "subGridCollapse",
        "subGridExpand",
        "toggleGroup",
        "toggleNode",
        "toolClick",
        "unlockRows",
        "unsplit"
      ]
    }, r = {}, a = d(), i = d(/* @__PURE__ */ new Map());
    return R("teleports", i), h(() => {
      const e = b();
      r.value = t.createWidget({
        me: e,
        props: C,
        emit: m,
        widgetData: s,
        element: a.value,
        processCellContent: t.processCellContent,
        hasFrameworkRenderer: t.hasFrameworkRenderer,
        toRaw: D
      }), t.relayStores(e.data, r.value);
      const l = (o, w) => H(() => e.props[o], w);
      t.watchProps(r.value, s, l);
    }), S(() => {
      var e, l;
      (l = (e = r.value) == null ? void 0 : e.destroy) == null || l.call(e);
    }), g({
      instance: r,
      refElement: a,
      teleports: i
    }), (e, l) => (n(), u("div", {
      ref_key: "refElement",
      ref: a
    }, [
      E("div", T, [
        (n(!0), u(M, null, x(i.value.values(), (o) => (n(), c(y, {
          key: o.key,
          to: o.to
        }, [
          (n(), c(k(o.is), v({
            ref_for: !0,
            ref: o.key,
            "data-key": o.key,
            "data-generation": o.generation
          }, o.bind, { "data-vue": "" }), null, 16, ["data-key", "data-generation"]))
        ], 8, ["to"]))), 128))
      ], 512)
    ], 512));
  }
});
export {
  O as _
};
//# sourceMappingURL=pr5TGXKA.js.map
