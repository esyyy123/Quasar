import type { AjaxStore, AjaxStoreConfig, AssignmentModel, AssignmentModelConfig, AssignmentStore, AssignmentStoreConfig, CalendarHighlight, CalendarHighlightConfig, CalendarModel, CalendarModelConfig, CellCopyPaste, CellCopyPasteConfig, CellEdit, CellEditConfig, CellMenu, CellMenuConfig, CellTooltip, CellTooltipConfig, Column, ColumnAutoWidth, ColumnAutoWidthConfig, ColumnDragToolbar, ColumnDragToolbarConfig, ColumnLines, ColumnLinesConfig, ColumnPicker, ColumnPickerConfig, ColumnRename, ColumnRenameConfig, ColumnReorder, ColumnReorderConfig, ColumnResize, ColumnResizeConfig, ColumnStore, ColumnStoreConfig, ContainerItemConfig, CrudManager, CrudManagerConfig, CycleResolutionPopup, DateConstraint, Dependencies, DependenciesConfig, DependencyBaseModel, DependencyEdit, DependencyEditConfig, DependencyModel, DependencyModelConfig, DependencyStore, DependencyStoreConfig, DomClassList, DomConfig, DurationConfig, Editor, EventBuffer, EventBufferConfig, EventColor, EventCopyPaste, EventCopyPasteConfig, EventDrag, EventDragConfig, EventDragCreate, EventDragCreateConfig, EventDragSelect, EventDragSelectConfig, EventEdit, EventEditConfig, EventFilter, EventFilterConfig, EventMenu, EventMenuConfig, EventModel, EventModelConfig, EventNonWorkingTime, EventNonWorkingTimeConfig, EventResize, EventResizeConfig, EventSegmentDrag, EventSegmentDragConfig, EventSegmentResize, EventSegmentResizeConfig, EventSegments, EventSegmentsConfig, EventStore, EventStoreConfig, EventTooltip, EventTooltipConfig, ExcelExporter, ExcelExporterConfig, FileDrop, FileDropConfig, FillHandle, FillHandleConfig, Filter, FilterBar, FilterBarConfig, FilterConfig, Grid, GridBase, GridColumnConfig, GridLocation, GridSelectionMode, Group, GroupConfig, GroupSummary, GroupSummaryConfig, HeaderMenu, HeaderMenuConfig, HeaderZoom, HeaderZoomConfig, Labels, LabelsConfig, LockRows, LockRowsConfig, Mask, MaskConfig, Menu, MenuItem, MenuItemConfig, MergeCells, MergeCellsConfig, Model, ModelConfig, NestedEvents, NestedEventsConfig, NonWorkingTime, NonWorkingTimeConfig, PagingToolbarConfig, Pan, PanConfig, PanelCollapserConfig, PanelCollapserOverlayConfig, PanelHeader, PdfExport, PdfExportConfig, PercentBar, PercentBarConfig, PreserveScrollOptions, Print, PrintConfig, ProjectModel, ProjectModelConfig, QuickFind, QuickFindConfig, RegionResize, RegionResizeConfig, ResourceHeaderConfig, ResourceMarginConfig, ResourceMenu, ResourceMenuConfig, ResourceModel, ResourceModelConfig, ResourceNonWorkingTime, ResourceNonWorkingTimeConfig, ResourceStore, ResourceStoreConfig, ResourceTimeRangeModel, ResourceTimeRangeModelConfig, ResourceTimeRangeStore, ResourceTimeRangeStoreConfig, ResourceTimeRanges, ResourceTimeRangesConfig, Row, RowCopyPaste, RowCopyPasteConfig, RowExpander, RowExpanderConfig, RowReorder, RowReorderConfig, RowResize, RowResizeConfig, ScheduleContext, ScheduleContextConfig, ScheduleMenu, ScheduleMenuConfig, ScheduleTooltip, ScheduleTooltipConfig, Scheduler, SchedulerAssignmentModel, SchedulerEventModel, SchedulerPro, SchedulerProBaseListeners, SchedulerResourceModel, SchedulingIssueResolutionPopup, ScrollButtons, ScrollButtonsConfig, ScrollManager, ScrollManagerConfig, Scroller, ScrollerConfig, Search, SearchConfig, SimpleEventEdit, SimpleEventEditConfig, Sort, SortConfig, Split, SplitConfig, StateProvider, StickyCells, StickyCellsConfig, StickyEvents, StickyEventsConfig, Store, StoreConfig, Stripe, StripeConfig, SubGrid, SubGridConfig, Summary, SummaryConfig, TabConfig, TaskEdit, TaskEditConfig, TaskEditorBase, TimeAxis, TimeAxisColumn, TimeAxisConfig, TimeAxisHeaderMenu, TimeAxisHeaderMenuConfig, TimeRanges, TimeRangesConfig, TimeSelection, TimeSelectionConfig, TimeSpan, TimeSpanConfig, TimeSpanHighlight, TimeSpanHighlightConfig, TimelineBase, TimelineContext, Tool, ToolConfig, ToolbarConfig, TooltipConfig, Tree, TreeConfig, TreeGroup, TreeGroupConfig, Versions, VersionsConfig, VerticalTimeAxisColumn, VerticalTimeAxisColumnConfig, ViewPresetConfig, VisibleDate, Widget } from '@bryntum/schedulerpro';
import { SchedulerProBase } from '@bryntum/schedulerpro';
declare const _default: import("vue").DefineComponent<__VLS_TypePropsToRuntimeProps<{
    /**
     * Element (or element id) to adopt as this Widget's encapsulating element. The widget's
     * content will be placed inside this element.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-adopt)
     */
    adopt?: string | HTMLElement | undefined;
    /**
     * When this widget is a child of a [Container](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Container), it will by default be participating in a
     * flexbox layout. This config allows you to set this widget's
     * [align-self](https://developer.mozilla.org/en-US/docs/Web/CSS/align-self) style.
     */
    alignSelf?: string | undefined;
    /**
     * Set to `false` to not allow creating dependencies
     */
    allowCreate?: Boolean | undefined;
    /**
     * `false` to require a drop on a target event bar side circle to define the dependency type.
     * If dropped on the event bar, the `defaultValue` of the DependencyModel `type` field will be used to
     * determine the target task side.
     */
    allowDropOnEventBar?: Boolean | undefined;
    /**
     * Set to `false` if you don't want to allow events overlapping times for any one resource (defaults to `true`).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-allowOverlap)
     */
    allowOverlap?: Boolean | undefined;
    /**
     * Set to `false` to prevent remove row animation and remove the delay related to that.
     */
    animateRemovingRows?: Boolean | undefined;
    /**
     * When the [Tree](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/Tree) feature is in use and the Store is a tree store, this
     * config may be set to `true` to visually animate branch node expand and collapse operations.
     * *This is not supported in Scheduler and Gantt*
     */
    animateTreeNodeToggle?: Boolean | undefined;
    /**
     * Element (or the id of an element) to append this widget's element to. Can be configured, or set once at
     * runtime. To access the element of a rendered widget, see [element](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Widget#property-element).
     */
    appendTo?: string | HTMLElement | undefined;
    /**
     * A localizable string (May contain `'L{}'` tokens which resolve in the locale file) to inject
     * into an element which will be linked using the `aria-describedby` attribute.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-ariaDescription)
     */
    ariaDescription?: string | undefined;
    /**
     * A localizable string (May contain `'L{}'` tokens which resolve in the locale file) to inject as
     * the `aria-label` attribute.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-ariaLabel)
     */
    ariaLabel?: string | undefined;
    /**
     * The `aria-live` value for this widget.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-ariaLive)
     */
    ariaLive?: string | undefined;
    /**
     * Inline assignments, will be loaded into the backing project's AssignmentStore.
     */
    assignments?: AssignmentModel[] | AssignmentModelConfig[] | undefined;
    /**
     * The optional [AssignmentStore](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/data/AssignmentStore), holding assignments between resources and events.
     * Required for multi assignments.
     */
    assignmentStore?: AssignmentStore | AssignmentStoreConfig | undefined;
    /**
     * You can set this option to `false` to make the timeline panel start and end on the exact provided
     * [startDate](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/TimelineBase#config-startDate)/[endDate](#Scheduler/view/TimelineBase#config-endDate) w/o adjusting them.
     */
    autoAdjustTimeAxis?: Boolean | undefined;
    /**
     * Automatically set grids height to fit all rows (no scrolling in the grid). In general you should avoid
     * using `autoHeight: true`, since it will bypass Grids virtual rendering and render all rows at once, which
     * in a larger grid is really bad for performance.
     */
    autoHeight?: Boolean | undefined;
    /**
     * Controls how much space to leave between stacked event bars in px.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-barMargin)
     */
    barMargin?: number | undefined;
    /**
     * A Config object representing the configuration of a [Toolbar](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Toolbar),
     * or array of config objects representing the child items of a Toolbar. Another way to add a bbar is to use [strips](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Panel#config-strips).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-bbar)
     */
    bbar?: PagingToolbarConfig | ToolbarConfig | (string | ContainerItemConfig)[] | undefined;
    /**
     * Custom CSS classes to add to the panel's body element.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-bodyCls)
     */
    bodyCls?: string | object | undefined;
    /**
     * An object where property names with a truthy value indicate which events should bubble up the ownership
     * hierarchy when triggered.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-bubbleEvents)
     */
    bubbleEvents?: object | undefined;
    /**
     * This config defines the size of the start and end invisible parts of the timespan when [infiniteScroll](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/mixin/TimelineScroll#config-infiniteScroll) set to `true`.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-bufferCoef)
     */
    bufferCoef?: number | undefined;
    /**
     * This config defines the scroll limit, which, when exceeded will cause a timespan shift.
     * The limit is calculated as the `panelWidth * [bufferCoef](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/mixin/TimelineScroll#config-bufferCoef) * bufferThreshold`. During scrolling, if the left or right side
     * has less than that of the rendered content - a shift is triggered.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-bufferThreshold)
     */
    bufferThreshold?: number | undefined;
    /**
     * Inline calendars, will be loaded into the backing project's CalendarManagerStore.
     */
    calendars?: CalendarModel[] | CalendarModelConfig[] | undefined;
    /**
     * Set to `false` to not call onXXX method names (e.g. `onShow`, `onClick`), as an easy way to listen for events.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-callOnFunctions)
     */
    callOnFunctions?: Boolean | undefined;
    /**
     * Custom CSS classes to add to element.
     * May be specified as a space separated string, or as an object in which property names
     * with truthy values are used as the class names:
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-cls)
     */
    cls?: string | object | undefined;
    /**
     * Controls whether the panel is collapsed (the body of the panel is hidden while only the header is
     * visible). Only valid if the panel is [collapsible](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Panel#config-collapsible).
     */
    collapsed?: Boolean | undefined;
    /**
     * This config enables collapsibility for the panel. See [collapsed](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Panel#config-collapsed).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-collapsible)
     */
    collapsible?: Boolean | PanelCollapserConfig | PanelCollapserOverlayConfig | undefined;
    /**
     * Set to `false` to not show column lines. End result might be overruled by/differ between themes.
     */
    columnLines?: Boolean | undefined;
    /**
     * Accepts column definitions for the grid during initialization. They will be used to create
     * [Column](https://bryntum.com/products/schedulerpro/docs/api/Grid/column/Column) instances that are added to a [ColumnStore](#Grid/data/ColumnStore).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-columns)
     */
    columns?: ColumnStore | GridColumnConfig[] | ColumnStoreConfig | undefined;
    config?: object | undefined;
    /**
     * Custom CSS classes to add to the [contentElement](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Widget#property-contentElement).
     * May be specified as a space separated string, or as an object in which property names
     * with truthy values are used as the class names:
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-contentElementCls)
     */
    contentElementCls?: string | object | undefined;
    /**
     * Event which is used to show context menus.
     * Available options are: 'contextmenu', 'click', 'dblclick'.
     */
    contextMenuTriggerEvent?: "contextmenu" | "click" | "dblclick" | undefined;
    /**
     * If true, a new event will be created when user double-clicks on a time axis cell (if scheduler is not in
     * read only mode).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-createEventOnDblClick)
     * @param {boolean} createEventOnDblClick.useEventModelDefaults set to `true` to set default duration based on the defaults specified by the [duration](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/model/EventModel#field-duration) and [durationUnit](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/model/EventModel#field-durationUnit) fields.
     */
    createEventOnDblClick?: Boolean | {
        createEventOnDblClick: {
            useEventModelDefaults?: Boolean;
        };
    } | undefined;
    /**
     * A tooltip config object that will be applied to the dependency creation [Tooltip](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Tooltip)
     */
    creationTooltip?: TooltipConfig | undefined;
    /**
     * A template function that will be called to generate the HTML contents of the dependency creation tooltip.
     * You can return either an HTML string or a [DomConfig](https://bryntum.com/products/schedulerpro/docs/api/Core/helper/DomHelper#typedef-DomConfig) object.
     * @param {object} data Data about the dependency being created
     * @param {TimeSpan} data.source The from event
     * @param {TimeSpan} data.target The target event
     * @param {string} data.fromSide The from side (start, end, top, bottom)
     * @param {string} data.toSide The target side (start, end, top, bottom)
     * @param {boolean} data.valid The validity of the dependency
     * @returns {string|DomConfig}
     */
    creationTooltipTemplate?: ((data: {
        source: TimeSpan;
        target: TimeSpan;
        fromSide: string;
        toSide: string;
        valid: Boolean;
    }) => string | DomConfig) | undefined;
    /**
     * Supply a [CrudManager](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/data/CrudManager) instance or a config object if you want to use
     * CrudManager for handling data.
     */
    crudManager?: CrudManagerConfig | CrudManager | undefined;
    /**
     * Class that should be used to instantiate a CrudManager in case it's provided as a simple object to
     * [crudManager](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/mixin/SchedulerStores#config-crudManager) config.
     */
    crudManagerClass?: typeof CrudManager | undefined;
    /**
     * Class implementing the popup resolving *scheduling cycles*.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-cycleResolutionPopupClass)
     */
    cycleResolutionPopupClass?: typeof CycleResolutionPopup | undefined;
    /**
     * Convenient shortcut to set data in grids store both during initialization and at runtime. Can also be
     * used to retrieve data at runtime, although we do recommend interacting with Grids store instead using
     * the [store](https://bryntum.com/products/schedulerpro/docs/api/Grid/view/GridBase#property-store) property.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-data)
     */
    data?: object[] | Model[] | ModelConfig[] | undefined;
    /**
     * Object to apply to elements dataset (each key will be used as a data-attribute on the element)
     */
    dataset?: Record<string, string> | undefined;
    /**
     * The date to display when used as a component of a Calendar.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-date)
     */
    date?: Date | undefined;
    /**
     * A [DateHelper](https://bryntum.com/products/schedulerpro/docs/api/Core/helper/DateHelper) format string to use to create date output for view descriptions.
     */
    dateFormat?: string | undefined;
    /**
     * A string used to separate start and end dates in the [descriptionFormat](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/mixin/Describable#config-descriptionFormat).
     */
    dateSeparator?: string | undefined;
    /**
     * Region to which columns are added when they have none specified
     */
    defaultRegion?: string | undefined;
    /**
     * Generic resource image, used when provided `imageUrl` or `image` fields or path calculated from resource
     * name are all invalid. If left blank, resource name initials will be shown when no image can be loaded.
     */
    defaultResourceImageName?: string | undefined;
    /**
     * Inline dependencies, will be loaded into the backing project's DependencyStore.
     */
    dependencies?: DependencyModel[] | DependencyModelConfig[] | undefined;
    /**
     * A task field (id, wbsCode, sequenceNumber etc) that will be used when displaying and editing linked tasks.
     */
    dependencyIdField?: string | undefined;
    /**
     * The optional [DependencyStore](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/data/DependencyStore).
     */
    dependencyStore?: DependencyStoreConfig | DependencyStore | undefined;
    /**
     * The date format used by the default [descriptionRenderer](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/mixin/Describable#config-descriptionRenderer) for rendering the view's description.
     * If this value is `null`, the [dateFormat](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/mixin/Describable#config-dateFormat) (and potentially [dateSeparator](#Scheduler/view/mixin/Describable#config-dateSeparator)) will
     * be used.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-descriptionFormat)
     */
    descriptionFormat?: string | string[] | Boolean[] | undefined;
    /**
     * A function that provides the textual description for this view. If provided, this function overrides the
     * [descriptionFormat](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/mixin/Describable#config-descriptionFormat).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-descriptionRenderer)
     * @param {Widget} view The active view in case the function is in another scope.
     * @returns {string} Description string
     */
    descriptionRenderer?: ((view: Widget) => string) | undefined;
    /**
     * Configure as `false` to preserve selection when clicking the empty schedule area.
     */
    deselectAllOnScheduleClick?: Boolean | undefined;
    /**
     * Configure as `true` to deselect a selected event upon click.
     */
    deselectOnClick?: Boolean | undefined;
    /**
     * Set to `true` to destroy the store when the grid is destroyed.
     */
    destroyStore?: Boolean | undefined;
    /**
     * Configure as `true` to destroy the Project and stores when `this` is destroyed.
     */
    destroyStores?: Boolean | undefined;
    /**
     * Disable or enable the widget. It is similar to [readOnly](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Widget#config-readOnly) except a disabled widget
     * cannot be focused, uses a different rendition (usually greyish) and does not allow selecting its value.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-disabled)
     */
    disabled?: Boolean | "inert" | undefined;
    /**
     * Set to `true` to not get a warning when calling [getState](https://bryntum.com/products/schedulerpro/docs/api/Grid/view/GridBase#function-getState) when there is a column
     * configured without an `id`. But the recommended action is to always configure columns with an `id` when
     * using states.
     */
    disableGridColumnIdWarning?: Boolean | undefined;
    /**
     * Set to `true` to not get a warning when using another base class than GridRowModel for your grid data. If
     * you do, and would like to use the full feature set of the grid then include the fields from GridRowModel
     * in your model definition.
     */
    disableGridRowModelWarning?: Boolean | undefined;
    /**
     * Defines how dates will be formatted in tooltips etc. This config has priority over similar config on the
     * view preset. For allowed values see [format](https://bryntum.com/products/schedulerpro/docs/api/Core/helper/DateHelper#function-format-static).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-displayDateFormat)
     */
    displayDateFormat?: string | undefined;
    /**
     * Set to `true` to display special popups allowing user
     * to resolve [scheduling conflicts](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/widget/SchedulingIssueResolutionPopup),
     * [cycles](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/widget/CycleResolutionPopup) or calendar misconfigurations.
     * The popup will suggest user ways to resolve the corresponding case.
     */
    displaySchedulingIssueResolutionPopup?: Boolean | undefined;
    /**
     * Controls the placement of this widget when it is added to a [panel's ](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Panel)
     * [strips collection](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Panel#config-strips). Typical values for this config are `'top'`,
     * `'bottom'`, `'left'`, or `'right'`, which cause the widget to be placed on that side of the panel's
     * body. Such widgets are called "edge strips".
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-dock)
     */
    dock?: object | "top" | "bottom" | "left" | "right" | "start" | "end" | "header" | "pre-header" | undefined;
    /**
     * Decimal precision used when displaying durations, used by tooltips and DurationColumn.
     * Specify `false` to use raw value
     */
    durationDisplayPrecision?: number | Boolean | undefined;
    /**
     * Text or HTML, or a [DomConfig](https://bryntum.com/products/schedulerpro/docs/api/Core/helper/DomHelper#typedef-DomConfig) block to display when there is no data to display in the grid
     */
    emptyText?: string | DomConfig | undefined;
    /**
     * Allow using [Delete] and [Backspace] to remove events/assignments
     */
    enableDeleteKey?: Boolean | undefined;
    /**
     * Set to `false` if you don't want event bar DOM updates to animate.
     */
    enableEventAnimations?: Boolean | undefined;
    /**
     * Enables showing occurrences of recurring events across the scheduler's time axis. If you want to disable
     * the recurrence popup, you can choose set the `defaultAction` to `future` to affect all future
     * occurrences, or `single` to just affect the currently selected event.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-enableRecurringEvents)
     */
    enableRecurringEvents?: Boolean | {
        defaultAction?: "single" | "future" | undefined;
    } | undefined;
    /**
     * Configure this as `true` to allow elements within cells to be styled as `position: sticky`.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-enableSticky)
     */
    enableSticky?: Boolean | undefined;
    /**
     * Set to `true` to allow text selection in the grid cells. Note, this cannot be used simultaneously with the
     * `RowReorder` feature.
     */
    enableTextSelection?: Boolean | undefined;
    /**
     * When true, some features will start a project transaction, blocking the project queue, suspending
     * store events and preventing UI from updates. It behaves similar to
     * [instantUpdate](https://bryntum.com/products/schedulerpro/docs/api/Grid/column/Column#config-instantUpdate) set to `false`.
     * Set `false` to not use project queue.
     */
    enableTransactionalFeatures?: Boolean | undefined;
    /**
     * Set to `true` to listen for CTRL-Z (CMD-Z on Mac OS) keyboard event and trigger undo (redo when SHIFT is
     * pressed). Only applicable when using a [StateTrackingManager](https://bryntum.com/products/schedulerpro/docs/api/Core/data/stm/StateTrackingManager).
     */
    enableUndoRedoKeys?: Boolean | undefined;
    /**
     * The end date of the timeline (if not configure with [infiniteScroll](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/TimelineBase#config-infiniteScroll)).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-endDate)
     */
    endDate?: string | Date | undefined;
    /**
     * The name of the end date parameter that will be passed to in every `eventStore` load request.
     */
    endParamName?: string | undefined;
    /**
     * Field from EventModel displayed as text in the bar when rendering
     */
    eventBarTextField?: string | undefined;
    /**
     * Event color used by default. Events and resources can specify their own color, with priority order being:
     * Event -&gt; Resource -&gt; Scheduler default.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-eventColor)
     */
    eventColor?: EventColor | undefined;
    /**
     * Defines how to handle overlapping events. Valid values are:
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-eventLayout)
     */
    eventLayout?: "stack" | "pack" | "mixed" | "none" | {
        type?: "stack" | "pack" | "mixed" | "none" | undefined;
    } | undefined;
    /**
     * An empty function by default, but provided so that you can override it. This function is called each time
     * an event is rendered into the schedule to render the contents of the event. It's called with the event,
     * its resource and a `renderData` object which allows you to populate data placeholders inside the event
     * template. <strong>IMPORTANT</strong> You should never modify any data on the EventModel inside this method.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-eventRenderer)
     * @param {object} detail An object containing the information needed to render an Event.
     * @param {EventModel} detail.eventRecord The event record.
     * @param {ResourceModel} detail.resourceRecord The resource record.
     * @param {AssignmentModel} detail.assignmentRecord The assignment record.
     * @param {Scheduler} detail.scheduler The Scheduler instance.
     * @param {object} detail.renderData An object containing details about the event rendering.
     * @param {EventModel} detail.renderData.event The event record.
     * @param {DomClassList|string} detail.renderData.cls An object whose property names represent the CSS class names to be added to the event bar element. Set a property's value to truthy or falsy to add or remove the class name based on the property name. Using this technique, you do not have to know whether the class is already there, or deal with concatenation.
     * @param {DomClassList|string} detail.renderData.wrapperCls An object whose property names represent the CSS class names to be added to the event wrapper element. Set a property's value to truthy or falsy to add or remove the class name based on the property name. Using this technique, you do not have to know whether the class is already there, or deal with concatenation.
     * @param {DomClassList|string} detail.renderData.iconCls An object whose property names represent the CSS class names to be added to an event icon element. Note that an element carrying this icon class is injected into the event element *after* the renderer completes, *before* the renderer's created content. To disable this if the renderer takes full control and creates content using the iconCls, you can set `renderData.iconCls = null`.
     * @param {number} detail.renderData.left Vertical offset position (in pixels) on the time axis.
     * @param {number} detail.renderData.width Width in pixels of the event element.
     * @param {number} detail.renderData.height Height in pixels of the event element.
     * @param {string|<String, String>} detail.renderData.style Inline styles for the event bar DOM element. Use either 'border: 1px solid black' or `{ border: '1px solid black' }`
     * @param {string|<String, String>} detail.renderData.wrapperStyle Inline styles for wrapper of the event bar DOM element. Use either 'border: 1px solid green' or `{ border: '1px solid green' }`
     * @param {string} detail.renderData.eventStyle The `eventStyle` of the event. Use this to apply custom styles to the event DOM element
     * @param {string} detail.renderData.eventColor The `eventColor` of the event. Use this to set a custom color for the rendered event
     * @param {DomConfig>} detail.renderData.children An array of DOM configs used as children to the `b-sch-event` element. Can be populated with additional DOM configs to have more control over contents.
     * @returns {string|DomConfig|DomConfig>} A simple string, or a DomConfig (or array thereof)
     */
    eventRenderer?: ((detail: {
        eventRecord: SchedulerEventModel;
        resourceRecord: SchedulerResourceModel;
        assignmentRecord: SchedulerAssignmentModel;
        scheduler: Scheduler;
        renderData: {
            event: SchedulerEventModel;
            cls: DomClassList | string;
            wrapperCls: DomClassList | string;
            iconCls: DomClassList | string;
            left: number;
            width: number;
            height: number;
            style: string | Record<string, string>;
            wrapperStyle: string | Record<string, string>;
            eventStyle: string;
            eventColor: string;
            children: DomConfig[];
        };
    }) => string | DomConfig | DomConfig[]) | undefined;
    /**
     * `this` reference for the [eventRenderer](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/mixin/SchedulerEventRendering#config-eventRenderer) function
     */
    eventRendererThisObj?: object | undefined;
    /**
     * Inline events, will be loaded into the backing project's EventStore.
     */
    events?: object[] | EventModel[] | EventModelConfig[] | undefined;
    /**
     * Configure as `true`, or set property to `true` to disable event selection.
     */
    eventSelectionDisabled?: Boolean | undefined;
    /**
     * The [EventStore](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/data/EventStore) holding the events to be rendered into the scheduler.
     */
    eventStore?: EventStore | EventStoreConfig | undefined;
    /**
     * Event style used by default. Events and resources can specify their own style, with priority order being:
     * Event -&gt; Resource -&gt; Scheduler default. Determines the appearance of the event by assigning a CSS class
     * to it. Available styles are:
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-eventStyle)
     */
    eventStyle?: "plain" | "border" | "colored" | "hollow" | "line" | "dashed" | "minimal" | "rounded" | "calendar" | "interday" | null | undefined;
    extraData?: any;
    /**
     * Set to `true` to stretch the last column in a grid with all fixed width columns
     * to fill extra available space if the grid's width is wider than the sum of all
     * configured column widths.
     */
    fillLastColumn?: Boolean | undefined;
    /**
     * Specify `true` to force rendered events/tasks to fill entire ticks. This only affects rendering, start
     * and end dates retain their value on the data level.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-fillTicks)
     */
    fillTicks?: Boolean | undefined;
    /**
     * Use fixed row height. Setting this to `true` will configure the underlying RowManager to use fixed row
     * height, which sacrifices the ability to use rows with variable height to gain a fraction better
     * performance.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-fixedRowHeight)
     */
    fixedRowHeight?: Boolean | undefined;
    /**
     * When this widget is a child of a [Container](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Container), it will by default be participating in a
     * flexbox layout. This config allows you to set this widget's
     * [flex](https://developer.mozilla.org/en-US/docs/Web/CSS/flex) style.
     * This may be configured as a single number or a `&lt;flex-grow&gt; &lt;flex-shrink&gt; &lt;flex-basis&gt;` format string.
     * numeric-only values are interpreted as the `flex-grow` value.
     */
    flex?: string | number | undefined;
    /**
     * Config object of a footer. May contain a `dock`, `html` and a `cls` property. A footer is not a widget,
     * but rather plain HTML that follows the last element of the panel's body and [strips](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Panel#config-strips).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-footer)
     */
    footer?: string | {
        dock?: "top" | "bottom" | "left" | "right" | "start" | "end" | undefined;
        html?: string | undefined;
        cls?: string | undefined;
    } | undefined;
    /**
     * Set to `true` to force the time columns to fit to the available space (horizontal or vertical depends on mode).
     * Note that setting [suppressFit](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/TimelineBase#config-suppressFit) to `true`, will disable `forceFit` functionality. Zooming
     * cannot be used when `forceFit` is set.
     */
    forceFit?: Boolean | undefined;
    /**
     * Refresh entire row when a record changes (`true`) or, if possible, only the cells affected (`false`).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-fullRowRefresh)
     */
    fullRowRefresh?: Boolean | undefined;
    /**
     * A method allowing you to define date boundaries that will constrain resize, create and drag drop
     * operations. The method will be called with the Resource record, and the Event record.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-getDateConstraints)
     * @param {ResourceModel} resourceRecord The resource record
     * @param {EventModel} eventRecord The event record
     * @returns {DateConstraint} Constraining `Object` containing `start` and `end` constraints. Omitting either will mean that end is not constrained. So you can prevent a resize or move from moving *before* a certain time while not constraining the end date.
     */
    getDateConstraints?: ((resourceRecord?: SchedulerResourceModel, eventRecord?: SchedulerEventModel) => DateConstraint) | undefined;
    /**
     * Scheduler overrides Grids default implementation of [getRowHeight](https://bryntum.com/products/schedulerpro/docs/api/Grid/view/GridBase#config-getRowHeight) to
     * pre-calculate row heights based on events in the rows.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-getRowHeight)
     * @param {ResourceModel} getRowHeight.record Resource record to determine row height for
     * @returns {number} Desired row height
     */
    getRowHeight?: ((getRowHeight: {
        record: SchedulerResourceModel;
    }) => number) | undefined;
    /**
     * A config [object](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Panel#typedef-PanelHeader) for the panel's header or a string in place of a `title`.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-header)
     */
    header?: string | Boolean | PanelHeader | undefined;
    /**
     * Widget's height, used to set element style.height. Either specify a valid height string or a number, which
     * will get 'px' appended. We recommend using CSS as the primary way to control height, but in some cases
     * this config is convenient.
     */
    height?: string | number | undefined;
    /**
     * Configure with true to make widget initially hidden.
     */
    hidden?: Boolean | undefined;
    /**
     * Set to `true` to hide the footer elements
     */
    hideFooters?: Boolean | undefined;
    /**
     * Set to `true` to hide the column header elements
     */
    hideHeaders?: Boolean | undefined;
    /**
     * Set to `true` to hide the Grid's horizontal scrollbar(s)
     */
    hideHorizontalScrollbar?: Boolean | undefined;
    /**
     * By default the row hover effect is not visible in the Scheduler part of the grid.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-hideRowHover)
     */
    hideRowHover?: Boolean | undefined;
    /**
     * Configure as `true`, or set property to `true` to highlight dependent events as well when selecting an event.
     */
    highlightPredecessors?: Boolean | undefined;
    /**
     * Configure as `true`, or set property to `true` to highlight dependent events as well when selecting an event.
     */
    highlightSuccessors?: Boolean | undefined;
    /**
     * A CSS class to add to hovered row elements
     */
    hoverCls?: string | undefined;
    /**
     * Widget id, if not specified one will be generated. Also used for lookups through Widget.getById
     */
    id?: string | undefined;
    /**
     * Set to `true` to ignore reacting to DOM events (mouseover/mouseout etc) while scrolling. Useful if you
     * want to maximize scroll performance.
     */
    ignoreDomEventsWhileScrolling?: Boolean | undefined;
    /**
     * Determines if the widgets read-only state should be controlled by its parent.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-ignoreParentReadOnly)
     */
    ignoreParentReadOnly?: Boolean | undefined;
    /**
     * Configure as `true` to automatically adjust the panel timespan during scrolling in the time dimension,
     * when the scroller comes close to the start/end edges.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-infiniteScroll)
     */
    infiniteScroll?: Boolean | undefined;
    /**
     * Element (or element id) to insert this widget before. If provided, [appendTo](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Widget#config-appendTo) config is ignored.
     */
    insertBefore?: string | HTMLElement | undefined;
    /**
     * Element (or element id) to append this widget element to, as a first child. If provided, [appendTo](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Widget#config-appendTo) config is ignored.
     */
    insertFirst?: string | HTMLElement | undefined;
    /**
     * A template method (empty by default) allowing you to control if an event can be selected or not.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-isEventSelectable)
     * @param {EventModel} event The event record
     * @returns {boolean} true if event can be selected, otherwise false
     */
    isEventSelectable?: ((event: SchedulerEventModel) => Boolean) | undefined;
    /**
     * See [Keyboard shortcuts](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/Scheduler#keyboard-shortcuts) for details
     */
    keyMap?: Record<string, string> | undefined;
    /**
     * The listener set for this object.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-listeners)
     */
    listeners?: SchedulerProBaseListeners | undefined;
    /**
     * A [Mask](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Mask) config object, or a message to be shown when a store is performing a remote
     * operation, or Crud Manager is loading data from the sever. Set to `null` to disable default load mask.
     */
    loadMask?: string | MaskConfig | null | undefined;
    /**
     * A [Mask](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Mask) config object to adjust the [maskDefaults](#Core/widget/Widget#config-maskDefaults)
     * when data is loading. The message and optional configuration from the
     * [loadMask](https://bryntum.com/products/schedulerpro/docs/api/Core/mixin/LoadMaskable#config-loadMask) config take priority over these options, just as they do
     * for `maskDefaults`, respectively.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-loadMaskDefaults)
     */
    loadMaskDefaults?: MaskConfig | undefined;
    /**
     * A [Mask](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Mask) config object to adjust the [maskDefaults](#Core/widget/Widget#config-maskDefaults)
     * when an error occurs loading data.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-loadMaskError)
     */
    loadMaskError?: Boolean | MaskConfig | Mask | undefined;
    /**
     * Set to `false` to disable localization of this object.
     */
    localizable?: Boolean | undefined;
    /**
     * Time in ms until a longpress is triggered
     */
    longPressTime?: number | undefined;
    /**
     * This flag controls whether Scheduler should preserve its selection of events when loading a new dataset
     * (if selected event ids are included in the newly loaded dataset).
     */
    maintainSelectionOnDatasetChange?: Boolean | undefined;
    /**
     * When `true`, events are sized and positioned based on rowHeight, resourceMargin and barMargin settings.
     * Set this to `false` if you want to control height and vertical position using CSS instead.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-managedEventSizing)
     */
    managedEventSizing?: Boolean | undefined;
    /**
     * Widget's margin. This may be configured as a single number or a `TRBL` format string.
     * numeric-only values are interpreted as pixels.
     */
    margin?: string | number | undefined;
    /**
     * Grids change the `maskDefaults` to cover only their `body` element.
     */
    maskDefaults?: MaskConfig | undefined;
    /**
     * Set to `true` to apply the default mask to the widget. Alternatively, this can be the mask message or a
     * [Mask](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Mask) config object.
     */
    masked?: string | Boolean | MaskConfig | undefined;
    /**
     * The element's maxHeight. Can be either a String or a Number (which will have 'px' appended). Note that
     * like [height](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Widget#config-height), *reading* the value will return the numeric value in pixels.
     */
    maxHeight?: string | number | undefined;
    /**
     * The maximum time axis unit to display non-working ranges for ('hour' or 'day' etc).
     * When zooming to a view with a larger unit, no non-working time elements will be rendered.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-maxTimeAxisUnit)
     */
    maxTimeAxisUnit?: string | undefined;
    /**
     * The elements maxWidth. Can be either a String or a Number (which will have 'px' appended). Note that
     * like [width](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Widget#config-width), *reading* the value will return the numeric value in pixels.
     */
    maxWidth?: string | number | undefined;
    /**
     * The maximum zoom level to which [zoomIn](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/mixin/TimelineZoomable#function-zoomIn) will work. Defaults to the number of
     * [ViewPresets](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/preset/ViewPreset) available, see [presets](#Scheduler/view/mixin/TimelineViewPresets#property-presets)
     * for information. Unless you have modified the collection of available presets, the max zoom level is
     * milliseconds.
     */
    maxZoomLevel?: number | undefined;
    /**
     * How to align milestones in relation to their startDate. Only applies when using a `milestoneLayoutMode`
     * other than `default`. Valid values are:
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-milestoneAlign)
     */
    milestoneAlign?: "start" | "end" | "center" | undefined;
    /**
     * Factor representing the average char width in pixels used to determine milestone width when configured
     * with `milestoneLayoutMode: 'estimate'`.
     */
    milestoneCharWidth?: number | undefined;
    /**
     * How to handle milestones during event layout. How the milestones are displayed when part of the layout
     * are controlled using [milestoneTextPosition](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/mixin/SchedulerEventRendering#config-milestoneTextPosition).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-milestoneLayoutMode)
     */
    milestoneLayoutMode?: "default" | "estimate" | "data" | "measure" | undefined;
    /**
     * Position of the milestone text:
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-milestoneTextPosition)
     */
    milestoneTextPosition?: "inside" | "outside" | "always-outside" | undefined;
    /**
     * Grid's `min-height`. Defaults to `10em` to be sure that the Grid always has a height wherever it is
     * inserted.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-minHeight)
     */
    minHeight?: string | number | undefined;
    /**
     * The elements minWidth. Can be either a String or a Number (which will have 'px' appended). Note that
     * like [width](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Widget#config-width), *reading* the value will return the numeric value in pixels.
     */
    minWidth?: string | number | undefined;
    /**
     * The minimum zoom level to which [zoomOut](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/mixin/TimelineZoomable#function-zoomOut) will work. Defaults to 0 (year ticks)
     */
    minZoomLevel?: number | undefined;
    /**
     * Scheduler mode. Supported values: horizontal, vertical
     */
    mode?: "horizontal" | "vertical" | undefined;
    /**
     * Grid monitors window resize by default.
     */
    monitorResize?: Boolean | undefined;
    /**
     * Configure as `true` to allow `CTRL+click` to select multiple events in the scheduler.
     */
    multiEventSelect?: Boolean | undefined;
    /**
     * When an event bar has a width less than this value, it gets the CSS class `b-sch-event-narrow`
     * added. You may apply custom CSS rules using this class.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-narrowEventWidth)
     */
    narrowEventWidth?: number | undefined;
    /**
     * Override this method to provide a custom sort function to sort any overlapping events. This only applies
     * to the horizontal mode, where the order the events are sorted in determines their vertical placement
     * within a resource.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-overlappingEventSorter)
     * @param {EventModel} a First event
     * @param {EventModel} b Second event
     * @returns {number} Return -1 to display `a` above `b`, 1 for `b` above `a`
     */
    overlappingEventSorter?: ((a: SchedulerEventModel, b: SchedulerEventModel) => number) | undefined;
    /**
     * The owning Widget of this Widget. If this Widget is directly contained (that is, it is one of the
     * [items](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Container#property-items) of a Container), this config will be ignored. In this case
     * the owner is <strong>always</strong> the encapsulating Container.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-owner)
     */
    owner?: Widget | undefined;
    /**
     * Partners this Timeline panel with another Timeline in order to sync their region sizes (sub-grids like locked, normal will get the same width),
     * start and end dates, view preset, zoom level and scrolling position. All these values will be synced with the timeline defined as the `partner`.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-partner)
     */
    partner?: TimelineBase | undefined;
    /**
     * Set to `true` to include `startDate` and `endDate` params indicating the currently viewed date range in
     * `EventStore` load requests (when loading using `AjaxStore` or `CrudManager` functionality).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-passStartEndParameters)
     */
    passStartEndParameters?: Boolean | undefined;
    /**
     * Specify plugins (an array of classes) in config
     */
    plugins?: Function[] | undefined;
    /**
     * Maximum number of resources for which height is pre-calculated. If you have many events per
     * resource you might want to lower this number to gain some initial rendering performance.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-preCalculateHeightLimit)
     */
    preCalculateHeightLimit?: number | undefined;
    /**
     * True to preserve focused cell after loading new data
     */
    preserveFocusOnDatasetChange?: Boolean | undefined;
    /**
     * Preserve the grid's vertical scroll position when changesets are applied, as in the case of remote
     * changes, or when stores are configured with [syncDataOnLoad](https://bryntum.com/products/schedulerpro/docs/api/Core/data/Store#config-syncDataOnLoad).
     */
    preserveScroll?: Boolean | PreserveScrollOptions | undefined;
    /**
     * Specify `true` to preserve vertical scroll position after store actions that trigger a `refresh` event,
     * such as loading new data and filtering.
     */
    preserveScrollOnDatasetChange?: Boolean | undefined;
    /**
     * An array of [ViewPreset](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/preset/ViewPreset) config objects
     * which describes the available timeline layouts for this scheduler.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-presets)
     */
    presets?: ViewPresetConfig[] | undefined;
    /**
     * Prevent tooltip from being displayed on touch devices. Useful for example for buttons that display a
     * menu on click etc, since the tooltip would be displayed at the same time.
     */
    preventTooltipOnTouch?: Boolean | undefined;
    /**
     * A [ProjectModel](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/model/ProjectModel) instance or a config object. The project holds all SchedulerPro data.
     */
    project?: object | ProjectModel | ProjectModelConfig | undefined;
    /**
     * Accepts the following values:
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-projectProgressReporting)
     */
    projectProgressReporting?: string | null | undefined;
    /**
     * Unit used to set the length of the time axis when used as a component of a Calendar. Suitable units are
     * `'month'`, `'week'` and `'day'`.
     */
    range?: "day" | "week" | "month" | undefined;
    /**
     * Configure as `true` to make the scheduler read-only, by disabling any UIs for modifying data.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-readOnly)
     */
    readOnly?: Boolean | undefined;
    relayStoreEvents?: Boolean | undefined;
    /**
     * Set to `false` to only measure cell contents when double-clicking the edge between column headers.
     */
    resizeToFitIncludesHeader?: Boolean | undefined;
    /**
     * A config object used to configure the resource columns in vertical mode.
     * See [ResourceHeader](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/ResourceHeader) for more details on available properties.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-resourceColumns)
     */
    resourceColumns?: ResourceHeaderConfig | undefined;
    /**
     * Resource image extension, used when creating image path from resource name.
     */
    resourceImageExtension?: string | undefined;
    /**
     * Path to load resource images from. Used by the resource header in vertical mode and the
     * [ResourceInfoColumn](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/column/ResourceInfoColumn) in horizontal mode. Set this to display miniature
     * images for each resource using their `image` or `imageUrl` fields.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-resourceImagePath)
     */
    resourceImagePath?: string | undefined;
    /**
     * Control how much space to leave between the first event/last event and the resources edge (top/bottom
     * margin within the resource row in horizontal mode, left/right margin within the resource column in
     * vertical mode), in px. Defaults to the value of [barMargin](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/Scheduler#config-barMargin).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-resourceMargin)
     */
    resourceMargin?: number | ResourceMarginConfig | undefined;
    /**
     * Inline resources, will be loaded into the backing project's ResourceStore.
     */
    resources?: ResourceModel[] | ResourceModelConfig[] | undefined;
    /**
     * The [ResourceStore](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/data/ResourceStore) holding the resources to be rendered into the scheduler.
     */
    resourceStore?: ResourceStore | ResourceStoreConfig | undefined;
    /**
     * An empty function by default, but provided so that you can override it. This function is called each time
     * a resource time range is rendered into the schedule. It's called with `resourceTimeRangeRecord`, `resourceRecord`,
     * and `renderData` params.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-resourceTimeRangeRenderer)
     * @param {object} detail An object containing the information needed to render a ResourceTimeRangeModel.
     * @param {ResourceTimeRangeModel} detail.resourceTimeRangeRecord The resource time range record.
     * @param {ResourceModel} detail.resourceRecord The resource record.
     * @param {object} detail.renderData An object containing details about the event rendering.
     * @returns {string|DomConfig|DomConfig>} A simple string, or a DomConfig object describing the markup
     */
    resourceTimeRangeRenderer?: ((detail: {
        resourceTimeRangeRecord: ResourceTimeRangeModel;
        resourceRecord: SchedulerResourceModel;
        renderData: object;
    }) => string | DomConfig | DomConfig[]) | undefined;
    /**
     * Inline resource time ranges, will be loaded into an internally created store if
     * [ResourceTimeRanges](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/ResourceTimeRanges) is enabled.
     */
    resourceTimeRanges?: ResourceTimeRangeModel[] | ResourceTimeRangeModelConfig[] | undefined;
    /**
     * Resource time ranges store instance or config object for [ResourceTimeRanges](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/ResourceTimeRanges) feature.
     */
    resourceTimeRangeStore?: ResourceTimeRangeStore | ResourceTimeRangeStoreConfig | undefined;
    /**
     * "Break points" for which responsive config to use for columns and css.
     */
    responsiveLevels?: Record<string, string | number> | undefined;
    /**
     * Configure as `true` to have the component display a translucent ripple when its
     * [focusElement](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Widget#property-focusElement), or [element](#Core/widget/Widget#property-element) is tapped <em>if the
     * current theme supports ripples</em>. Out of the box, only the Material theme supports ripples.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-ripple)
     */
    ripple?: Boolean | {
        delegate?: string | undefined;
        color?: string | undefined;
        radius?: number | undefined;
        clip?: string | undefined;
    } | undefined;
    /**
     * If you are rendering this widget to a shadow root inside a web component, set this config to the shadowRoot. If not inside a web component, set it to `document.body`
     */
    rootElement?: HTMLElement | ShadowRoot | undefined;
    /**
     * The height in pixels of Scheduler rows.
     */
    rowHeight?: number | undefined;
    /**
     * Set to `false` to not show row lines. End result might be overruled by/differ between themes.
     */
    rowLines?: Boolean | undefined;
    /**
     * Class implementing the popup resolving *scheduling conflicts* and *calendar misconfigurations*.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-schedulingIssueResolutionPopupClass)
     */
    schedulingIssueResolutionPopupClass?: typeof SchedulingIssueResolutionPopup | undefined;
    /**
     * Configures whether the grid is scrollable in the `Y` axis. This is used to configure a [Scroller](https://bryntum.com/products/schedulerpro/docs/api/Core/helper/util/Scroller).
     * See the [scrollerClass](https://bryntum.com/products/schedulerpro/docs/api/Grid/view/GridBase#config-scrollerClass) config option.
     */
    scrollable?: Boolean | ScrollerConfig | Scroller | undefined;
    /**
     * The class to instantiate to use as the [scrollable](https://bryntum.com/products/schedulerpro/docs/api/Grid/view/GridBase#config-scrollable). Defaults to [Scroller](#Core/helper/util/Scroller).
     */
    scrollerClass?: typeof Scroller | undefined;
    /**
     * Specifies the maximum duration for extending the current [TimeSpan](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/model/TimeSpan) to allow for smooth
     * scrolling to an event.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-scrollExtensionThreshold)
     */
    scrollExtensionThreshold?: string | DurationConfig | undefined;
    /**
     * Configuration values for the [ScrollManager](https://bryntum.com/products/schedulerpro/docs/api/Core/util/ScrollManager) class on initialization. Returns the
     * [ScrollManager](https://bryntum.com/products/schedulerpro/docs/api/Core/util/ScrollManager) at runtime.
     */
    scrollManager?: ScrollManagerConfig | ScrollManager | undefined;
    /**
     * Selection configuration settings, change these properties to control how selection works and what can be
     * selected.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-selectionMode)
     */
    selectionMode?: GridSelectionMode;
    /**
     * Set to `false` to not select the resource of the event when clicking an event bar.
     */
    selectResourceOnEventNavigate?: Boolean | undefined;
    /**
     * Set to `false` to not select the row/resource when clicking the empty area in a time axis cell.
     */
    selectResourceOnScheduleClick?: Boolean | undefined;
    /**
     * `false` to not show a tooltip while creating a dependency
     */
    showCreationTooltip?: Boolean | undefined;
    /**
     * Configure as `true` to have the grid show a red "changed" tag in cells who's
     * field value has changed and not yet been committed.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-showDirty)
     */
    showDirty?: Boolean | {
        duringEdit?: Boolean | undefined;
    } | undefined;
    /**
     * If set to `true` this will show a color field in the [EventEdit](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/EventEdit) editor and also a
     * picker in the [EventMenu](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/EventMenu). Both enables the user to choose a color which will be
     * applied to the event bar's background. See EventModel's
     * [eventColor](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/model/mixin/EventModelMixin#field-eventColor) config.
     * config.
     */
    showEventColorPickers?: Boolean | undefined;
    /**
     * Set to `true` to show the lag in the tooltip
     */
    showLagInTooltip?: Boolean | undefined;
    /**
     * Set to `false` to hide recurring fields in event editor, even if the
     * [Recurring Events](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/mixin/RecurringEvents#config-enableRecurringEvents) is `true`
     * and a recurring event is being edited.
     */
    showRecurringUI?: Boolean | undefined;
    /**
     * If set to `true` this will show a color field in the [TaskEdit](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/TaskEdit) editor and also a
     * picker in the [EventMenu](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/EventMenu). Both enables the user to choose a color which will be
     * applied to the event bar's background. See EventModel's
     * [eventColor](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/model/mixin/EventModelMixin#field-eventColor) config.
     * config.
     */
    showTaskColorPickers?: Boolean | undefined;
    /**
     * Set to `true` to show a tooltip when hovering a dependency line
     */
    showTooltip?: Boolean | undefined;
    /**
     * Set to `true` to snap to the current time resolution increment while interacting with scheduled events.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-snap)
     */
    snap?: Boolean | undefined;
    /**
     * Affects drag drop and resizing of events when [snap](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/mixin/TimelineDateMapper#config-snap)
     * is enabled.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-snapRelativeToEventStartDate)
     */
    snapRelativeToEventStartDate?: Boolean | undefined;
    /**
     * The start date of the timeline (if not configure with [infiniteScroll](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/TimelineBase#config-infiniteScroll)).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-startDate)
     */
    startDate?: string | Date | undefined;
    /**
     * The name of the start date parameter that will be passed to in every `eventStore` load request.
     */
    startParamName?: string | undefined;
    /**
     * This value can be one of the following:
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-stateful)
     */
    stateful?: object | Boolean | string[] | undefined;
    /**
     * The events that, when fired by this component, should trigger it to save its state by calling
     * [saveState](https://bryntum.com/products/schedulerpro/docs/api/Core/mixin/State#function-saveState).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-statefulEvents)
     */
    statefulEvents?: object | string[] | undefined;
    /**
     * The key to use when saving this object's state in the [stateProvider](https://bryntum.com/products/schedulerpro/docs/api/Core/mixin/State#config-stateProvider). If this config is
     * not assigned, and [stateful](https://bryntum.com/products/schedulerpro/docs/api/Core/mixin/State#config-stateful) is not set to `false`, the [id](#Core/widget/Widget#config-id)
     * (if explicitly specified) will be used as the `stateId`.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-stateId)
     */
    stateId?: string | undefined;
    /**
     * The `StateProvider` to use to save and restore this object's [state](https://bryntum.com/products/schedulerpro/docs/api/Core/mixin/State#property-state). By default, `state`
     * will be saved using the [default state provider](https://bryntum.com/products/schedulerpro/docs/api/Core/state/StateProvider#property-instance-static).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-stateProvider)
     */
    stateProvider?: StateProvider | undefined;
    /**
     * Unit used to control how large steps to take when clicking the previous and next buttons in the Calendar
     * UI. Only applies when used as a component of a Calendar.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-stepUnit)
     */
    stepUnit?: string | undefined;
    /**
     * When set, the text in the major time axis header sticks in the scrolling viewport as long as possible.
     */
    stickyHeaders?: Boolean | undefined;
    /**
     * Store that holds records to display in the grid, or a store config object. If the configuration contains
     * a `readUrl`, an `AjaxStore` will be created.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-store)
     */
    store?: StoreConfig | Store | AjaxStore | AjaxStoreConfig | undefined;
    /**
     * An object containing widgets keyed by name. By default (when no `type` is given), strips are
     * [toolbars](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Toolbar). If you want to pass an array, you can use
     * the toolbar's [items](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Container#config-items).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-strips)
     */
    strips?: Record<string, ContainerItemConfig> | undefined;
    /**
     * An object containing sub grid configuration objects keyed by a `region` property.
     * By default, grid has a 'locked' region (if configured with locked columns) and a 'normal' region.
     * The 'normal' region defaults to use `flex: 1`.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-subGridConfigs)
     */
    subGridConfigs?: Record<string, SubGridConfig> | undefined;
    /**
     * Set to `true` to prevent auto calculating of a minimal [tickSize](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/mixin/TimelineEventRendering#property-tickSize)
     * to always fit the content to the screen size. Setting this property on `true` will disable [forceFit](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/TimelineBase#config-forceFit) behaviour.
     */
    suppressFit?: Boolean | undefined;
    /**
     * A [Mask](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Mask) config object, or a message to be shown when Crud Manager
     * is persisting changes on the server. Set to `null` to disable default sync mask.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-syncMask)
     */
    syncMask?: string | MaskConfig | null | undefined;
    /**
     * A configuration for the [tab](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Tab) created for this widget when it is placed in a
     * [TabPanel](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/TabPanel). For example, this config can be used to control the icon of the `tab` for
     * this widget:
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-tab)
     */
    tab?: Boolean | TabConfig | undefined;
    /**
     * A Config object representing the configuration of a [Toolbar](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Toolbar),
     * or array of config objects representing the child items of a Toolbar.
     * This creates a toolbar docked to the top of the panel immediately below the header.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-tbar)
     */
    tbar?: PagingToolbarConfig | ToolbarConfig | (string | ContainerItemConfig)[] | undefined;
    /**
     * CSS class used for terminals
     */
    terminalCls?: string | undefined;
    /**
     * Delay in ms before hiding the terminals when the mouse leaves an event bar or terminal.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-terminalHideDelay)
     */
    terminalHideDelay?: number | undefined;
    /**
     * Terminal offset from their initial position, in px. Positive values move terminals further away from the
     * event bar, negative values inside the event bar.
     */
    terminalOffset?: number | undefined;
    /**
     * Delay in ms before showing the terminals when hovering over an event bar.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-terminalShowDelay)
     */
    terminalShowDelay?: number | undefined;
    /**
     * Where (on event bar edges) to display terminals. The sides are `'start'`, `'top'`,
     * `'end'` and `'bottom'`
     */
    terminalSides?: string[] | undefined;
    /**
     * Terminal diameter in px, overrides the default CSS value for it (which might depend on theme).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-terminalSize)
     */
    terminalSize?: string | number | undefined;
    /**
     * The width/height (depending on vertical / horizontal mode) of all the time columns.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-tickSize)
     */
    tickSize?: number | undefined;
    /**
     * A [TimeAxis](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/data/TimeAxis) config object or instance, used to create a backing data store of
     * 'ticks' providing the input date data for the time axis of timeline panel. Created automatically if none
     * supplied.
     */
    timeAxis?: TimeAxisConfig | TimeAxis | undefined;
    /**
     * Inline time ranges, will be loaded into an internally created store if [TimeRanges](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/TimeRanges)
     * is enabled.
     */
    timeRanges?: TimeSpan[] | TimeSpanConfig[] | undefined;
    /**
     * The time ranges store instance for [TimeRanges](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/TimeRanges) feature.
     */
    timeRangeStore?: StoreConfig | Store | undefined;
    /**
     * Set to a time zone or a UTC offset. This will set the projects
     * [timeZone](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/model/ProjectModel#config-timeZone) config accordingly. As this config is only a referer,
     * please see project's config [documentation](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/model/ProjectModel#config-timeZone) for more
     * information.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-timeZone)
     */
    timeZone?: string | number | undefined;
    /**
     * A title to display in the header or owning TabPanel. Causes creation and docking of a header
     * to the top if no header is configured.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-title)
     */
    title?: string | undefined;
    /**
     * The [tools](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Tool) to add either before or after the `title` in the Panel header. Each
     * property name is the reference by which an instantiated tool may be retrieved from the live
     * `[tools](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/mixin/Toolable#property-tools)` property.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-tools)
     */
    tools?: Record<string, ToolConfig> | undefined;
    /**
     * A template function allowing you to configure the contents of the tooltip shown when hovering a
     * dependency line. You can return either an HTML string or a [DomConfig](https://bryntum.com/products/schedulerpro/docs/api/Core/helper/DomHelper#typedef-DomConfig) object.
     * @param {DependencyBaseModel} dependency The dependency record
     * @returns {string|DomConfig}
     */
    tooltipTemplate?: ((dependency: DependencyBaseModel) => string | DomConfig) | undefined;
    /**
     * Animation transition duration in milliseconds.
     */
    transitionDuration?: number | undefined;
    /**
     * Configure as `true` to trigger `selectionChange` when removing a selected event/assignment.
     */
    triggerSelectionChangeOnRemove?: Boolean | undefined;
    /**
     * Custom CSS class name suffixes to apply to the elements rendered by this widget. This may be specified
     * as a space separated string, an array of strings, or as an object in which property names with truthy
     * values are used as the class names.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-ui)
     */
    ui?: string | object | undefined;
    /**
     * By default, scrolling the schedule will update the [timelineContext](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/SchedulerBase#property-timelineContext) to reflect the new
     * currently hovered context. When displaying a large number of events on screen at the same time, this will
     * have a slight impact on scrolling performance. In such scenarios, opt out of this behavior by setting
     * this config to `false`.
     */
    updateTimelineContextOnScroll?: Boolean | undefined;
    /**
     * By default, the day of week and week of month of the event's start date are used to create
     * helpful contextual recurrence types when editing a non-recurring event record and choosing
     * an initial recurrence type.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-useContextualRecurrenceRules)
     */
    useContextualRecurrenceRules?: Boolean | undefined;
    /**
     * By default, scheduler fade events in on load. Specify `false` to prevent this animation or specify one
     * of the available animation types to use it (`true` equals `'fade-in'`):
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-useInitialAnimation)
     */
    useInitialAnimation?: string | Boolean | undefined;
    /**
     * The time axis column config for vertical [mode](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/SchedulerBase#config-mode).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-verticalTimeAxisColumn)
     */
    verticalTimeAxisColumn?: VerticalTimeAxisColumnConfig | undefined;
    /**
     * A string key used to lookup a predefined [ViewPreset](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/preset/ViewPreset) (e.g. 'weekAndDay', 'hourAndDay'),
     * managed by [PresetManager](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/preset/PresetManager). See [PresetManager](#Scheduler/preset/PresetManager) for more information.
     * Or a config object for a viewPreset.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-viewPreset)
     */
    viewPreset?: string | ViewPresetConfig | undefined;
    /**
     * A date to bring into view initially on the scrollable timeline.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-visibleDate)
     */
    visibleDate?: Date | VisibleDate | undefined;
    /**
     * Integer number indicating the size of timespan during zooming. When zooming, the timespan is adjusted to make
     * the scrolling area `visibleZoomFactor` times wider than the timeline area itself. Used in
     * [zoomToSpan](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/mixin/TimelineZoomable#function-zoomToSpan) and [zoomToLevel](#Scheduler/view/mixin/TimelineZoomable#function-zoomToLevel) functions.
     */
    visibleZoomFactor?: number | undefined;
    /**
     * A valid JS day index between 0-6 (0: Sunday, 1: Monday etc.) to be considered the start day of the week.
     * When omitted, the week start day is retrieved from the active locale class.
     */
    weekStartDay?: number | undefined;
    /**
     * A widgets weight determines its position among siblings when added to a [Container](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Container).
     * Higher weights go further down.
     */
    weight?: number | undefined;
    /**
     * Widget's width, used to set element style.width. Either specify a valid width string or a number, which
     * will get 'px' appended. We recommend using CSS as the primary way to control width, but in some cases
     * this config is convenient.
     */
    width?: string | number | undefined;
    /**
     * An object with format `{ fromDay, toDay, fromHour, toHour }` that describes the working days and hours.
     * This object will be used to populate TimeAxis [include](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/data/TimeAxis#config-include) property.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-workingTime)
     */
    workingTime?: {
        fromDay?: number | undefined;
        toDay?: number | undefined;
        fromHour?: number | undefined;
        toHour?: number | undefined;
    } | undefined;
    /**
     * Whether the originally rendered timespan should be preserved while zooming. By default, it is set to `false`,
     * meaning the timeline panel will adjust the currently rendered timespan to limit the amount of HTML content to
     * render. When setting this option to `true`, be careful not to allow to zoom a big timespan in seconds
     * resolution for example. That will cause <strong>a lot</strong> of HTML content to be rendered and affect performance. You
     * can use [minZoomLevel](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/mixin/TimelineZoomable#config-minZoomLevel) and [maxZoomLevel](#Scheduler/view/mixin/TimelineZoomable#config-maxZoomLevel) config options for that.
     */
    zoomKeepsOriginalTimespan?: Boolean | undefined;
    /**
     * If true, you can zoom in and out on the time axis using CTRL-key + mouse wheel.
     */
    zoomOnMouseWheel?: Boolean | undefined;
    /**
     * True to zoom to time span when double-clicking a time axis cell.
     */
    zoomOnTimeAxisDoubleClick?: Boolean | undefined;
    /**
     * This feature temporarily visualizes [calendars](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/model/CalendarModel) for the event or resource
     * calendar (controlled by the [calendar](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/CalendarHighlight#config-calendar) config). The calendars are highlighted while a user is creating,
     * dragging or resizing a task. Enabling this feature makes it easier for the end user to understand the underlying
     * rules of the schedule.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/CalendarHighlight)
     */
    calendarHighlightFeature?: string | object | Boolean | CalendarHighlightConfig | CalendarHighlight | undefined;
    /**
     * Allows using `[Ctrl/CMD + C]`, `[Ctrl/CMD + X]` and `[Ctrl/CMD + V]` to cut, copy and paste cell or cell ranges. Also
     * makes cut, copy and paste actions available via the cell context menu.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/CellCopyPaste)
     */
    cellCopyPasteFeature?: string | object | Boolean | CellCopyPasteConfig | CellCopyPaste | undefined;
    /**
     * Extends the [CellEdit](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/CellEdit) to encapsulate SchedulerPro functionality.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/CellEdit)
     */
    cellEditFeature?: string | object | Boolean | CellEditConfig | CellEdit | undefined;
    /**
     * Right click to display context menu for cells.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/CellMenu)
     */
    cellMenuFeature?: string | object | Boolean | CellMenuConfig | CellMenu | undefined;
    /**
     * Displays a tooltip when hovering cells.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/CellTooltip)
     */
    cellTooltipFeature?: string | object | Boolean | CellTooltipConfig | CellTooltip | undefined;
    /**
     * Enables the [autoWidth](https://bryntum.com/products/schedulerpro/docs/api/Grid/column/Column#config-autoWidth) config for a grid's columns.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/ColumnAutoWidth)
     */
    columnAutoWidthFeature?: string | object | Boolean | ColumnAutoWidthConfig | ColumnAutoWidth | undefined;
    /**
     * Displays a toolbar while dragging column headers. Drop on a button in the toolbar to activate a certain function,
     * for example to group by that column. This feature simplifies certain operations on touch devices.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/ColumnDragToolbar)
     */
    columnDragToolbarFeature?: string | object | Boolean | ColumnDragToolbarConfig | ColumnDragToolbar | undefined;
    /**
     * Displays column lines for ticks, with a different styling for major ticks (by default they are darker). If this
     * feature is disabled, no lines are shown. If it's enabled, line are shown for the tick level which is set in current
     * ViewPreset. Please see [columnLinesFor](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/preset/ViewPreset#field-columnLinesFor) config for details.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/ColumnLines)
     */
    columnLinesFeature?: string | object | Boolean | ColumnLinesConfig | ColumnLines | undefined;
    /**
     * Displays a column picker (to show/hide columns) in the header context menu. Columns can be displayed in sub menus
     * by region or tag. Grouped headers are displayed as menu hierarchies.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/ColumnPicker)
     */
    columnPickerFeature?: string | object | Boolean | ColumnPickerConfig | ColumnPicker | undefined;
    /**
     * Allows user to rename columns by either right-clicking column header or using keyboard shortcuts when column header
     * is focused.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/ColumnRename)
     */
    columnRenameFeature?: string | object | Boolean | ColumnRenameConfig | ColumnRename | undefined;
    /**
     * Allows user to reorder columns by dragging headers. To get notified about column reorder listen to `change` event
     * on [columns](https://bryntum.com/products/schedulerpro/docs/api/Grid/data/ColumnStore) store.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/ColumnReorder)
     */
    columnReorderFeature?: string | object | Boolean | ColumnReorderConfig | ColumnReorder | undefined;
    /**
     * Enables user to resize columns by dragging a handle on the right hand side of the header. To get notified about column
     * resize listen to `change` event on [columns](https://bryntum.com/products/schedulerpro/docs/api/Grid/data/ColumnStore) store.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/ColumnResize)
     */
    columnResizeFeature?: string | object | Boolean | ColumnResizeConfig | ColumnResize | undefined;
    /**
     * This feature implements support for project transactions and is used by default in Scheduler Pro. For general
     * dependencies documentation see [Dependencies](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/Dependencies).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/Dependencies)
     */
    dependenciesFeature?: string | object | Boolean | DependenciesConfig | Dependencies | undefined;
    /**
     * Feature that displays a popup containing fields for editing dependency data.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/DependencyEdit)
     */
    dependencyEditFeature?: string | object | Boolean | DependencyEditConfig | DependencyEdit | undefined;
    /**
     * Feature that allows showing additional time before &amp; after an event, to visualize things like travel time - or the time you
     * need to prepare a room for a meeting + clean it up after.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/EventBuffer)
     */
    eventBufferFeature?: string | object | Boolean | EventBufferConfig | EventBuffer | undefined;
    /**
     * Allow using [Ctrl/CMD + C/X] and [Ctrl/CMD + V] to copy/cut and paste events.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/EventCopyPaste)
     */
    eventCopyPasteFeature?: string | object | Boolean | EventCopyPasteConfig | EventCopyPaste | undefined;
    /**
     * Allows user to drag and drop events within the scheduler, to change `startDate` or resource assignment.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/EventDrag)
     */
    eventDragFeature?: string | object | Boolean | EventDragConfig | EventDrag | undefined;
    /**
     * Feature that allows the user to create new events by dragging in empty parts of the scheduler rows.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/EventDragCreate)
     */
    eventDragCreateFeature?: string | object | Boolean | EventDragCreateConfig | EventDragCreate | undefined;
    /**
     * Enables users to click and drag to select events (or assignments in multi assignment mode) inside the Scheduler's
     * timeline. Press CTRL/CMD-key to extend an existing selection.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/EventDragSelect)
     */
    eventDragSelectFeature?: string | object | Boolean | EventDragSelectConfig | EventDragSelect | undefined;
    /**
     * Feature that displays a popup containing widgets for editing event data.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/EventEdit)
     */
    eventEditFeature?: string | object | Boolean | EventEditConfig | EventEdit | undefined;
    /**
     * Adds event filter menu items to the timeline header context menu.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/EventFilter)
     */
    eventFilterFeature?: string | object | Boolean | EventFilterConfig | EventFilter | undefined;
    /**
     * Displays a context menu for events. Items are populated by other features and/or application code.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/EventMenu)
     */
    eventMenuFeature?: string | object | Boolean | EventMenuConfig | EventMenu | undefined;
    /**
     * Feature that allows rendering non-working time ranges into event bars (weekends for Scheduler, effective calendar for
     * SchedulerPro):
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/EventNonWorkingTime)
     */
    eventNonWorkingTimeFeature?: string | object | Boolean | EventNonWorkingTimeConfig | EventNonWorkingTime | undefined;
    /**
     * Feature that allows resizing an event by dragging its start or end.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/EventResize)
     */
    eventResizeFeature?: string | object | Boolean | EventResizeConfig | EventResize | undefined;
    /**
     * Allows user to drag and drop event segments within the row.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/EventSegmentDrag)
     */
    eventSegmentDragFeature?: string | object | Boolean | EventSegmentDragConfig | EventSegmentDrag | undefined;
    /**
     * Feature that allows resizing an event segment by dragging its end.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/EventSegmentResize)
     */
    eventSegmentResizeFeature?: string | object | Boolean | EventSegmentResizeConfig | EventSegmentResize | undefined;
    /**
     * This feature provides segmented events support. It implements rendering of such events and also adds a entries to the
     * event context menu allowing to split the selected event and rename segments.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/EventSegments)
     */
    eventSegmentsFeature?: string | object | Boolean | EventSegmentsConfig | EventSegments | undefined;
    /**
     * Displays a tooltip when hovering events. The template used to render the tooltip can be customized, see [template](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/EventTooltip#config-template).
     * Config options are also applied to the tooltip shown, see [Tooltip](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Tooltip) for available options.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/EventTooltip)
     */
    eventTooltipFeature?: string | object | Boolean | EventTooltipConfig | EventTooltip | undefined;
    /**
     * <strong>NOTE</strong>: This class requires a 3rd party library to operate.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/experimental/ExcelExporter)
     */
    excelExporterFeature?: string | object | Boolean | ExcelExporterConfig | ExcelExporter | undefined;
    /**
     * An experimental feature that lets users drop files on a Widget. The widget fires an event when a file is dropped onto it.
     * In the event, you get access to the raw files as strings, that were parsed by calling `readAsBinaryString`.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/experimental/FileDrop)
     */
    fileDropFeature?: string | object | Boolean | FileDropConfig | FileDrop | undefined;
    /**
     * This feature adds a fill handle to a Grid range selection, which when dragged, fills the cells being dragged over
     * with values based on the values in the original selected range. This is similar to functionality normally seen in
     * various spreadsheet applications.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/FillHandle)
     */
    fillHandleFeature?: string | object | Boolean | FillHandleConfig | FillHandle | undefined;
    /**
     * Feature that allows filtering of the grid by settings filters on columns. The actual filtering is done by the store.
     * For info on programmatically handling filters, see [StoreFilter](https://bryntum.com/products/schedulerpro/docs/api/Core/data/mixin/StoreFilter).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/Filter)
     */
    filterFeature?: string | object | Boolean | FilterConfig | Filter | undefined;
    /**
     * Feature that allows filtering of the grid by entering filters on column headers.
     * The actual filtering is done by the store.
     * For info on programmatically handling filters, see [StoreFilter](https://bryntum.com/products/schedulerpro/docs/api/Core/data/mixin/StoreFilter).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/FilterBar)
     */
    filterBarFeature?: string | object | Boolean | FilterBar | FilterBarConfig | undefined;
    /**
     * Enables rendering and handling of row groups. The actual grouping is done in the store, but triggered by `[shift]` +
     * clicking headers or by using two finger tap (one on header, one anywhere on grid). Use `[shift]` + `[alt]` + click to
     * remove a column grouper.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/Group)
     */
    groupFeature?: string | object | Boolean | Group | GroupConfig | undefined;
    /**
     * A special version of the Grid GroupSummary feature that enables summaries within scheduler. To use a single summary
     * it is easiest to configure [renderer](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/GroupSummary#config-renderer), for multiple summaries see [summaries](#Scheduler/feature/GroupSummary#config-summaries).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/GroupSummary)
     */
    groupSummaryFeature?: string | object | Boolean | GroupSummaryConfig | GroupSummary | undefined;
    /**
     * Right click column header or focus it and press SPACE key to show the context menu for headers.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/HeaderMenu)
     */
    headerMenuFeature?: string | object | Boolean | HeaderMenu | HeaderMenuConfig | undefined;
    /**
     * Enables users to click and drag to zoom to a date range in Scheduler's header time axis. Only supported in horizontal
     * mode.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/HeaderZoom)
     */
    headerZoomFeature?: string | object | Boolean | HeaderZoomConfig | HeaderZoom | undefined;
    /**
     * Displays labels at positions [top](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/Labels#config-top), [right](#Scheduler/feature/Labels#config-right), [bottom](#Scheduler/feature/Labels#config-bottom) and
     * [left](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/Labels#config-left).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/Labels)
     */
    labelsFeature?: string | object | Boolean | LabelsConfig | Labels | undefined;
    /**
     * This feature allows resources which satisfy a certain condition to be locked at the top of the scheduler.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/LockRows)
     */
    lockRowsFeature?: string | object | Boolean | LockRowsConfig | LockRows | undefined;
    /**
     * This feature merges cells that have the same value in sorted (or [optionally](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/MergeCells#config-sortedOnly) any) columns
     * configured to [mergeCells](https://bryntum.com/products/schedulerpro/docs/api/Grid/column/Column#config-mergeCells).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/MergeCells)
     */
    mergeCellsFeature?: string | object | Boolean | MergeCells | MergeCellsConfig | undefined;
    /**
     * A feature that renders child events nested inside their parent. Requires Scheduler Pro to use a tree event store
     * (normally handled automatically when events in data has children).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/NestedEvents)
     */
    nestedEventsFeature?: string | object | Boolean | NestedEventsConfig | NestedEvents | undefined;
    /**
     * Feature that allows styling of weekends (and other non-working time) by adding timeRanges for those days.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/NonWorkingTime)
     */
    nonWorkingTimeFeature?: string | object | Boolean | NonWorkingTimeConfig | NonWorkingTime | undefined;
    /**
     * Makes the scheduler's timeline pannable by dragging with the mouse. Try it out in the demo below.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/Pan)
     */
    panFeature?: string | object | Boolean | PanConfig | Pan | undefined;
    /**
     * Generates PDF/PNG files from the Scheduler component.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/export/PdfExport)
     */
    pdfExportFeature?: string | object | Boolean | PdfExportConfig | PdfExport | undefined;
    /**
     * This feature visualizes the [percentDone](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/model/mixin/PercentDoneMixin#field-percentDone) field as a
     * progress bar on the event elements. Each progress bar also optionally has a drag handle which users can drag can
     * change the value.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/PercentBar)
     */
    percentBarFeature?: string | object | Boolean | PercentBarConfig | PercentBar | undefined;
    /**
     * Allows printing Scheduler contents using browser print dialog.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/export/Print)
     */
    printFeature?: string | object | Boolean | PrintConfig | Print | undefined;
    /**
     * Feature that allows the user to search in a column by focusing a cell and typing. Navigate between hits using the
     * keyboard, [f3] or [ctrl]/[cmd] + [g] moves to next, also pressing [shift] moves to previous.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/QuickFind)
     */
    quickFindFeature?: string | object | Boolean | QuickFind | QuickFindConfig | undefined;
    /**
     * Makes the splitter between grid [sections](https://bryntum.com/products/schedulerpro/docs/api/Grid/view/SubGrid) draggable, to let users resize, and
     * collapse/expand the sections.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/RegionResize)
     */
    regionResizeFeature?: string | object | Boolean | RegionResize | RegionResizeConfig | undefined;
    /**
     * Applicable only for Scheduler in `vertical` mode. Right click resource header cells to display a context menu.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/ResourceMenu)
     */
    resourceMenuFeature?: string | object | Boolean | ResourceMenuConfig | ResourceMenu | undefined;
    /**
     * Feature that highlights the non-working intervals for resources based on their [calendar](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/model/ResourceModel#field-calendar).
     * If a resource has no calendar defined, the project's calendar will be used. The non-working time interval can
     * also be recurring. You can find a live example showing how to achieve this in the [Resource Non-Working Time Demo](../examples/resource-non-working-time/).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/ResourceNonWorkingTime)
     */
    resourceNonWorkingTimeFeature?: string | object | Boolean | ResourceNonWorkingTimeConfig | ResourceNonWorkingTime | undefined;
    /**
     * Feature that draws resource time ranges, shaded areas displayed behind events. These zones are similar to events in
     * that they have a start and end date but different in that they do not take part in the event layout, and they always
     * occupy full row height.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/ResourceTimeRanges)
     */
    resourceTimeRangesFeature?: string | object | Boolean | ResourceTimeRangesConfig | ResourceTimeRanges | undefined;
    /**
     * Allow using [Ctrl/CMD + C/X] and [Ctrl/CMD + V] to copy/cut-and-paste rows. Also makes cut, copy and paste actions
     * available via the cell context menu.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/RowCopyPaste)
     */
    rowCopyPasteFeature?: string | object | Boolean | RowCopyPaste | RowCopyPasteConfig | undefined;
    /**
     * Enables expanding of Grid rows by either row click or double click, or by adding a separate Grid column which renders
     * a button that expands or collapses the row.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/RowExpander)
     */
    rowExpanderFeature?: string | object | Boolean | RowExpander | RowExpanderConfig | undefined;
    /**
     * This feature implements support for project transactions and used by default in Gantt. For general RowReorder feature
     * documentation see [RowReorder](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/RowReorder).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/RowReorder)
     */
    rowReorderFeature?: string | object | Boolean | RowReorderConfig | RowReorder | undefined;
    /**
     * Enables user to change row height by dragging the bottom row border. After a resize operation, the [rowHeight](https://bryntum.com/products/schedulerpro/docs/api/Grid/data/GridRowModel#field-rowHeight)
     * field of the record is updated (when [applyToAllRows](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/RowResize#config-applyToAllRows) is `false`) and the [eventLayout](#Scheduler/model/ResourceModel#field-eventLayout) of the dragged resource
     * row will be switched to `pack` as a result (only applies when `stack` is used by default).
     * `barMargin` and `resourceMargin` will also be shrunk as you reduce the height of a row.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/RowResize)
     */
    rowResizeFeature?: string | object | Boolean | RowResizeConfig | RowResize | undefined;
    /**
     * Allow visually selecting a schedule "cell" by clicking, or [any other pointer gesture](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/ScheduleContext#config-triggerEvent).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/ScheduleContext)
     */
    scheduleContextFeature?: string | object | Boolean | ScheduleContextConfig | ScheduleContext | undefined;
    /**
     * Displays a context menu for empty parts of the schedule. Items are populated in the first place
     * by configurations of this Feature, then by other features and/or application code.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/ScheduleMenu)
     */
    scheduleMenuFeature?: string | object | Boolean | ScheduleMenuConfig | ScheduleMenu | undefined;
    /**
     * Feature that displays a tooltip containing the time at the mouse position when hovering empty parts of the schedule.
     * To hide the schedule tooltip, just disable this feature:
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/ScheduleTooltip)
     */
    scheduleTooltipFeature?: string | object | Boolean | ScheduleTooltipConfig | ScheduleTooltip | undefined;
    /**
     * This feature injects buttons to the beginning and end of each row that will scroll to the next or previous event
     * outside the current view. It can optionally show a label along with the button, using the
     * [labelRenderer](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/ScrollButtons#config-labelRenderer). Only supported in horizontal [mode](#Scheduler/view/SchedulerBase#config-mode)
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/ScrollButtons)
     */
    scrollButtonsFeature?: string | object | Boolean | ScrollButtonsConfig | ScrollButtons | undefined;
    /**
     * <div class="external-example " data-file="Grid/feature/Search.js"></div>
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/Search)
     */
    searchFeature?: string | object | Boolean | Search | SearchConfig | undefined;
    /**
     * Feature that displays a text field to edit the event name. You can control the flow of this by listening to the events relayed by this class from the underlying [Editor](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Editor).
     * To use this feature, you also need to disable the built-in default editing feature:
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/SimpleEventEdit)
     */
    simpleEventEditFeature?: string | object | Boolean | SimpleEventEditConfig | SimpleEventEdit | undefined;
    /**
     * Allows sorting of grid by clicking (or tapping) headers, also displays which columns grid is sorted by (numbered if
     * using multisort). Use modifier keys for multisorting: [Ctrl/CMD + click] to add sorter, [Ctrl/CMD + Alt + click] to remove sorter.
     * The actual sorting is done by the store, see [Store.sort()](https://bryntum.com/products/schedulerpro/docs/api/Core/data/mixin/StoreSort#function-sort).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/Sort)
     */
    sortFeature?: string | object | Boolean | Sort | SortConfig | undefined;
    /**
     * This feature allows splitting the Scheduler into multiple views, either by using the cell context menu, or
     * programmatically by calling [split()](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/Split#function-split).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/Split)
     */
    splitFeature?: string | object | Boolean | SplitConfig | Split | undefined;
    /**
     * A feature which pins configurable content from a grid row to the top of the grid
     * while the row scrolls off the top but is still visible.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/StickyCells)
     */
    stickyCellsFeature?: string | object | Boolean | StickyCells | StickyCellsConfig | undefined;
    /**
     * This feature applies native `position: sticky` to event contents in horizontal mode, keeping the contents in view as
     * long as possible on scroll. For vertical mode it uses a programmatic solution to achieve the same result.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/StickyEvents)
     */
    stickyEventsFeature?: string | object | Boolean | StickyEventsConfig | StickyEvents | undefined;
    /**
     * Stripes rows by adding alternating CSS classes to all row elements (`b-even` and `b-odd`).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/Stripe)
     */
    stripeFeature?: string | object | Boolean | Stripe | StripeConfig | undefined;
    /**
     * A special version of the Grid Summary feature. This feature displays a summary row in the grid footer.
     * For regular columns in the locked section - specify type of summary on columns, available types are:
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/Summary)
     */
    summaryFeature?: string | object | Boolean | SummaryConfig | Summary | undefined;
    /**
     * Feature that displays a [Task editor](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/widget/SchedulerTaskEditor), allowing users to edit task data.
     * The Task editor is a popup containing tabs with fields for editing task data.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/TaskEdit)
     */
    taskEditFeature?: string | object | Boolean | TaskEditConfig | TaskEdit | undefined;
    /**
     * Adds scheduler specific menu items to the timeline header context menu.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/TimeAxisHeaderMenu)
     */
    timeAxisHeaderMenuFeature?: string | object | Boolean | TimeAxisHeaderMenuConfig | TimeAxisHeaderMenu | undefined;
    /**
     * Feature that renders global ranges of time in the timeline. Use this feature to visualize a `range` like a 1 hr lunch
     * or some important point in time (a `line`, i.e. a range with 0 duration). This feature can also show a current time
     * indicator if you set [showCurrentTimeLine](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/TimeRanges#config-showCurrentTimeLine) to true. To style the rendered elements, use the
     * [cls](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/model/TimeSpan#field-cls) field of the `TimeSpan` class.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/TimeRanges)
     */
    timeRangesFeature?: string | object | Boolean | TimeRangesConfig | TimeRanges | undefined;
    /**
     * Feature that allows selection of a time span in the time axis header. When a time span is selected in the header,
     * a [timeSelectionChange](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/TimeSelection#event-timeSelectionChange) event is fired.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/TimeSelection)
     */
    timeSelectionFeature?: string | object | Boolean | TimeSelectionConfig | TimeSelection | undefined;
    /**
     * This feature exposes methods on the owning Scheduler or Gantt widget which you can use to highlight one or multiple time spans
     * in the schedule. Please see [highlightTimeSpan](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/TimeSpanHighlight#function-highlightTimeSpan) and [highlightTimeSpans](#SchedulerPro/feature/TimeSpanHighlight#function-highlightTimeSpans) to learn
     * more or try the demo below:
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/TimeSpanHighlight)
     */
    timeSpanHighlightFeature?: string | object | Boolean | TimeSpanHighlightConfig | TimeSpanHighlight | undefined;
    /**
     * Feature that makes the grid work more like a tree. Included by default in [TreeGrid](https://bryntum.com/products/schedulerpro/docs/api/Grid/view/TreeGrid). Requires
     * exactly one [TreeColumn](https://bryntum.com/products/schedulerpro/docs/api/Grid/column/TreeColumn) among grids columns. That column will have its renderer replaced with a
     * tree renderer that adds padding and icon to give the appearance of a tree. The original renderer is preserved and
     * also called.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/Tree)
     */
    treeFeature?: string | object | Boolean | Tree | TreeConfig | undefined;
    /**
     * A feature that allows transforming a flat dataset (or the leaves of a hierarchical) into a tree by specifying a
     * record field per parent level. Parents are generated based on each leaf's value for those fields.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/TreeGroup)
     */
    treeGroupFeature?: string | object | Boolean | TreeGroup | TreeGroupConfig | undefined;
    /**
     * Captures versions (snapshots) of the active project, including a detailed log of the changes new in each version.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/Versions)
     */
    versionsFeature?: string | object | Boolean | VersionsConfig | Versions | undefined;
}>, {
    instance: {
        value?: SchedulerProBase | undefined;
    };
    refElement: import("vue").Ref<HTMLDivElement | undefined>;
    teleports: import("vue").Ref<Map<any, any>>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    rowMouseLeave: (params: any) => void;
    scheduleClick: (params: string | ((event: {
        source: Scheduler;
        date: Date;
        tick: TimeSpan;
        tickIndex: number;
        tickStartDate: Date;
        tickEndDate: Date;
        row: Row;
        index: number;
        resourceRecord: SchedulerResourceModel;
        event: MouseEvent;
    }) => void)) => void;
    scheduleContextMenu: (params: string | ((event: {
        source: Scheduler;
        date: Date;
        tick: TimeSpan;
        tickIndex: number;
        tickStartDate: Date;
        tickEndDate: Date;
        row: Row;
        index: number;
        resourceRecord: SchedulerResourceModel;
        event: MouseEvent;
    }) => void)) => void;
    scheduleDblClick: (params: string | ((event: {
        source: Scheduler;
        date: Date;
        tick: TimeSpan;
        tickIndex: number;
        tickStartDate: Date;
        tickEndDate: Date;
        row: Row;
        index: number;
        resourceRecord: SchedulerResourceModel;
        event: MouseEvent;
    }) => void)) => void;
    scheduleMenuBeforeShow: (params: string | ((event: {
        source: Scheduler;
        items: Record<string, MenuItemConfig>;
        eventRecord: SchedulerEventModel;
        resourceRecord: SchedulerResourceModel;
        date: Date;
        assignmentRecord: SchedulerAssignmentModel;
        eventElement: HTMLElement;
    }) => boolean | void | Promise<boolean>)) => void;
    scheduleMenuItem: (params: string | ((event: {
        source: Scheduler;
        item: MenuItem;
        resourceRecord: SchedulerResourceModel;
        date: Date;
        element: HTMLElement;
    }) => void)) => void;
    scheduleMenuShow: (params: string | ((event: {
        source: Scheduler;
        items: Record<string, MenuItemConfig>;
        menu: Menu;
        resourceRecord: SchedulerResourceModel;
        date: Date;
        targetElement: HTMLElement;
    }) => void)) => void;
    scheduleMouseDown: (params: string | ((event: {
        source: Scheduler;
        date: Date;
        tickStartDate: Date;
        tickEndDate: Date;
        row: Row;
        index: number;
        resourceRecord: SchedulerResourceModel;
        event: MouseEvent;
    }) => void)) => void;
    scheduleMouseEnter: (params: string | ((event: {
        source: Scheduler;
        date: Date;
        tickStartDate: Date;
        tickEndDate: Date;
        row: Row;
        index: number;
        resourceRecord: SchedulerResourceModel;
        event: MouseEvent;
    }) => void)) => void;
    scheduleMouseLeave: (params: string | ((event: {
        source: Scheduler;
        event: MouseEvent;
    }) => void)) => void;
    scheduleMouseMove: (params: string | ((event: {
        source: Scheduler;
        date: Date;
        tick: TimeSpan;
        tickIndex: number;
        tickStartDate: Date;
        tickEndDate: Date;
        row: Row;
        index: number;
        resourceRecord: SchedulerResourceModel;
        event: MouseEvent;
    }) => void)) => void;
    scheduleMouseUp: (params: string | ((event: {
        source: Scheduler;
        date: Date;
        tickStartDate: Date;
        tickEndDate: Date;
        row: Row;
        index: number;
        resourceRecord: SchedulerResourceModel;
        event: MouseEvent;
    }) => void)) => void;
    scroll: (params: string | ((event: {
        source: Grid;
        scrollTop: number;
    }) => void)) => void;
    scrollButtonClick: (params: string | ((event: {
        domEvent: Event;
    }) => boolean | void | Promise<boolean>)) => void;
    selectionChange: (params: string | ((event: {
        action: "select" | "deselect";
        mode: "row" | "cell";
        source: Grid;
        deselected: Model[];
        selected: Model[];
        selection: Model[];
        deselectedCells: GridLocation[];
        selectedCells: GridLocation[];
        cellSelection: GridLocation[];
    }) => void)) => void;
    selectionModeChange: (params: string | ((event: {
        selectionMode: object;
    }) => void)) => void;
    show: (params: string | ((event: {
        source: Widget;
    }) => void)) => void;
    split: (params: string | ((event: {
        subViews: GridBase[];
        options: {
            direction: "both" | "horizontal" | "vertical";
            atColumn: Column;
            atRecord: Model;
        };
    }) => void)) => void;
    splitterCollapseClick: (params: string | ((event: {
        source: Grid;
        subGrid: SubGrid;
        domEvent: Event;
    }) => boolean | void | Promise<boolean>)) => void;
    splitterDragEnd: (params: string | ((event: {
        source: Grid;
        subGrid: SubGrid;
        domEvent: Event;
    }) => void)) => void;
    splitterDragStart: (params: string | ((event: {
        source: Grid;
        subGrid: SubGrid;
        domEvent: Event;
    }) => void)) => void;
    splitterExpandClick: (params: string | ((event: {
        source: Grid;
        subGrid: SubGrid;
        domEvent: Event;
    }) => boolean | void | Promise<boolean>)) => void;
    startCellEdit: (params: string | ((event: {
        source: Grid;
        editorContext: {
            editor: Editor;
            column: Column;
            record: Model;
            cell: HTMLElement;
            value: any;
        };
    }) => void)) => void;
    subGridCollapse: (params: string | ((event: {
        source: Grid;
        subGrid: SubGrid;
    }) => void)) => void;
    subGridExpand: (params: string | ((event: {
        source: Grid;
        subGrid: SubGrid;
    }) => void)) => void;
    taskEditCanceled: (params: string | ((event: {
        source: SchedulerPro;
        taskRecord: EventModel;
        editor: TaskEditorBase;
    }) => void)) => void;
    timeAxisChange: (params: string | ((event: {
        source: Scheduler;
        config: {
            startDate: Date;
            endDate: Date;
        };
    }) => void)) => void;
    timeAxisHeaderClick: (params: string | ((event: {
        source: TimeAxisColumn | VerticalTimeAxisColumn;
        startDate: Date;
        endDate: Date;
        event: Event;
    }) => void)) => void;
    timeAxisHeaderContextMenu: (params: string | ((event: {
        source: TimeAxisColumn | VerticalTimeAxisColumn;
        startDate: Date;
        endDate: Date;
        event: Event;
    }) => void)) => void;
    timeAxisHeaderDblClick: (params: string | ((event: {
        source: TimeAxisColumn | VerticalTimeAxisColumn;
        startDate: Date;
        endDate: Date;
        event: Event;
    }) => void)) => void;
    timeAxisHeaderMenuBeforeShow: (params: string | ((event: {
        source: Scheduler;
        menu: Menu;
        items: Record<string, MenuItemConfig>;
        column: Column;
    }) => boolean | void | Promise<boolean>)) => void;
    timeAxisHeaderMenuItem: (params: string | ((event: {
        source: Scheduler;
        menu: Menu;
        item: MenuItem;
        column: Column;
    }) => void)) => void;
    timeAxisHeaderMenuShow: (params: string | ((event: {
        source: Scheduler;
        menu: Menu;
        items: Record<string, MenuItemConfig>;
        column: Column;
    }) => void)) => void;
    timelineContextChange: (params: string | ((event: {
        oldContext: TimelineContext;
        context: TimelineContext;
    }) => void)) => void;
    timelineViewportResize: (params: string | ((event: {
        source: Widget;
        width: number;
        height: number;
        oldWidth: number;
        oldHeight: number;
    }) => void)) => void;
    timeRangeHeaderClick: (params: string | ((event: {
        source: Scheduler;
        timeRangeRecord: TimeSpan;
        domEvent: MouseEvent;
    }) => void)) => void;
    timeRangeHeaderContextMenu: (params: string | ((event: {
        source: Scheduler;
        timeRangeRecord: TimeSpan;
        domEvent: MouseEvent;
    }) => void)) => void;
    timeRangeHeaderDblClick: (params: string | ((event: {
        source: Scheduler;
        timeRangeRecord: TimeSpan;
        domEvent: MouseEvent;
    }) => void)) => void;
    timeSelectionChange: (params: string | ((event: {
        source: Scheduler;
        startDate: Date;
        endDate: Date;
    }) => void)) => void;
    timeSelectionElementClick: (params: string | ((event: {
        source: Scheduler;
        startDate: Date;
        endDate: Date;
        domEvent: Event;
    }) => void)) => void;
    toggleGroup: (params: string | ((event: {
        groupRecord: Model;
        collapse: boolean;
        allRecords?: boolean | undefined;
    }) => void)) => void;
    toggleNode: (params: string | ((event: {
        record: Model;
        collapse: boolean;
    }) => void)) => void;
    toolClick: (params: string | ((event: {
        source: Tool;
        tool: Tool;
    }) => void)) => void;
    transactionChange: (params: string | ((event: {
        hasChanges: boolean;
    }) => void)) => void;
    unlockRows: (params: string | ((event: {
        clone: GridBase;
    }) => void)) => void;
    unsplit: (params: string | (() => void)) => void;
    visibleDateRangeChange: (params: string | ((event: {
        source: Scheduler;
        old: {
            startDate: Date;
            endDate: Date;
        };
        new: {
            startDate: Date;
            endDate: Date;
        };
    }) => void)) => void;
}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<__VLS_TypePropsToRuntimeProps<{
    /**
     * Element (or element id) to adopt as this Widget's encapsulating element. The widget's
     * content will be placed inside this element.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-adopt)
     */
    adopt?: string | HTMLElement | undefined;
    /**
     * When this widget is a child of a [Container](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Container), it will by default be participating in a
     * flexbox layout. This config allows you to set this widget's
     * [align-self](https://developer.mozilla.org/en-US/docs/Web/CSS/align-self) style.
     */
    alignSelf?: string | undefined;
    /**
     * Set to `false` to not allow creating dependencies
     */
    allowCreate?: Boolean | undefined;
    /**
     * `false` to require a drop on a target event bar side circle to define the dependency type.
     * If dropped on the event bar, the `defaultValue` of the DependencyModel `type` field will be used to
     * determine the target task side.
     */
    allowDropOnEventBar?: Boolean | undefined;
    /**
     * Set to `false` if you don't want to allow events overlapping times for any one resource (defaults to `true`).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-allowOverlap)
     */
    allowOverlap?: Boolean | undefined;
    /**
     * Set to `false` to prevent remove row animation and remove the delay related to that.
     */
    animateRemovingRows?: Boolean | undefined;
    /**
     * When the [Tree](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/Tree) feature is in use and the Store is a tree store, this
     * config may be set to `true` to visually animate branch node expand and collapse operations.
     * *This is not supported in Scheduler and Gantt*
     */
    animateTreeNodeToggle?: Boolean | undefined;
    /**
     * Element (or the id of an element) to append this widget's element to. Can be configured, or set once at
     * runtime. To access the element of a rendered widget, see [element](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Widget#property-element).
     */
    appendTo?: string | HTMLElement | undefined;
    /**
     * A localizable string (May contain `'L{}'` tokens which resolve in the locale file) to inject
     * into an element which will be linked using the `aria-describedby` attribute.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-ariaDescription)
     */
    ariaDescription?: string | undefined;
    /**
     * A localizable string (May contain `'L{}'` tokens which resolve in the locale file) to inject as
     * the `aria-label` attribute.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-ariaLabel)
     */
    ariaLabel?: string | undefined;
    /**
     * The `aria-live` value for this widget.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-ariaLive)
     */
    ariaLive?: string | undefined;
    /**
     * Inline assignments, will be loaded into the backing project's AssignmentStore.
     */
    assignments?: AssignmentModel[] | AssignmentModelConfig[] | undefined;
    /**
     * The optional [AssignmentStore](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/data/AssignmentStore), holding assignments between resources and events.
     * Required for multi assignments.
     */
    assignmentStore?: AssignmentStore | AssignmentStoreConfig | undefined;
    /**
     * You can set this option to `false` to make the timeline panel start and end on the exact provided
     * [startDate](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/TimelineBase#config-startDate)/[endDate](#Scheduler/view/TimelineBase#config-endDate) w/o adjusting them.
     */
    autoAdjustTimeAxis?: Boolean | undefined;
    /**
     * Automatically set grids height to fit all rows (no scrolling in the grid). In general you should avoid
     * using `autoHeight: true`, since it will bypass Grids virtual rendering and render all rows at once, which
     * in a larger grid is really bad for performance.
     */
    autoHeight?: Boolean | undefined;
    /**
     * Controls how much space to leave between stacked event bars in px.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-barMargin)
     */
    barMargin?: number | undefined;
    /**
     * A Config object representing the configuration of a [Toolbar](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Toolbar),
     * or array of config objects representing the child items of a Toolbar. Another way to add a bbar is to use [strips](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Panel#config-strips).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-bbar)
     */
    bbar?: PagingToolbarConfig | ToolbarConfig | (string | ContainerItemConfig)[] | undefined;
    /**
     * Custom CSS classes to add to the panel's body element.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-bodyCls)
     */
    bodyCls?: string | object | undefined;
    /**
     * An object where property names with a truthy value indicate which events should bubble up the ownership
     * hierarchy when triggered.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-bubbleEvents)
     */
    bubbleEvents?: object | undefined;
    /**
     * This config defines the size of the start and end invisible parts of the timespan when [infiniteScroll](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/mixin/TimelineScroll#config-infiniteScroll) set to `true`.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-bufferCoef)
     */
    bufferCoef?: number | undefined;
    /**
     * This config defines the scroll limit, which, when exceeded will cause a timespan shift.
     * The limit is calculated as the `panelWidth * [bufferCoef](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/mixin/TimelineScroll#config-bufferCoef) * bufferThreshold`. During scrolling, if the left or right side
     * has less than that of the rendered content - a shift is triggered.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-bufferThreshold)
     */
    bufferThreshold?: number | undefined;
    /**
     * Inline calendars, will be loaded into the backing project's CalendarManagerStore.
     */
    calendars?: CalendarModel[] | CalendarModelConfig[] | undefined;
    /**
     * Set to `false` to not call onXXX method names (e.g. `onShow`, `onClick`), as an easy way to listen for events.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-callOnFunctions)
     */
    callOnFunctions?: Boolean | undefined;
    /**
     * Custom CSS classes to add to element.
     * May be specified as a space separated string, or as an object in which property names
     * with truthy values are used as the class names:
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-cls)
     */
    cls?: string | object | undefined;
    /**
     * Controls whether the panel is collapsed (the body of the panel is hidden while only the header is
     * visible). Only valid if the panel is [collapsible](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Panel#config-collapsible).
     */
    collapsed?: Boolean | undefined;
    /**
     * This config enables collapsibility for the panel. See [collapsed](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Panel#config-collapsed).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-collapsible)
     */
    collapsible?: Boolean | PanelCollapserConfig | PanelCollapserOverlayConfig | undefined;
    /**
     * Set to `false` to not show column lines. End result might be overruled by/differ between themes.
     */
    columnLines?: Boolean | undefined;
    /**
     * Accepts column definitions for the grid during initialization. They will be used to create
     * [Column](https://bryntum.com/products/schedulerpro/docs/api/Grid/column/Column) instances that are added to a [ColumnStore](#Grid/data/ColumnStore).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-columns)
     */
    columns?: ColumnStore | GridColumnConfig[] | ColumnStoreConfig | undefined;
    config?: object | undefined;
    /**
     * Custom CSS classes to add to the [contentElement](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Widget#property-contentElement).
     * May be specified as a space separated string, or as an object in which property names
     * with truthy values are used as the class names:
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-contentElementCls)
     */
    contentElementCls?: string | object | undefined;
    /**
     * Event which is used to show context menus.
     * Available options are: 'contextmenu', 'click', 'dblclick'.
     */
    contextMenuTriggerEvent?: "contextmenu" | "click" | "dblclick" | undefined;
    /**
     * If true, a new event will be created when user double-clicks on a time axis cell (if scheduler is not in
     * read only mode).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-createEventOnDblClick)
     * @param {boolean} createEventOnDblClick.useEventModelDefaults set to `true` to set default duration based on the defaults specified by the [duration](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/model/EventModel#field-duration) and [durationUnit](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/model/EventModel#field-durationUnit) fields.
     */
    createEventOnDblClick?: Boolean | {
        createEventOnDblClick: {
            useEventModelDefaults?: Boolean;
        };
    } | undefined;
    /**
     * A tooltip config object that will be applied to the dependency creation [Tooltip](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Tooltip)
     */
    creationTooltip?: TooltipConfig | undefined;
    /**
     * A template function that will be called to generate the HTML contents of the dependency creation tooltip.
     * You can return either an HTML string or a [DomConfig](https://bryntum.com/products/schedulerpro/docs/api/Core/helper/DomHelper#typedef-DomConfig) object.
     * @param {object} data Data about the dependency being created
     * @param {TimeSpan} data.source The from event
     * @param {TimeSpan} data.target The target event
     * @param {string} data.fromSide The from side (start, end, top, bottom)
     * @param {string} data.toSide The target side (start, end, top, bottom)
     * @param {boolean} data.valid The validity of the dependency
     * @returns {string|DomConfig}
     */
    creationTooltipTemplate?: ((data: {
        source: TimeSpan;
        target: TimeSpan;
        fromSide: string;
        toSide: string;
        valid: Boolean;
    }) => string | DomConfig) | undefined;
    /**
     * Supply a [CrudManager](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/data/CrudManager) instance or a config object if you want to use
     * CrudManager for handling data.
     */
    crudManager?: CrudManagerConfig | CrudManager | undefined;
    /**
     * Class that should be used to instantiate a CrudManager in case it's provided as a simple object to
     * [crudManager](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/mixin/SchedulerStores#config-crudManager) config.
     */
    crudManagerClass?: typeof CrudManager | undefined;
    /**
     * Class implementing the popup resolving *scheduling cycles*.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-cycleResolutionPopupClass)
     */
    cycleResolutionPopupClass?: typeof CycleResolutionPopup | undefined;
    /**
     * Convenient shortcut to set data in grids store both during initialization and at runtime. Can also be
     * used to retrieve data at runtime, although we do recommend interacting with Grids store instead using
     * the [store](https://bryntum.com/products/schedulerpro/docs/api/Grid/view/GridBase#property-store) property.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-data)
     */
    data?: object[] | Model[] | ModelConfig[] | undefined;
    /**
     * Object to apply to elements dataset (each key will be used as a data-attribute on the element)
     */
    dataset?: Record<string, string> | undefined;
    /**
     * The date to display when used as a component of a Calendar.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-date)
     */
    date?: Date | undefined;
    /**
     * A [DateHelper](https://bryntum.com/products/schedulerpro/docs/api/Core/helper/DateHelper) format string to use to create date output for view descriptions.
     */
    dateFormat?: string | undefined;
    /**
     * A string used to separate start and end dates in the [descriptionFormat](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/mixin/Describable#config-descriptionFormat).
     */
    dateSeparator?: string | undefined;
    /**
     * Region to which columns are added when they have none specified
     */
    defaultRegion?: string | undefined;
    /**
     * Generic resource image, used when provided `imageUrl` or `image` fields or path calculated from resource
     * name are all invalid. If left blank, resource name initials will be shown when no image can be loaded.
     */
    defaultResourceImageName?: string | undefined;
    /**
     * Inline dependencies, will be loaded into the backing project's DependencyStore.
     */
    dependencies?: DependencyModel[] | DependencyModelConfig[] | undefined;
    /**
     * A task field (id, wbsCode, sequenceNumber etc) that will be used when displaying and editing linked tasks.
     */
    dependencyIdField?: string | undefined;
    /**
     * The optional [DependencyStore](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/data/DependencyStore).
     */
    dependencyStore?: DependencyStoreConfig | DependencyStore | undefined;
    /**
     * The date format used by the default [descriptionRenderer](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/mixin/Describable#config-descriptionRenderer) for rendering the view's description.
     * If this value is `null`, the [dateFormat](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/mixin/Describable#config-dateFormat) (and potentially [dateSeparator](#Scheduler/view/mixin/Describable#config-dateSeparator)) will
     * be used.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-descriptionFormat)
     */
    descriptionFormat?: string | string[] | Boolean[] | undefined;
    /**
     * A function that provides the textual description for this view. If provided, this function overrides the
     * [descriptionFormat](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/mixin/Describable#config-descriptionFormat).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-descriptionRenderer)
     * @param {Widget} view The active view in case the function is in another scope.
     * @returns {string} Description string
     */
    descriptionRenderer?: ((view: Widget) => string) | undefined;
    /**
     * Configure as `false` to preserve selection when clicking the empty schedule area.
     */
    deselectAllOnScheduleClick?: Boolean | undefined;
    /**
     * Configure as `true` to deselect a selected event upon click.
     */
    deselectOnClick?: Boolean | undefined;
    /**
     * Set to `true` to destroy the store when the grid is destroyed.
     */
    destroyStore?: Boolean | undefined;
    /**
     * Configure as `true` to destroy the Project and stores when `this` is destroyed.
     */
    destroyStores?: Boolean | undefined;
    /**
     * Disable or enable the widget. It is similar to [readOnly](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Widget#config-readOnly) except a disabled widget
     * cannot be focused, uses a different rendition (usually greyish) and does not allow selecting its value.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-disabled)
     */
    disabled?: Boolean | "inert" | undefined;
    /**
     * Set to `true` to not get a warning when calling [getState](https://bryntum.com/products/schedulerpro/docs/api/Grid/view/GridBase#function-getState) when there is a column
     * configured without an `id`. But the recommended action is to always configure columns with an `id` when
     * using states.
     */
    disableGridColumnIdWarning?: Boolean | undefined;
    /**
     * Set to `true` to not get a warning when using another base class than GridRowModel for your grid data. If
     * you do, and would like to use the full feature set of the grid then include the fields from GridRowModel
     * in your model definition.
     */
    disableGridRowModelWarning?: Boolean | undefined;
    /**
     * Defines how dates will be formatted in tooltips etc. This config has priority over similar config on the
     * view preset. For allowed values see [format](https://bryntum.com/products/schedulerpro/docs/api/Core/helper/DateHelper#function-format-static).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-displayDateFormat)
     */
    displayDateFormat?: string | undefined;
    /**
     * Set to `true` to display special popups allowing user
     * to resolve [scheduling conflicts](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/widget/SchedulingIssueResolutionPopup),
     * [cycles](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/widget/CycleResolutionPopup) or calendar misconfigurations.
     * The popup will suggest user ways to resolve the corresponding case.
     */
    displaySchedulingIssueResolutionPopup?: Boolean | undefined;
    /**
     * Controls the placement of this widget when it is added to a [panel's ](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Panel)
     * [strips collection](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Panel#config-strips). Typical values for this config are `'top'`,
     * `'bottom'`, `'left'`, or `'right'`, which cause the widget to be placed on that side of the panel's
     * body. Such widgets are called "edge strips".
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-dock)
     */
    dock?: object | "top" | "bottom" | "left" | "right" | "start" | "end" | "header" | "pre-header" | undefined;
    /**
     * Decimal precision used when displaying durations, used by tooltips and DurationColumn.
     * Specify `false` to use raw value
     */
    durationDisplayPrecision?: number | Boolean | undefined;
    /**
     * Text or HTML, or a [DomConfig](https://bryntum.com/products/schedulerpro/docs/api/Core/helper/DomHelper#typedef-DomConfig) block to display when there is no data to display in the grid
     */
    emptyText?: string | DomConfig | undefined;
    /**
     * Allow using [Delete] and [Backspace] to remove events/assignments
     */
    enableDeleteKey?: Boolean | undefined;
    /**
     * Set to `false` if you don't want event bar DOM updates to animate.
     */
    enableEventAnimations?: Boolean | undefined;
    /**
     * Enables showing occurrences of recurring events across the scheduler's time axis. If you want to disable
     * the recurrence popup, you can choose set the `defaultAction` to `future` to affect all future
     * occurrences, or `single` to just affect the currently selected event.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-enableRecurringEvents)
     */
    enableRecurringEvents?: Boolean | {
        defaultAction?: "single" | "future" | undefined;
    } | undefined;
    /**
     * Configure this as `true` to allow elements within cells to be styled as `position: sticky`.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-enableSticky)
     */
    enableSticky?: Boolean | undefined;
    /**
     * Set to `true` to allow text selection in the grid cells. Note, this cannot be used simultaneously with the
     * `RowReorder` feature.
     */
    enableTextSelection?: Boolean | undefined;
    /**
     * When true, some features will start a project transaction, blocking the project queue, suspending
     * store events and preventing UI from updates. It behaves similar to
     * [instantUpdate](https://bryntum.com/products/schedulerpro/docs/api/Grid/column/Column#config-instantUpdate) set to `false`.
     * Set `false` to not use project queue.
     */
    enableTransactionalFeatures?: Boolean | undefined;
    /**
     * Set to `true` to listen for CTRL-Z (CMD-Z on Mac OS) keyboard event and trigger undo (redo when SHIFT is
     * pressed). Only applicable when using a [StateTrackingManager](https://bryntum.com/products/schedulerpro/docs/api/Core/data/stm/StateTrackingManager).
     */
    enableUndoRedoKeys?: Boolean | undefined;
    /**
     * The end date of the timeline (if not configure with [infiniteScroll](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/TimelineBase#config-infiniteScroll)).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-endDate)
     */
    endDate?: string | Date | undefined;
    /**
     * The name of the end date parameter that will be passed to in every `eventStore` load request.
     */
    endParamName?: string | undefined;
    /**
     * Field from EventModel displayed as text in the bar when rendering
     */
    eventBarTextField?: string | undefined;
    /**
     * Event color used by default. Events and resources can specify their own color, with priority order being:
     * Event -&gt; Resource -&gt; Scheduler default.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-eventColor)
     */
    eventColor?: EventColor | undefined;
    /**
     * Defines how to handle overlapping events. Valid values are:
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-eventLayout)
     */
    eventLayout?: "stack" | "pack" | "mixed" | "none" | {
        type?: "stack" | "pack" | "mixed" | "none" | undefined;
    } | undefined;
    /**
     * An empty function by default, but provided so that you can override it. This function is called each time
     * an event is rendered into the schedule to render the contents of the event. It's called with the event,
     * its resource and a `renderData` object which allows you to populate data placeholders inside the event
     * template. <strong>IMPORTANT</strong> You should never modify any data on the EventModel inside this method.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-eventRenderer)
     * @param {object} detail An object containing the information needed to render an Event.
     * @param {EventModel} detail.eventRecord The event record.
     * @param {ResourceModel} detail.resourceRecord The resource record.
     * @param {AssignmentModel} detail.assignmentRecord The assignment record.
     * @param {Scheduler} detail.scheduler The Scheduler instance.
     * @param {object} detail.renderData An object containing details about the event rendering.
     * @param {EventModel} detail.renderData.event The event record.
     * @param {DomClassList|string} detail.renderData.cls An object whose property names represent the CSS class names to be added to the event bar element. Set a property's value to truthy or falsy to add or remove the class name based on the property name. Using this technique, you do not have to know whether the class is already there, or deal with concatenation.
     * @param {DomClassList|string} detail.renderData.wrapperCls An object whose property names represent the CSS class names to be added to the event wrapper element. Set a property's value to truthy or falsy to add or remove the class name based on the property name. Using this technique, you do not have to know whether the class is already there, or deal with concatenation.
     * @param {DomClassList|string} detail.renderData.iconCls An object whose property names represent the CSS class names to be added to an event icon element. Note that an element carrying this icon class is injected into the event element *after* the renderer completes, *before* the renderer's created content. To disable this if the renderer takes full control and creates content using the iconCls, you can set `renderData.iconCls = null`.
     * @param {number} detail.renderData.left Vertical offset position (in pixels) on the time axis.
     * @param {number} detail.renderData.width Width in pixels of the event element.
     * @param {number} detail.renderData.height Height in pixels of the event element.
     * @param {string|<String, String>} detail.renderData.style Inline styles for the event bar DOM element. Use either 'border: 1px solid black' or `{ border: '1px solid black' }`
     * @param {string|<String, String>} detail.renderData.wrapperStyle Inline styles for wrapper of the event bar DOM element. Use either 'border: 1px solid green' or `{ border: '1px solid green' }`
     * @param {string} detail.renderData.eventStyle The `eventStyle` of the event. Use this to apply custom styles to the event DOM element
     * @param {string} detail.renderData.eventColor The `eventColor` of the event. Use this to set a custom color for the rendered event
     * @param {DomConfig>} detail.renderData.children An array of DOM configs used as children to the `b-sch-event` element. Can be populated with additional DOM configs to have more control over contents.
     * @returns {string|DomConfig|DomConfig>} A simple string, or a DomConfig (or array thereof)
     */
    eventRenderer?: ((detail: {
        eventRecord: SchedulerEventModel;
        resourceRecord: SchedulerResourceModel;
        assignmentRecord: SchedulerAssignmentModel;
        scheduler: Scheduler;
        renderData: {
            event: SchedulerEventModel;
            cls: DomClassList | string;
            wrapperCls: DomClassList | string;
            iconCls: DomClassList | string;
            left: number;
            width: number;
            height: number;
            style: string | Record<string, string>;
            wrapperStyle: string | Record<string, string>;
            eventStyle: string;
            eventColor: string;
            children: DomConfig[];
        };
    }) => string | DomConfig | DomConfig[]) | undefined;
    /**
     * `this` reference for the [eventRenderer](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/mixin/SchedulerEventRendering#config-eventRenderer) function
     */
    eventRendererThisObj?: object | undefined;
    /**
     * Inline events, will be loaded into the backing project's EventStore.
     */
    events?: object[] | EventModel[] | EventModelConfig[] | undefined;
    /**
     * Configure as `true`, or set property to `true` to disable event selection.
     */
    eventSelectionDisabled?: Boolean | undefined;
    /**
     * The [EventStore](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/data/EventStore) holding the events to be rendered into the scheduler.
     */
    eventStore?: EventStore | EventStoreConfig | undefined;
    /**
     * Event style used by default. Events and resources can specify their own style, with priority order being:
     * Event -&gt; Resource -&gt; Scheduler default. Determines the appearance of the event by assigning a CSS class
     * to it. Available styles are:
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-eventStyle)
     */
    eventStyle?: "plain" | "border" | "colored" | "hollow" | "line" | "dashed" | "minimal" | "rounded" | "calendar" | "interday" | null | undefined;
    extraData?: any;
    /**
     * Set to `true` to stretch the last column in a grid with all fixed width columns
     * to fill extra available space if the grid's width is wider than the sum of all
     * configured column widths.
     */
    fillLastColumn?: Boolean | undefined;
    /**
     * Specify `true` to force rendered events/tasks to fill entire ticks. This only affects rendering, start
     * and end dates retain their value on the data level.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-fillTicks)
     */
    fillTicks?: Boolean | undefined;
    /**
     * Use fixed row height. Setting this to `true` will configure the underlying RowManager to use fixed row
     * height, which sacrifices the ability to use rows with variable height to gain a fraction better
     * performance.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-fixedRowHeight)
     */
    fixedRowHeight?: Boolean | undefined;
    /**
     * When this widget is a child of a [Container](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Container), it will by default be participating in a
     * flexbox layout. This config allows you to set this widget's
     * [flex](https://developer.mozilla.org/en-US/docs/Web/CSS/flex) style.
     * This may be configured as a single number or a `&lt;flex-grow&gt; &lt;flex-shrink&gt; &lt;flex-basis&gt;` format string.
     * numeric-only values are interpreted as the `flex-grow` value.
     */
    flex?: string | number | undefined;
    /**
     * Config object of a footer. May contain a `dock`, `html` and a `cls` property. A footer is not a widget,
     * but rather plain HTML that follows the last element of the panel's body and [strips](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Panel#config-strips).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-footer)
     */
    footer?: string | {
        dock?: "top" | "bottom" | "left" | "right" | "start" | "end" | undefined;
        html?: string | undefined;
        cls?: string | undefined;
    } | undefined;
    /**
     * Set to `true` to force the time columns to fit to the available space (horizontal or vertical depends on mode).
     * Note that setting [suppressFit](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/TimelineBase#config-suppressFit) to `true`, will disable `forceFit` functionality. Zooming
     * cannot be used when `forceFit` is set.
     */
    forceFit?: Boolean | undefined;
    /**
     * Refresh entire row when a record changes (`true`) or, if possible, only the cells affected (`false`).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-fullRowRefresh)
     */
    fullRowRefresh?: Boolean | undefined;
    /**
     * A method allowing you to define date boundaries that will constrain resize, create and drag drop
     * operations. The method will be called with the Resource record, and the Event record.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-getDateConstraints)
     * @param {ResourceModel} resourceRecord The resource record
     * @param {EventModel} eventRecord The event record
     * @returns {DateConstraint} Constraining `Object` containing `start` and `end` constraints. Omitting either will mean that end is not constrained. So you can prevent a resize or move from moving *before* a certain time while not constraining the end date.
     */
    getDateConstraints?: ((resourceRecord?: SchedulerResourceModel, eventRecord?: SchedulerEventModel) => DateConstraint) | undefined;
    /**
     * Scheduler overrides Grids default implementation of [getRowHeight](https://bryntum.com/products/schedulerpro/docs/api/Grid/view/GridBase#config-getRowHeight) to
     * pre-calculate row heights based on events in the rows.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-getRowHeight)
     * @param {ResourceModel} getRowHeight.record Resource record to determine row height for
     * @returns {number} Desired row height
     */
    getRowHeight?: ((getRowHeight: {
        record: SchedulerResourceModel;
    }) => number) | undefined;
    /**
     * A config [object](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Panel#typedef-PanelHeader) for the panel's header or a string in place of a `title`.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-header)
     */
    header?: string | Boolean | PanelHeader | undefined;
    /**
     * Widget's height, used to set element style.height. Either specify a valid height string or a number, which
     * will get 'px' appended. We recommend using CSS as the primary way to control height, but in some cases
     * this config is convenient.
     */
    height?: string | number | undefined;
    /**
     * Configure with true to make widget initially hidden.
     */
    hidden?: Boolean | undefined;
    /**
     * Set to `true` to hide the footer elements
     */
    hideFooters?: Boolean | undefined;
    /**
     * Set to `true` to hide the column header elements
     */
    hideHeaders?: Boolean | undefined;
    /**
     * Set to `true` to hide the Grid's horizontal scrollbar(s)
     */
    hideHorizontalScrollbar?: Boolean | undefined;
    /**
     * By default the row hover effect is not visible in the Scheduler part of the grid.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-hideRowHover)
     */
    hideRowHover?: Boolean | undefined;
    /**
     * Configure as `true`, or set property to `true` to highlight dependent events as well when selecting an event.
     */
    highlightPredecessors?: Boolean | undefined;
    /**
     * Configure as `true`, or set property to `true` to highlight dependent events as well when selecting an event.
     */
    highlightSuccessors?: Boolean | undefined;
    /**
     * A CSS class to add to hovered row elements
     */
    hoverCls?: string | undefined;
    /**
     * Widget id, if not specified one will be generated. Also used for lookups through Widget.getById
     */
    id?: string | undefined;
    /**
     * Set to `true` to ignore reacting to DOM events (mouseover/mouseout etc) while scrolling. Useful if you
     * want to maximize scroll performance.
     */
    ignoreDomEventsWhileScrolling?: Boolean | undefined;
    /**
     * Determines if the widgets read-only state should be controlled by its parent.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-ignoreParentReadOnly)
     */
    ignoreParentReadOnly?: Boolean | undefined;
    /**
     * Configure as `true` to automatically adjust the panel timespan during scrolling in the time dimension,
     * when the scroller comes close to the start/end edges.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-infiniteScroll)
     */
    infiniteScroll?: Boolean | undefined;
    /**
     * Element (or element id) to insert this widget before. If provided, [appendTo](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Widget#config-appendTo) config is ignored.
     */
    insertBefore?: string | HTMLElement | undefined;
    /**
     * Element (or element id) to append this widget element to, as a first child. If provided, [appendTo](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Widget#config-appendTo) config is ignored.
     */
    insertFirst?: string | HTMLElement | undefined;
    /**
     * A template method (empty by default) allowing you to control if an event can be selected or not.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-isEventSelectable)
     * @param {EventModel} event The event record
     * @returns {boolean} true if event can be selected, otherwise false
     */
    isEventSelectable?: ((event: SchedulerEventModel) => Boolean) | undefined;
    /**
     * See [Keyboard shortcuts](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/Scheduler#keyboard-shortcuts) for details
     */
    keyMap?: Record<string, string> | undefined;
    /**
     * The listener set for this object.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-listeners)
     */
    listeners?: SchedulerProBaseListeners | undefined;
    /**
     * A [Mask](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Mask) config object, or a message to be shown when a store is performing a remote
     * operation, or Crud Manager is loading data from the sever. Set to `null` to disable default load mask.
     */
    loadMask?: string | MaskConfig | null | undefined;
    /**
     * A [Mask](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Mask) config object to adjust the [maskDefaults](#Core/widget/Widget#config-maskDefaults)
     * when data is loading. The message and optional configuration from the
     * [loadMask](https://bryntum.com/products/schedulerpro/docs/api/Core/mixin/LoadMaskable#config-loadMask) config take priority over these options, just as they do
     * for `maskDefaults`, respectively.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-loadMaskDefaults)
     */
    loadMaskDefaults?: MaskConfig | undefined;
    /**
     * A [Mask](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Mask) config object to adjust the [maskDefaults](#Core/widget/Widget#config-maskDefaults)
     * when an error occurs loading data.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-loadMaskError)
     */
    loadMaskError?: Boolean | MaskConfig | Mask | undefined;
    /**
     * Set to `false` to disable localization of this object.
     */
    localizable?: Boolean | undefined;
    /**
     * Time in ms until a longpress is triggered
     */
    longPressTime?: number | undefined;
    /**
     * This flag controls whether Scheduler should preserve its selection of events when loading a new dataset
     * (if selected event ids are included in the newly loaded dataset).
     */
    maintainSelectionOnDatasetChange?: Boolean | undefined;
    /**
     * When `true`, events are sized and positioned based on rowHeight, resourceMargin and barMargin settings.
     * Set this to `false` if you want to control height and vertical position using CSS instead.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-managedEventSizing)
     */
    managedEventSizing?: Boolean | undefined;
    /**
     * Widget's margin. This may be configured as a single number or a `TRBL` format string.
     * numeric-only values are interpreted as pixels.
     */
    margin?: string | number | undefined;
    /**
     * Grids change the `maskDefaults` to cover only their `body` element.
     */
    maskDefaults?: MaskConfig | undefined;
    /**
     * Set to `true` to apply the default mask to the widget. Alternatively, this can be the mask message or a
     * [Mask](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Mask) config object.
     */
    masked?: string | Boolean | MaskConfig | undefined;
    /**
     * The element's maxHeight. Can be either a String or a Number (which will have 'px' appended). Note that
     * like [height](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Widget#config-height), *reading* the value will return the numeric value in pixels.
     */
    maxHeight?: string | number | undefined;
    /**
     * The maximum time axis unit to display non-working ranges for ('hour' or 'day' etc).
     * When zooming to a view with a larger unit, no non-working time elements will be rendered.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-maxTimeAxisUnit)
     */
    maxTimeAxisUnit?: string | undefined;
    /**
     * The elements maxWidth. Can be either a String or a Number (which will have 'px' appended). Note that
     * like [width](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Widget#config-width), *reading* the value will return the numeric value in pixels.
     */
    maxWidth?: string | number | undefined;
    /**
     * The maximum zoom level to which [zoomIn](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/mixin/TimelineZoomable#function-zoomIn) will work. Defaults to the number of
     * [ViewPresets](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/preset/ViewPreset) available, see [presets](#Scheduler/view/mixin/TimelineViewPresets#property-presets)
     * for information. Unless you have modified the collection of available presets, the max zoom level is
     * milliseconds.
     */
    maxZoomLevel?: number | undefined;
    /**
     * How to align milestones in relation to their startDate. Only applies when using a `milestoneLayoutMode`
     * other than `default`. Valid values are:
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-milestoneAlign)
     */
    milestoneAlign?: "start" | "end" | "center" | undefined;
    /**
     * Factor representing the average char width in pixels used to determine milestone width when configured
     * with `milestoneLayoutMode: 'estimate'`.
     */
    milestoneCharWidth?: number | undefined;
    /**
     * How to handle milestones during event layout. How the milestones are displayed when part of the layout
     * are controlled using [milestoneTextPosition](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/mixin/SchedulerEventRendering#config-milestoneTextPosition).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-milestoneLayoutMode)
     */
    milestoneLayoutMode?: "default" | "estimate" | "data" | "measure" | undefined;
    /**
     * Position of the milestone text:
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-milestoneTextPosition)
     */
    milestoneTextPosition?: "inside" | "outside" | "always-outside" | undefined;
    /**
     * Grid's `min-height`. Defaults to `10em` to be sure that the Grid always has a height wherever it is
     * inserted.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-minHeight)
     */
    minHeight?: string | number | undefined;
    /**
     * The elements minWidth. Can be either a String or a Number (which will have 'px' appended). Note that
     * like [width](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Widget#config-width), *reading* the value will return the numeric value in pixels.
     */
    minWidth?: string | number | undefined;
    /**
     * The minimum zoom level to which [zoomOut](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/mixin/TimelineZoomable#function-zoomOut) will work. Defaults to 0 (year ticks)
     */
    minZoomLevel?: number | undefined;
    /**
     * Scheduler mode. Supported values: horizontal, vertical
     */
    mode?: "horizontal" | "vertical" | undefined;
    /**
     * Grid monitors window resize by default.
     */
    monitorResize?: Boolean | undefined;
    /**
     * Configure as `true` to allow `CTRL+click` to select multiple events in the scheduler.
     */
    multiEventSelect?: Boolean | undefined;
    /**
     * When an event bar has a width less than this value, it gets the CSS class `b-sch-event-narrow`
     * added. You may apply custom CSS rules using this class.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-narrowEventWidth)
     */
    narrowEventWidth?: number | undefined;
    /**
     * Override this method to provide a custom sort function to sort any overlapping events. This only applies
     * to the horizontal mode, where the order the events are sorted in determines their vertical placement
     * within a resource.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-overlappingEventSorter)
     * @param {EventModel} a First event
     * @param {EventModel} b Second event
     * @returns {number} Return -1 to display `a` above `b`, 1 for `b` above `a`
     */
    overlappingEventSorter?: ((a: SchedulerEventModel, b: SchedulerEventModel) => number) | undefined;
    /**
     * The owning Widget of this Widget. If this Widget is directly contained (that is, it is one of the
     * [items](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Container#property-items) of a Container), this config will be ignored. In this case
     * the owner is <strong>always</strong> the encapsulating Container.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-owner)
     */
    owner?: Widget | undefined;
    /**
     * Partners this Timeline panel with another Timeline in order to sync their region sizes (sub-grids like locked, normal will get the same width),
     * start and end dates, view preset, zoom level and scrolling position. All these values will be synced with the timeline defined as the `partner`.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-partner)
     */
    partner?: TimelineBase | undefined;
    /**
     * Set to `true` to include `startDate` and `endDate` params indicating the currently viewed date range in
     * `EventStore` load requests (when loading using `AjaxStore` or `CrudManager` functionality).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-passStartEndParameters)
     */
    passStartEndParameters?: Boolean | undefined;
    /**
     * Specify plugins (an array of classes) in config
     */
    plugins?: Function[] | undefined;
    /**
     * Maximum number of resources for which height is pre-calculated. If you have many events per
     * resource you might want to lower this number to gain some initial rendering performance.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-preCalculateHeightLimit)
     */
    preCalculateHeightLimit?: number | undefined;
    /**
     * True to preserve focused cell after loading new data
     */
    preserveFocusOnDatasetChange?: Boolean | undefined;
    /**
     * Preserve the grid's vertical scroll position when changesets are applied, as in the case of remote
     * changes, or when stores are configured with [syncDataOnLoad](https://bryntum.com/products/schedulerpro/docs/api/Core/data/Store#config-syncDataOnLoad).
     */
    preserveScroll?: Boolean | PreserveScrollOptions | undefined;
    /**
     * Specify `true` to preserve vertical scroll position after store actions that trigger a `refresh` event,
     * such as loading new data and filtering.
     */
    preserveScrollOnDatasetChange?: Boolean | undefined;
    /**
     * An array of [ViewPreset](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/preset/ViewPreset) config objects
     * which describes the available timeline layouts for this scheduler.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-presets)
     */
    presets?: ViewPresetConfig[] | undefined;
    /**
     * Prevent tooltip from being displayed on touch devices. Useful for example for buttons that display a
     * menu on click etc, since the tooltip would be displayed at the same time.
     */
    preventTooltipOnTouch?: Boolean | undefined;
    /**
     * A [ProjectModel](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/model/ProjectModel) instance or a config object. The project holds all SchedulerPro data.
     */
    project?: object | ProjectModel | ProjectModelConfig | undefined;
    /**
     * Accepts the following values:
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-projectProgressReporting)
     */
    projectProgressReporting?: string | null | undefined;
    /**
     * Unit used to set the length of the time axis when used as a component of a Calendar. Suitable units are
     * `'month'`, `'week'` and `'day'`.
     */
    range?: "day" | "week" | "month" | undefined;
    /**
     * Configure as `true` to make the scheduler read-only, by disabling any UIs for modifying data.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-readOnly)
     */
    readOnly?: Boolean | undefined;
    relayStoreEvents?: Boolean | undefined;
    /**
     * Set to `false` to only measure cell contents when double-clicking the edge between column headers.
     */
    resizeToFitIncludesHeader?: Boolean | undefined;
    /**
     * A config object used to configure the resource columns in vertical mode.
     * See [ResourceHeader](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/ResourceHeader) for more details on available properties.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-resourceColumns)
     */
    resourceColumns?: ResourceHeaderConfig | undefined;
    /**
     * Resource image extension, used when creating image path from resource name.
     */
    resourceImageExtension?: string | undefined;
    /**
     * Path to load resource images from. Used by the resource header in vertical mode and the
     * [ResourceInfoColumn](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/column/ResourceInfoColumn) in horizontal mode. Set this to display miniature
     * images for each resource using their `image` or `imageUrl` fields.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-resourceImagePath)
     */
    resourceImagePath?: string | undefined;
    /**
     * Control how much space to leave between the first event/last event and the resources edge (top/bottom
     * margin within the resource row in horizontal mode, left/right margin within the resource column in
     * vertical mode), in px. Defaults to the value of [barMargin](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/Scheduler#config-barMargin).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-resourceMargin)
     */
    resourceMargin?: number | ResourceMarginConfig | undefined;
    /**
     * Inline resources, will be loaded into the backing project's ResourceStore.
     */
    resources?: ResourceModel[] | ResourceModelConfig[] | undefined;
    /**
     * The [ResourceStore](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/data/ResourceStore) holding the resources to be rendered into the scheduler.
     */
    resourceStore?: ResourceStore | ResourceStoreConfig | undefined;
    /**
     * An empty function by default, but provided so that you can override it. This function is called each time
     * a resource time range is rendered into the schedule. It's called with `resourceTimeRangeRecord`, `resourceRecord`,
     * and `renderData` params.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-resourceTimeRangeRenderer)
     * @param {object} detail An object containing the information needed to render a ResourceTimeRangeModel.
     * @param {ResourceTimeRangeModel} detail.resourceTimeRangeRecord The resource time range record.
     * @param {ResourceModel} detail.resourceRecord The resource record.
     * @param {object} detail.renderData An object containing details about the event rendering.
     * @returns {string|DomConfig|DomConfig>} A simple string, or a DomConfig object describing the markup
     */
    resourceTimeRangeRenderer?: ((detail: {
        resourceTimeRangeRecord: ResourceTimeRangeModel;
        resourceRecord: SchedulerResourceModel;
        renderData: object;
    }) => string | DomConfig | DomConfig[]) | undefined;
    /**
     * Inline resource time ranges, will be loaded into an internally created store if
     * [ResourceTimeRanges](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/ResourceTimeRanges) is enabled.
     */
    resourceTimeRanges?: ResourceTimeRangeModel[] | ResourceTimeRangeModelConfig[] | undefined;
    /**
     * Resource time ranges store instance or config object for [ResourceTimeRanges](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/ResourceTimeRanges) feature.
     */
    resourceTimeRangeStore?: ResourceTimeRangeStore | ResourceTimeRangeStoreConfig | undefined;
    /**
     * "Break points" for which responsive config to use for columns and css.
     */
    responsiveLevels?: Record<string, string | number> | undefined;
    /**
     * Configure as `true` to have the component display a translucent ripple when its
     * [focusElement](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Widget#property-focusElement), or [element](#Core/widget/Widget#property-element) is tapped <em>if the
     * current theme supports ripples</em>. Out of the box, only the Material theme supports ripples.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-ripple)
     */
    ripple?: Boolean | {
        delegate?: string | undefined;
        color?: string | undefined;
        radius?: number | undefined;
        clip?: string | undefined;
    } | undefined;
    /**
     * If you are rendering this widget to a shadow root inside a web component, set this config to the shadowRoot. If not inside a web component, set it to `document.body`
     */
    rootElement?: HTMLElement | ShadowRoot | undefined;
    /**
     * The height in pixels of Scheduler rows.
     */
    rowHeight?: number | undefined;
    /**
     * Set to `false` to not show row lines. End result might be overruled by/differ between themes.
     */
    rowLines?: Boolean | undefined;
    /**
     * Class implementing the popup resolving *scheduling conflicts* and *calendar misconfigurations*.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-schedulingIssueResolutionPopupClass)
     */
    schedulingIssueResolutionPopupClass?: typeof SchedulingIssueResolutionPopup | undefined;
    /**
     * Configures whether the grid is scrollable in the `Y` axis. This is used to configure a [Scroller](https://bryntum.com/products/schedulerpro/docs/api/Core/helper/util/Scroller).
     * See the [scrollerClass](https://bryntum.com/products/schedulerpro/docs/api/Grid/view/GridBase#config-scrollerClass) config option.
     */
    scrollable?: Boolean | ScrollerConfig | Scroller | undefined;
    /**
     * The class to instantiate to use as the [scrollable](https://bryntum.com/products/schedulerpro/docs/api/Grid/view/GridBase#config-scrollable). Defaults to [Scroller](#Core/helper/util/Scroller).
     */
    scrollerClass?: typeof Scroller | undefined;
    /**
     * Specifies the maximum duration for extending the current [TimeSpan](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/model/TimeSpan) to allow for smooth
     * scrolling to an event.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-scrollExtensionThreshold)
     */
    scrollExtensionThreshold?: string | DurationConfig | undefined;
    /**
     * Configuration values for the [ScrollManager](https://bryntum.com/products/schedulerpro/docs/api/Core/util/ScrollManager) class on initialization. Returns the
     * [ScrollManager](https://bryntum.com/products/schedulerpro/docs/api/Core/util/ScrollManager) at runtime.
     */
    scrollManager?: ScrollManagerConfig | ScrollManager | undefined;
    /**
     * Selection configuration settings, change these properties to control how selection works and what can be
     * selected.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-selectionMode)
     */
    selectionMode?: GridSelectionMode;
    /**
     * Set to `false` to not select the resource of the event when clicking an event bar.
     */
    selectResourceOnEventNavigate?: Boolean | undefined;
    /**
     * Set to `false` to not select the row/resource when clicking the empty area in a time axis cell.
     */
    selectResourceOnScheduleClick?: Boolean | undefined;
    /**
     * `false` to not show a tooltip while creating a dependency
     */
    showCreationTooltip?: Boolean | undefined;
    /**
     * Configure as `true` to have the grid show a red "changed" tag in cells who's
     * field value has changed and not yet been committed.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-showDirty)
     */
    showDirty?: Boolean | {
        duringEdit?: Boolean | undefined;
    } | undefined;
    /**
     * If set to `true` this will show a color field in the [EventEdit](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/EventEdit) editor and also a
     * picker in the [EventMenu](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/EventMenu). Both enables the user to choose a color which will be
     * applied to the event bar's background. See EventModel's
     * [eventColor](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/model/mixin/EventModelMixin#field-eventColor) config.
     * config.
     */
    showEventColorPickers?: Boolean | undefined;
    /**
     * Set to `true` to show the lag in the tooltip
     */
    showLagInTooltip?: Boolean | undefined;
    /**
     * Set to `false` to hide recurring fields in event editor, even if the
     * [Recurring Events](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/mixin/RecurringEvents#config-enableRecurringEvents) is `true`
     * and a recurring event is being edited.
     */
    showRecurringUI?: Boolean | undefined;
    /**
     * If set to `true` this will show a color field in the [TaskEdit](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/TaskEdit) editor and also a
     * picker in the [EventMenu](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/EventMenu). Both enables the user to choose a color which will be
     * applied to the event bar's background. See EventModel's
     * [eventColor](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/model/mixin/EventModelMixin#field-eventColor) config.
     * config.
     */
    showTaskColorPickers?: Boolean | undefined;
    /**
     * Set to `true` to show a tooltip when hovering a dependency line
     */
    showTooltip?: Boolean | undefined;
    /**
     * Set to `true` to snap to the current time resolution increment while interacting with scheduled events.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-snap)
     */
    snap?: Boolean | undefined;
    /**
     * Affects drag drop and resizing of events when [snap](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/mixin/TimelineDateMapper#config-snap)
     * is enabled.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-snapRelativeToEventStartDate)
     */
    snapRelativeToEventStartDate?: Boolean | undefined;
    /**
     * The start date of the timeline (if not configure with [infiniteScroll](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/TimelineBase#config-infiniteScroll)).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-startDate)
     */
    startDate?: string | Date | undefined;
    /**
     * The name of the start date parameter that will be passed to in every `eventStore` load request.
     */
    startParamName?: string | undefined;
    /**
     * This value can be one of the following:
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-stateful)
     */
    stateful?: object | Boolean | string[] | undefined;
    /**
     * The events that, when fired by this component, should trigger it to save its state by calling
     * [saveState](https://bryntum.com/products/schedulerpro/docs/api/Core/mixin/State#function-saveState).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-statefulEvents)
     */
    statefulEvents?: object | string[] | undefined;
    /**
     * The key to use when saving this object's state in the [stateProvider](https://bryntum.com/products/schedulerpro/docs/api/Core/mixin/State#config-stateProvider). If this config is
     * not assigned, and [stateful](https://bryntum.com/products/schedulerpro/docs/api/Core/mixin/State#config-stateful) is not set to `false`, the [id](#Core/widget/Widget#config-id)
     * (if explicitly specified) will be used as the `stateId`.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-stateId)
     */
    stateId?: string | undefined;
    /**
     * The `StateProvider` to use to save and restore this object's [state](https://bryntum.com/products/schedulerpro/docs/api/Core/mixin/State#property-state). By default, `state`
     * will be saved using the [default state provider](https://bryntum.com/products/schedulerpro/docs/api/Core/state/StateProvider#property-instance-static).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-stateProvider)
     */
    stateProvider?: StateProvider | undefined;
    /**
     * Unit used to control how large steps to take when clicking the previous and next buttons in the Calendar
     * UI. Only applies when used as a component of a Calendar.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-stepUnit)
     */
    stepUnit?: string | undefined;
    /**
     * When set, the text in the major time axis header sticks in the scrolling viewport as long as possible.
     */
    stickyHeaders?: Boolean | undefined;
    /**
     * Store that holds records to display in the grid, or a store config object. If the configuration contains
     * a `readUrl`, an `AjaxStore` will be created.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-store)
     */
    store?: StoreConfig | Store | AjaxStore | AjaxStoreConfig | undefined;
    /**
     * An object containing widgets keyed by name. By default (when no `type` is given), strips are
     * [toolbars](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Toolbar). If you want to pass an array, you can use
     * the toolbar's [items](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Container#config-items).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-strips)
     */
    strips?: Record<string, ContainerItemConfig> | undefined;
    /**
     * An object containing sub grid configuration objects keyed by a `region` property.
     * By default, grid has a 'locked' region (if configured with locked columns) and a 'normal' region.
     * The 'normal' region defaults to use `flex: 1`.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-subGridConfigs)
     */
    subGridConfigs?: Record<string, SubGridConfig> | undefined;
    /**
     * Set to `true` to prevent auto calculating of a minimal [tickSize](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/mixin/TimelineEventRendering#property-tickSize)
     * to always fit the content to the screen size. Setting this property on `true` will disable [forceFit](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/TimelineBase#config-forceFit) behaviour.
     */
    suppressFit?: Boolean | undefined;
    /**
     * A [Mask](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Mask) config object, or a message to be shown when Crud Manager
     * is persisting changes on the server. Set to `null` to disable default sync mask.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-syncMask)
     */
    syncMask?: string | MaskConfig | null | undefined;
    /**
     * A configuration for the [tab](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Tab) created for this widget when it is placed in a
     * [TabPanel](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/TabPanel). For example, this config can be used to control the icon of the `tab` for
     * this widget:
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-tab)
     */
    tab?: Boolean | TabConfig | undefined;
    /**
     * A Config object representing the configuration of a [Toolbar](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Toolbar),
     * or array of config objects representing the child items of a Toolbar.
     * This creates a toolbar docked to the top of the panel immediately below the header.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-tbar)
     */
    tbar?: PagingToolbarConfig | ToolbarConfig | (string | ContainerItemConfig)[] | undefined;
    /**
     * CSS class used for terminals
     */
    terminalCls?: string | undefined;
    /**
     * Delay in ms before hiding the terminals when the mouse leaves an event bar or terminal.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-terminalHideDelay)
     */
    terminalHideDelay?: number | undefined;
    /**
     * Terminal offset from their initial position, in px. Positive values move terminals further away from the
     * event bar, negative values inside the event bar.
     */
    terminalOffset?: number | undefined;
    /**
     * Delay in ms before showing the terminals when hovering over an event bar.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-terminalShowDelay)
     */
    terminalShowDelay?: number | undefined;
    /**
     * Where (on event bar edges) to display terminals. The sides are `'start'`, `'top'`,
     * `'end'` and `'bottom'`
     */
    terminalSides?: string[] | undefined;
    /**
     * Terminal diameter in px, overrides the default CSS value for it (which might depend on theme).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-terminalSize)
     */
    terminalSize?: string | number | undefined;
    /**
     * The width/height (depending on vertical / horizontal mode) of all the time columns.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-tickSize)
     */
    tickSize?: number | undefined;
    /**
     * A [TimeAxis](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/data/TimeAxis) config object or instance, used to create a backing data store of
     * 'ticks' providing the input date data for the time axis of timeline panel. Created automatically if none
     * supplied.
     */
    timeAxis?: TimeAxisConfig | TimeAxis | undefined;
    /**
     * Inline time ranges, will be loaded into an internally created store if [TimeRanges](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/TimeRanges)
     * is enabled.
     */
    timeRanges?: TimeSpan[] | TimeSpanConfig[] | undefined;
    /**
     * The time ranges store instance for [TimeRanges](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/TimeRanges) feature.
     */
    timeRangeStore?: StoreConfig | Store | undefined;
    /**
     * Set to a time zone or a UTC offset. This will set the projects
     * [timeZone](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/model/ProjectModel#config-timeZone) config accordingly. As this config is only a referer,
     * please see project's config [documentation](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/model/ProjectModel#config-timeZone) for more
     * information.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-timeZone)
     */
    timeZone?: string | number | undefined;
    /**
     * A title to display in the header or owning TabPanel. Causes creation and docking of a header
     * to the top if no header is configured.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-title)
     */
    title?: string | undefined;
    /**
     * The [tools](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Tool) to add either before or after the `title` in the Panel header. Each
     * property name is the reference by which an instantiated tool may be retrieved from the live
     * `[tools](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/mixin/Toolable#property-tools)` property.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-tools)
     */
    tools?: Record<string, ToolConfig> | undefined;
    /**
     * A template function allowing you to configure the contents of the tooltip shown when hovering a
     * dependency line. You can return either an HTML string or a [DomConfig](https://bryntum.com/products/schedulerpro/docs/api/Core/helper/DomHelper#typedef-DomConfig) object.
     * @param {DependencyBaseModel} dependency The dependency record
     * @returns {string|DomConfig}
     */
    tooltipTemplate?: ((dependency: DependencyBaseModel) => string | DomConfig) | undefined;
    /**
     * Animation transition duration in milliseconds.
     */
    transitionDuration?: number | undefined;
    /**
     * Configure as `true` to trigger `selectionChange` when removing a selected event/assignment.
     */
    triggerSelectionChangeOnRemove?: Boolean | undefined;
    /**
     * Custom CSS class name suffixes to apply to the elements rendered by this widget. This may be specified
     * as a space separated string, an array of strings, or as an object in which property names with truthy
     * values are used as the class names.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-ui)
     */
    ui?: string | object | undefined;
    /**
     * By default, scrolling the schedule will update the [timelineContext](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/SchedulerBase#property-timelineContext) to reflect the new
     * currently hovered context. When displaying a large number of events on screen at the same time, this will
     * have a slight impact on scrolling performance. In such scenarios, opt out of this behavior by setting
     * this config to `false`.
     */
    updateTimelineContextOnScroll?: Boolean | undefined;
    /**
     * By default, the day of week and week of month of the event's start date are used to create
     * helpful contextual recurrence types when editing a non-recurring event record and choosing
     * an initial recurrence type.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-useContextualRecurrenceRules)
     */
    useContextualRecurrenceRules?: Boolean | undefined;
    /**
     * By default, scheduler fade events in on load. Specify `false` to prevent this animation or specify one
     * of the available animation types to use it (`true` equals `'fade-in'`):
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-useInitialAnimation)
     */
    useInitialAnimation?: string | Boolean | undefined;
    /**
     * The time axis column config for vertical [mode](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/SchedulerBase#config-mode).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-verticalTimeAxisColumn)
     */
    verticalTimeAxisColumn?: VerticalTimeAxisColumnConfig | undefined;
    /**
     * A string key used to lookup a predefined [ViewPreset](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/preset/ViewPreset) (e.g. 'weekAndDay', 'hourAndDay'),
     * managed by [PresetManager](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/preset/PresetManager). See [PresetManager](#Scheduler/preset/PresetManager) for more information.
     * Or a config object for a viewPreset.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-viewPreset)
     */
    viewPreset?: string | ViewPresetConfig | undefined;
    /**
     * A date to bring into view initially on the scrollable timeline.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-visibleDate)
     */
    visibleDate?: Date | VisibleDate | undefined;
    /**
     * Integer number indicating the size of timespan during zooming. When zooming, the timespan is adjusted to make
     * the scrolling area `visibleZoomFactor` times wider than the timeline area itself. Used in
     * [zoomToSpan](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/mixin/TimelineZoomable#function-zoomToSpan) and [zoomToLevel](#Scheduler/view/mixin/TimelineZoomable#function-zoomToLevel) functions.
     */
    visibleZoomFactor?: number | undefined;
    /**
     * A valid JS day index between 0-6 (0: Sunday, 1: Monday etc.) to be considered the start day of the week.
     * When omitted, the week start day is retrieved from the active locale class.
     */
    weekStartDay?: number | undefined;
    /**
     * A widgets weight determines its position among siblings when added to a [Container](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Container).
     * Higher weights go further down.
     */
    weight?: number | undefined;
    /**
     * Widget's width, used to set element style.width. Either specify a valid width string or a number, which
     * will get 'px' appended. We recommend using CSS as the primary way to control width, but in some cases
     * this config is convenient.
     */
    width?: string | number | undefined;
    /**
     * An object with format `{ fromDay, toDay, fromHour, toHour }` that describes the working days and hours.
     * This object will be used to populate TimeAxis [include](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/data/TimeAxis#config-include) property.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/view/SchedulerProBase#config-workingTime)
     */
    workingTime?: {
        fromDay?: number | undefined;
        toDay?: number | undefined;
        fromHour?: number | undefined;
        toHour?: number | undefined;
    } | undefined;
    /**
     * Whether the originally rendered timespan should be preserved while zooming. By default, it is set to `false`,
     * meaning the timeline panel will adjust the currently rendered timespan to limit the amount of HTML content to
     * render. When setting this option to `true`, be careful not to allow to zoom a big timespan in seconds
     * resolution for example. That will cause <strong>a lot</strong> of HTML content to be rendered and affect performance. You
     * can use [minZoomLevel](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/view/mixin/TimelineZoomable#config-minZoomLevel) and [maxZoomLevel](#Scheduler/view/mixin/TimelineZoomable#config-maxZoomLevel) config options for that.
     */
    zoomKeepsOriginalTimespan?: Boolean | undefined;
    /**
     * If true, you can zoom in and out on the time axis using CTRL-key + mouse wheel.
     */
    zoomOnMouseWheel?: Boolean | undefined;
    /**
     * True to zoom to time span when double-clicking a time axis cell.
     */
    zoomOnTimeAxisDoubleClick?: Boolean | undefined;
    /**
     * This feature temporarily visualizes [calendars](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/model/CalendarModel) for the event or resource
     * calendar (controlled by the [calendar](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/CalendarHighlight#config-calendar) config). The calendars are highlighted while a user is creating,
     * dragging or resizing a task. Enabling this feature makes it easier for the end user to understand the underlying
     * rules of the schedule.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/CalendarHighlight)
     */
    calendarHighlightFeature?: string | object | Boolean | CalendarHighlightConfig | CalendarHighlight | undefined;
    /**
     * Allows using `[Ctrl/CMD + C]`, `[Ctrl/CMD + X]` and `[Ctrl/CMD + V]` to cut, copy and paste cell or cell ranges. Also
     * makes cut, copy and paste actions available via the cell context menu.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/CellCopyPaste)
     */
    cellCopyPasteFeature?: string | object | Boolean | CellCopyPasteConfig | CellCopyPaste | undefined;
    /**
     * Extends the [CellEdit](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/CellEdit) to encapsulate SchedulerPro functionality.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/CellEdit)
     */
    cellEditFeature?: string | object | Boolean | CellEditConfig | CellEdit | undefined;
    /**
     * Right click to display context menu for cells.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/CellMenu)
     */
    cellMenuFeature?: string | object | Boolean | CellMenuConfig | CellMenu | undefined;
    /**
     * Displays a tooltip when hovering cells.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/CellTooltip)
     */
    cellTooltipFeature?: string | object | Boolean | CellTooltipConfig | CellTooltip | undefined;
    /**
     * Enables the [autoWidth](https://bryntum.com/products/schedulerpro/docs/api/Grid/column/Column#config-autoWidth) config for a grid's columns.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/ColumnAutoWidth)
     */
    columnAutoWidthFeature?: string | object | Boolean | ColumnAutoWidthConfig | ColumnAutoWidth | undefined;
    /**
     * Displays a toolbar while dragging column headers. Drop on a button in the toolbar to activate a certain function,
     * for example to group by that column. This feature simplifies certain operations on touch devices.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/ColumnDragToolbar)
     */
    columnDragToolbarFeature?: string | object | Boolean | ColumnDragToolbarConfig | ColumnDragToolbar | undefined;
    /**
     * Displays column lines for ticks, with a different styling for major ticks (by default they are darker). If this
     * feature is disabled, no lines are shown. If it's enabled, line are shown for the tick level which is set in current
     * ViewPreset. Please see [columnLinesFor](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/preset/ViewPreset#field-columnLinesFor) config for details.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/ColumnLines)
     */
    columnLinesFeature?: string | object | Boolean | ColumnLinesConfig | ColumnLines | undefined;
    /**
     * Displays a column picker (to show/hide columns) in the header context menu. Columns can be displayed in sub menus
     * by region or tag. Grouped headers are displayed as menu hierarchies.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/ColumnPicker)
     */
    columnPickerFeature?: string | object | Boolean | ColumnPickerConfig | ColumnPicker | undefined;
    /**
     * Allows user to rename columns by either right-clicking column header or using keyboard shortcuts when column header
     * is focused.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/ColumnRename)
     */
    columnRenameFeature?: string | object | Boolean | ColumnRenameConfig | ColumnRename | undefined;
    /**
     * Allows user to reorder columns by dragging headers. To get notified about column reorder listen to `change` event
     * on [columns](https://bryntum.com/products/schedulerpro/docs/api/Grid/data/ColumnStore) store.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/ColumnReorder)
     */
    columnReorderFeature?: string | object | Boolean | ColumnReorderConfig | ColumnReorder | undefined;
    /**
     * Enables user to resize columns by dragging a handle on the right hand side of the header. To get notified about column
     * resize listen to `change` event on [columns](https://bryntum.com/products/schedulerpro/docs/api/Grid/data/ColumnStore) store.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/ColumnResize)
     */
    columnResizeFeature?: string | object | Boolean | ColumnResizeConfig | ColumnResize | undefined;
    /**
     * This feature implements support for project transactions and is used by default in Scheduler Pro. For general
     * dependencies documentation see [Dependencies](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/Dependencies).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/Dependencies)
     */
    dependenciesFeature?: string | object | Boolean | DependenciesConfig | Dependencies | undefined;
    /**
     * Feature that displays a popup containing fields for editing dependency data.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/DependencyEdit)
     */
    dependencyEditFeature?: string | object | Boolean | DependencyEditConfig | DependencyEdit | undefined;
    /**
     * Feature that allows showing additional time before &amp; after an event, to visualize things like travel time - or the time you
     * need to prepare a room for a meeting + clean it up after.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/EventBuffer)
     */
    eventBufferFeature?: string | object | Boolean | EventBufferConfig | EventBuffer | undefined;
    /**
     * Allow using [Ctrl/CMD + C/X] and [Ctrl/CMD + V] to copy/cut and paste events.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/EventCopyPaste)
     */
    eventCopyPasteFeature?: string | object | Boolean | EventCopyPasteConfig | EventCopyPaste | undefined;
    /**
     * Allows user to drag and drop events within the scheduler, to change `startDate` or resource assignment.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/EventDrag)
     */
    eventDragFeature?: string | object | Boolean | EventDragConfig | EventDrag | undefined;
    /**
     * Feature that allows the user to create new events by dragging in empty parts of the scheduler rows.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/EventDragCreate)
     */
    eventDragCreateFeature?: string | object | Boolean | EventDragCreateConfig | EventDragCreate | undefined;
    /**
     * Enables users to click and drag to select events (or assignments in multi assignment mode) inside the Scheduler's
     * timeline. Press CTRL/CMD-key to extend an existing selection.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/EventDragSelect)
     */
    eventDragSelectFeature?: string | object | Boolean | EventDragSelectConfig | EventDragSelect | undefined;
    /**
     * Feature that displays a popup containing widgets for editing event data.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/EventEdit)
     */
    eventEditFeature?: string | object | Boolean | EventEditConfig | EventEdit | undefined;
    /**
     * Adds event filter menu items to the timeline header context menu.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/EventFilter)
     */
    eventFilterFeature?: string | object | Boolean | EventFilterConfig | EventFilter | undefined;
    /**
     * Displays a context menu for events. Items are populated by other features and/or application code.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/EventMenu)
     */
    eventMenuFeature?: string | object | Boolean | EventMenuConfig | EventMenu | undefined;
    /**
     * Feature that allows rendering non-working time ranges into event bars (weekends for Scheduler, effective calendar for
     * SchedulerPro):
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/EventNonWorkingTime)
     */
    eventNonWorkingTimeFeature?: string | object | Boolean | EventNonWorkingTimeConfig | EventNonWorkingTime | undefined;
    /**
     * Feature that allows resizing an event by dragging its start or end.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/EventResize)
     */
    eventResizeFeature?: string | object | Boolean | EventResizeConfig | EventResize | undefined;
    /**
     * Allows user to drag and drop event segments within the row.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/EventSegmentDrag)
     */
    eventSegmentDragFeature?: string | object | Boolean | EventSegmentDragConfig | EventSegmentDrag | undefined;
    /**
     * Feature that allows resizing an event segment by dragging its end.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/EventSegmentResize)
     */
    eventSegmentResizeFeature?: string | object | Boolean | EventSegmentResizeConfig | EventSegmentResize | undefined;
    /**
     * This feature provides segmented events support. It implements rendering of such events and also adds a entries to the
     * event context menu allowing to split the selected event and rename segments.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/EventSegments)
     */
    eventSegmentsFeature?: string | object | Boolean | EventSegmentsConfig | EventSegments | undefined;
    /**
     * Displays a tooltip when hovering events. The template used to render the tooltip can be customized, see [template](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/EventTooltip#config-template).
     * Config options are also applied to the tooltip shown, see [Tooltip](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Tooltip) for available options.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/EventTooltip)
     */
    eventTooltipFeature?: string | object | Boolean | EventTooltipConfig | EventTooltip | undefined;
    /**
     * <strong>NOTE</strong>: This class requires a 3rd party library to operate.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/experimental/ExcelExporter)
     */
    excelExporterFeature?: string | object | Boolean | ExcelExporterConfig | ExcelExporter | undefined;
    /**
     * An experimental feature that lets users drop files on a Widget. The widget fires an event when a file is dropped onto it.
     * In the event, you get access to the raw files as strings, that were parsed by calling `readAsBinaryString`.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/experimental/FileDrop)
     */
    fileDropFeature?: string | object | Boolean | FileDropConfig | FileDrop | undefined;
    /**
     * This feature adds a fill handle to a Grid range selection, which when dragged, fills the cells being dragged over
     * with values based on the values in the original selected range. This is similar to functionality normally seen in
     * various spreadsheet applications.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/FillHandle)
     */
    fillHandleFeature?: string | object | Boolean | FillHandleConfig | FillHandle | undefined;
    /**
     * Feature that allows filtering of the grid by settings filters on columns. The actual filtering is done by the store.
     * For info on programmatically handling filters, see [StoreFilter](https://bryntum.com/products/schedulerpro/docs/api/Core/data/mixin/StoreFilter).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/Filter)
     */
    filterFeature?: string | object | Boolean | FilterConfig | Filter | undefined;
    /**
     * Feature that allows filtering of the grid by entering filters on column headers.
     * The actual filtering is done by the store.
     * For info on programmatically handling filters, see [StoreFilter](https://bryntum.com/products/schedulerpro/docs/api/Core/data/mixin/StoreFilter).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/FilterBar)
     */
    filterBarFeature?: string | object | Boolean | FilterBar | FilterBarConfig | undefined;
    /**
     * Enables rendering and handling of row groups. The actual grouping is done in the store, but triggered by `[shift]` +
     * clicking headers or by using two finger tap (one on header, one anywhere on grid). Use `[shift]` + `[alt]` + click to
     * remove a column grouper.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/Group)
     */
    groupFeature?: string | object | Boolean | Group | GroupConfig | undefined;
    /**
     * A special version of the Grid GroupSummary feature that enables summaries within scheduler. To use a single summary
     * it is easiest to configure [renderer](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/GroupSummary#config-renderer), for multiple summaries see [summaries](#Scheduler/feature/GroupSummary#config-summaries).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/GroupSummary)
     */
    groupSummaryFeature?: string | object | Boolean | GroupSummaryConfig | GroupSummary | undefined;
    /**
     * Right click column header or focus it and press SPACE key to show the context menu for headers.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/HeaderMenu)
     */
    headerMenuFeature?: string | object | Boolean | HeaderMenu | HeaderMenuConfig | undefined;
    /**
     * Enables users to click and drag to zoom to a date range in Scheduler's header time axis. Only supported in horizontal
     * mode.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/HeaderZoom)
     */
    headerZoomFeature?: string | object | Boolean | HeaderZoomConfig | HeaderZoom | undefined;
    /**
     * Displays labels at positions [top](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/Labels#config-top), [right](#Scheduler/feature/Labels#config-right), [bottom](#Scheduler/feature/Labels#config-bottom) and
     * [left](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/Labels#config-left).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/Labels)
     */
    labelsFeature?: string | object | Boolean | LabelsConfig | Labels | undefined;
    /**
     * This feature allows resources which satisfy a certain condition to be locked at the top of the scheduler.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/LockRows)
     */
    lockRowsFeature?: string | object | Boolean | LockRowsConfig | LockRows | undefined;
    /**
     * This feature merges cells that have the same value in sorted (or [optionally](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/MergeCells#config-sortedOnly) any) columns
     * configured to [mergeCells](https://bryntum.com/products/schedulerpro/docs/api/Grid/column/Column#config-mergeCells).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/MergeCells)
     */
    mergeCellsFeature?: string | object | Boolean | MergeCells | MergeCellsConfig | undefined;
    /**
     * A feature that renders child events nested inside their parent. Requires Scheduler Pro to use a tree event store
     * (normally handled automatically when events in data has children).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/NestedEvents)
     */
    nestedEventsFeature?: string | object | Boolean | NestedEventsConfig | NestedEvents | undefined;
    /**
     * Feature that allows styling of weekends (and other non-working time) by adding timeRanges for those days.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/NonWorkingTime)
     */
    nonWorkingTimeFeature?: string | object | Boolean | NonWorkingTimeConfig | NonWorkingTime | undefined;
    /**
     * Makes the scheduler's timeline pannable by dragging with the mouse. Try it out in the demo below.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/Pan)
     */
    panFeature?: string | object | Boolean | PanConfig | Pan | undefined;
    /**
     * Generates PDF/PNG files from the Scheduler component.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/export/PdfExport)
     */
    pdfExportFeature?: string | object | Boolean | PdfExportConfig | PdfExport | undefined;
    /**
     * This feature visualizes the [percentDone](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/model/mixin/PercentDoneMixin#field-percentDone) field as a
     * progress bar on the event elements. Each progress bar also optionally has a drag handle which users can drag can
     * change the value.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/PercentBar)
     */
    percentBarFeature?: string | object | Boolean | PercentBarConfig | PercentBar | undefined;
    /**
     * Allows printing Scheduler contents using browser print dialog.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/export/Print)
     */
    printFeature?: string | object | Boolean | PrintConfig | Print | undefined;
    /**
     * Feature that allows the user to search in a column by focusing a cell and typing. Navigate between hits using the
     * keyboard, [f3] or [ctrl]/[cmd] + [g] moves to next, also pressing [shift] moves to previous.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/QuickFind)
     */
    quickFindFeature?: string | object | Boolean | QuickFind | QuickFindConfig | undefined;
    /**
     * Makes the splitter between grid [sections](https://bryntum.com/products/schedulerpro/docs/api/Grid/view/SubGrid) draggable, to let users resize, and
     * collapse/expand the sections.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/RegionResize)
     */
    regionResizeFeature?: string | object | Boolean | RegionResize | RegionResizeConfig | undefined;
    /**
     * Applicable only for Scheduler in `vertical` mode. Right click resource header cells to display a context menu.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/ResourceMenu)
     */
    resourceMenuFeature?: string | object | Boolean | ResourceMenuConfig | ResourceMenu | undefined;
    /**
     * Feature that highlights the non-working intervals for resources based on their [calendar](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/model/ResourceModel#field-calendar).
     * If a resource has no calendar defined, the project's calendar will be used. The non-working time interval can
     * also be recurring. You can find a live example showing how to achieve this in the [Resource Non-Working Time Demo](../examples/resource-non-working-time/).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/ResourceNonWorkingTime)
     */
    resourceNonWorkingTimeFeature?: string | object | Boolean | ResourceNonWorkingTimeConfig | ResourceNonWorkingTime | undefined;
    /**
     * Feature that draws resource time ranges, shaded areas displayed behind events. These zones are similar to events in
     * that they have a start and end date but different in that they do not take part in the event layout, and they always
     * occupy full row height.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/ResourceTimeRanges)
     */
    resourceTimeRangesFeature?: string | object | Boolean | ResourceTimeRangesConfig | ResourceTimeRanges | undefined;
    /**
     * Allow using [Ctrl/CMD + C/X] and [Ctrl/CMD + V] to copy/cut-and-paste rows. Also makes cut, copy and paste actions
     * available via the cell context menu.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/RowCopyPaste)
     */
    rowCopyPasteFeature?: string | object | Boolean | RowCopyPaste | RowCopyPasteConfig | undefined;
    /**
     * Enables expanding of Grid rows by either row click or double click, or by adding a separate Grid column which renders
     * a button that expands or collapses the row.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/RowExpander)
     */
    rowExpanderFeature?: string | object | Boolean | RowExpander | RowExpanderConfig | undefined;
    /**
     * This feature implements support for project transactions and used by default in Gantt. For general RowReorder feature
     * documentation see [RowReorder](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/RowReorder).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/RowReorder)
     */
    rowReorderFeature?: string | object | Boolean | RowReorderConfig | RowReorder | undefined;
    /**
     * Enables user to change row height by dragging the bottom row border. After a resize operation, the [rowHeight](https://bryntum.com/products/schedulerpro/docs/api/Grid/data/GridRowModel#field-rowHeight)
     * field of the record is updated (when [applyToAllRows](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/RowResize#config-applyToAllRows) is `false`) and the [eventLayout](#Scheduler/model/ResourceModel#field-eventLayout) of the dragged resource
     * row will be switched to `pack` as a result (only applies when `stack` is used by default).
     * `barMargin` and `resourceMargin` will also be shrunk as you reduce the height of a row.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/RowResize)
     */
    rowResizeFeature?: string | object | Boolean | RowResizeConfig | RowResize | undefined;
    /**
     * Allow visually selecting a schedule "cell" by clicking, or [any other pointer gesture](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/ScheduleContext#config-triggerEvent).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/ScheduleContext)
     */
    scheduleContextFeature?: string | object | Boolean | ScheduleContextConfig | ScheduleContext | undefined;
    /**
     * Displays a context menu for empty parts of the schedule. Items are populated in the first place
     * by configurations of this Feature, then by other features and/or application code.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/ScheduleMenu)
     */
    scheduleMenuFeature?: string | object | Boolean | ScheduleMenuConfig | ScheduleMenu | undefined;
    /**
     * Feature that displays a tooltip containing the time at the mouse position when hovering empty parts of the schedule.
     * To hide the schedule tooltip, just disable this feature:
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/ScheduleTooltip)
     */
    scheduleTooltipFeature?: string | object | Boolean | ScheduleTooltipConfig | ScheduleTooltip | undefined;
    /**
     * This feature injects buttons to the beginning and end of each row that will scroll to the next or previous event
     * outside the current view. It can optionally show a label along with the button, using the
     * [labelRenderer](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/ScrollButtons#config-labelRenderer). Only supported in horizontal [mode](#Scheduler/view/SchedulerBase#config-mode)
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/ScrollButtons)
     */
    scrollButtonsFeature?: string | object | Boolean | ScrollButtonsConfig | ScrollButtons | undefined;
    /**
     * <div class="external-example " data-file="Grid/feature/Search.js"></div>
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/Search)
     */
    searchFeature?: string | object | Boolean | Search | SearchConfig | undefined;
    /**
     * Feature that displays a text field to edit the event name. You can control the flow of this by listening to the events relayed by this class from the underlying [Editor](https://bryntum.com/products/schedulerpro/docs/api/Core/widget/Editor).
     * To use this feature, you also need to disable the built-in default editing feature:
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/SimpleEventEdit)
     */
    simpleEventEditFeature?: string | object | Boolean | SimpleEventEditConfig | SimpleEventEdit | undefined;
    /**
     * Allows sorting of grid by clicking (or tapping) headers, also displays which columns grid is sorted by (numbered if
     * using multisort). Use modifier keys for multisorting: [Ctrl/CMD + click] to add sorter, [Ctrl/CMD + Alt + click] to remove sorter.
     * The actual sorting is done by the store, see [Store.sort()](https://bryntum.com/products/schedulerpro/docs/api/Core/data/mixin/StoreSort#function-sort).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/Sort)
     */
    sortFeature?: string | object | Boolean | Sort | SortConfig | undefined;
    /**
     * This feature allows splitting the Scheduler into multiple views, either by using the cell context menu, or
     * programmatically by calling [split()](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/Split#function-split).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/Split)
     */
    splitFeature?: string | object | Boolean | SplitConfig | Split | undefined;
    /**
     * A feature which pins configurable content from a grid row to the top of the grid
     * while the row scrolls off the top but is still visible.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/StickyCells)
     */
    stickyCellsFeature?: string | object | Boolean | StickyCells | StickyCellsConfig | undefined;
    /**
     * This feature applies native `position: sticky` to event contents in horizontal mode, keeping the contents in view as
     * long as possible on scroll. For vertical mode it uses a programmatic solution to achieve the same result.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/StickyEvents)
     */
    stickyEventsFeature?: string | object | Boolean | StickyEventsConfig | StickyEvents | undefined;
    /**
     * Stripes rows by adding alternating CSS classes to all row elements (`b-even` and `b-odd`).
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/Stripe)
     */
    stripeFeature?: string | object | Boolean | Stripe | StripeConfig | undefined;
    /**
     * A special version of the Grid Summary feature. This feature displays a summary row in the grid footer.
     * For regular columns in the locked section - specify type of summary on columns, available types are:
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/Summary)
     */
    summaryFeature?: string | object | Boolean | SummaryConfig | Summary | undefined;
    /**
     * Feature that displays a [Task editor](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/widget/SchedulerTaskEditor), allowing users to edit task data.
     * The Task editor is a popup containing tabs with fields for editing task data.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/TaskEdit)
     */
    taskEditFeature?: string | object | Boolean | TaskEditConfig | TaskEdit | undefined;
    /**
     * Adds scheduler specific menu items to the timeline header context menu.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/TimeAxisHeaderMenu)
     */
    timeAxisHeaderMenuFeature?: string | object | Boolean | TimeAxisHeaderMenuConfig | TimeAxisHeaderMenu | undefined;
    /**
     * Feature that renders global ranges of time in the timeline. Use this feature to visualize a `range` like a 1 hr lunch
     * or some important point in time (a `line`, i.e. a range with 0 duration). This feature can also show a current time
     * indicator if you set [showCurrentTimeLine](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/TimeRanges#config-showCurrentTimeLine) to true. To style the rendered elements, use the
     * [cls](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/model/TimeSpan#field-cls) field of the `TimeSpan` class.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/TimeRanges)
     */
    timeRangesFeature?: string | object | Boolean | TimeRangesConfig | TimeRanges | undefined;
    /**
     * Feature that allows selection of a time span in the time axis header. When a time span is selected in the header,
     * a [timeSelectionChange](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/TimeSelection#event-timeSelectionChange) event is fired.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Scheduler/feature/TimeSelection)
     */
    timeSelectionFeature?: string | object | Boolean | TimeSelectionConfig | TimeSelection | undefined;
    /**
     * This feature exposes methods on the owning Scheduler or Gantt widget which you can use to highlight one or multiple time spans
     * in the schedule. Please see [highlightTimeSpan](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/TimeSpanHighlight#function-highlightTimeSpan) and [highlightTimeSpans](#SchedulerPro/feature/TimeSpanHighlight#function-highlightTimeSpans) to learn
     * more or try the demo below:
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/TimeSpanHighlight)
     */
    timeSpanHighlightFeature?: string | object | Boolean | TimeSpanHighlightConfig | TimeSpanHighlight | undefined;
    /**
     * Feature that makes the grid work more like a tree. Included by default in [TreeGrid](https://bryntum.com/products/schedulerpro/docs/api/Grid/view/TreeGrid). Requires
     * exactly one [TreeColumn](https://bryntum.com/products/schedulerpro/docs/api/Grid/column/TreeColumn) among grids columns. That column will have its renderer replaced with a
     * tree renderer that adds padding and icon to give the appearance of a tree. The original renderer is preserved and
     * also called.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/Tree)
     */
    treeFeature?: string | object | Boolean | Tree | TreeConfig | undefined;
    /**
     * A feature that allows transforming a flat dataset (or the leaves of a hierarchical) into a tree by specifying a
     * record field per parent level. Parents are generated based on each leaf's value for those fields.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/Grid/feature/TreeGroup)
     */
    treeGroupFeature?: string | object | Boolean | TreeGroup | TreeGroupConfig | undefined;
    /**
     * Captures versions (snapshots) of the active project, including a detailed log of the changes new in each version.
     * ...
     * [View online docs...](https://bryntum.com/products/schedulerpro/docs/api/SchedulerPro/feature/Versions)
     */
    versionsFeature?: string | object | Boolean | VersionsConfig | Versions | undefined;
}>>> & {
    onShow?: ((params: string | ((event: {
        source: Widget;
    }) => void)) => any) | undefined;
    onScroll?: ((params: string | ((event: {
        source: Grid;
        scrollTop: number;
    }) => void)) => any) | undefined;
    onToolClick?: ((params: string | ((event: {
        source: Tool;
        tool: Tool;
    }) => void)) => any) | undefined;
    onSelectionChange?: ((params: string | ((event: {
        action: "select" | "deselect";
        mode: "row" | "cell";
        source: Grid;
        deselected: Model[];
        selected: Model[];
        selection: Model[];
        deselectedCells: GridLocation[];
        selectedCells: GridLocation[];
        cellSelection: GridLocation[];
    }) => void)) => any) | undefined;
    onToggleGroup?: ((params: string | ((event: {
        groupRecord: Model;
        collapse: boolean;
        allRecords?: boolean | undefined;
    }) => void)) => any) | undefined;
    onToggleNode?: ((params: string | ((event: {
        record: Model;
        collapse: boolean;
    }) => void)) => any) | undefined;
    onRowMouseLeave?: ((params: any) => any) | undefined;
    onSelectionModeChange?: ((params: string | ((event: {
        selectionMode: object;
    }) => void)) => any) | undefined;
    onSplit?: ((params: string | ((event: {
        subViews: GridBase[];
        options: {
            direction: "both" | "horizontal" | "vertical";
            atColumn: Column;
            atRecord: Model;
        };
    }) => void)) => any) | undefined;
    onSplitterCollapseClick?: ((params: string | ((event: {
        source: Grid;
        subGrid: SubGrid;
        domEvent: Event;
    }) => boolean | void | Promise<boolean>)) => any) | undefined;
    onSplitterDragEnd?: ((params: string | ((event: {
        source: Grid;
        subGrid: SubGrid;
        domEvent: Event;
    }) => void)) => any) | undefined;
    onSplitterDragStart?: ((params: string | ((event: {
        source: Grid;
        subGrid: SubGrid;
        domEvent: Event;
    }) => void)) => any) | undefined;
    onSplitterExpandClick?: ((params: string | ((event: {
        source: Grid;
        subGrid: SubGrid;
        domEvent: Event;
    }) => boolean | void | Promise<boolean>)) => any) | undefined;
    onStartCellEdit?: ((params: string | ((event: {
        source: Grid;
        editorContext: {
            editor: Editor;
            column: Column;
            record: Model;
            cell: HTMLElement;
            value: any;
        };
    }) => void)) => any) | undefined;
    onSubGridCollapse?: ((params: string | ((event: {
        source: Grid;
        subGrid: SubGrid;
    }) => void)) => any) | undefined;
    onSubGridExpand?: ((params: string | ((event: {
        source: Grid;
        subGrid: SubGrid;
    }) => void)) => any) | undefined;
    onUnlockRows?: ((params: string | ((event: {
        clone: GridBase;
    }) => void)) => any) | undefined;
    onUnsplit?: ((params: string | (() => void)) => any) | undefined;
    onTimeAxisHeaderClick?: ((params: string | ((event: {
        source: TimeAxisColumn | VerticalTimeAxisColumn;
        startDate: Date;
        endDate: Date;
        event: Event;
    }) => void)) => any) | undefined;
    onTimeAxisHeaderContextMenu?: ((params: string | ((event: {
        source: TimeAxisColumn | VerticalTimeAxisColumn;
        startDate: Date;
        endDate: Date;
        event: Event;
    }) => void)) => any) | undefined;
    onTimeAxisHeaderDblClick?: ((params: string | ((event: {
        source: TimeAxisColumn | VerticalTimeAxisColumn;
        startDate: Date;
        endDate: Date;
        event: Event;
    }) => void)) => any) | undefined;
    onTimelineContextChange?: ((params: string | ((event: {
        oldContext: TimelineContext;
        context: TimelineContext;
    }) => void)) => any) | undefined;
    onTimeAxisHeaderMenuBeforeShow?: ((params: string | ((event: {
        source: Scheduler;
        menu: Menu;
        items: Record<string, MenuItemConfig>;
        column: Column;
    }) => boolean | void | Promise<boolean>)) => any) | undefined;
    onTimeAxisHeaderMenuItem?: ((params: string | ((event: {
        source: Scheduler;
        menu: Menu;
        item: MenuItem;
        column: Column;
    }) => void)) => any) | undefined;
    onTimeAxisHeaderMenuShow?: ((params: string | ((event: {
        source: Scheduler;
        menu: Menu;
        items: Record<string, MenuItemConfig>;
        column: Column;
    }) => void)) => any) | undefined;
    onTimeAxisChange?: ((params: string | ((event: {
        source: Scheduler;
        config: {
            startDate: Date;
            endDate: Date;
        };
    }) => void)) => any) | undefined;
    onTimelineViewportResize?: ((params: string | ((event: {
        source: Widget;
        width: number;
        height: number;
        oldWidth: number;
        oldHeight: number;
    }) => void)) => any) | undefined;
    onVisibleDateRangeChange?: ((params: string | ((event: {
        source: Scheduler;
        old: {
            startDate: Date;
            endDate: Date;
        };
        new: {
            startDate: Date;
            endDate: Date;
        };
    }) => void)) => any) | undefined;
    onScheduleClick?: ((params: string | ((event: {
        source: Scheduler;
        date: Date;
        tick: TimeSpan;
        tickIndex: number;
        tickStartDate: Date;
        tickEndDate: Date;
        row: Row;
        index: number;
        resourceRecord: SchedulerResourceModel;
        event: MouseEvent;
    }) => void)) => any) | undefined;
    onScheduleContextMenu?: ((params: string | ((event: {
        source: Scheduler;
        date: Date;
        tick: TimeSpan;
        tickIndex: number;
        tickStartDate: Date;
        tickEndDate: Date;
        row: Row;
        index: number;
        resourceRecord: SchedulerResourceModel;
        event: MouseEvent;
    }) => void)) => any) | undefined;
    onScheduleDblClick?: ((params: string | ((event: {
        source: Scheduler;
        date: Date;
        tick: TimeSpan;
        tickIndex: number;
        tickStartDate: Date;
        tickEndDate: Date;
        row: Row;
        index: number;
        resourceRecord: SchedulerResourceModel;
        event: MouseEvent;
    }) => void)) => any) | undefined;
    onScheduleMouseDown?: ((params: string | ((event: {
        source: Scheduler;
        date: Date;
        tickStartDate: Date;
        tickEndDate: Date;
        row: Row;
        index: number;
        resourceRecord: SchedulerResourceModel;
        event: MouseEvent;
    }) => void)) => any) | undefined;
    onScheduleMouseEnter?: ((params: string | ((event: {
        source: Scheduler;
        date: Date;
        tickStartDate: Date;
        tickEndDate: Date;
        row: Row;
        index: number;
        resourceRecord: SchedulerResourceModel;
        event: MouseEvent;
    }) => void)) => any) | undefined;
    onScheduleMouseLeave?: ((params: string | ((event: {
        source: Scheduler;
        event: MouseEvent;
    }) => void)) => any) | undefined;
    onScheduleMouseMove?: ((params: string | ((event: {
        source: Scheduler;
        date: Date;
        tick: TimeSpan;
        tickIndex: number;
        tickStartDate: Date;
        tickEndDate: Date;
        row: Row;
        index: number;
        resourceRecord: SchedulerResourceModel;
        event: MouseEvent;
    }) => void)) => any) | undefined;
    onScheduleMouseUp?: ((params: string | ((event: {
        source: Scheduler;
        date: Date;
        tickStartDate: Date;
        tickEndDate: Date;
        row: Row;
        index: number;
        resourceRecord: SchedulerResourceModel;
        event: MouseEvent;
    }) => void)) => any) | undefined;
    onScheduleMenuBeforeShow?: ((params: string | ((event: {
        source: Scheduler;
        items: Record<string, MenuItemConfig>;
        eventRecord: SchedulerEventModel;
        resourceRecord: SchedulerResourceModel;
        date: Date;
        assignmentRecord: SchedulerAssignmentModel;
        eventElement: HTMLElement;
    }) => boolean | void | Promise<boolean>)) => any) | undefined;
    onScheduleMenuItem?: ((params: string | ((event: {
        source: Scheduler;
        item: MenuItem;
        resourceRecord: SchedulerResourceModel;
        date: Date;
        element: HTMLElement;
    }) => void)) => any) | undefined;
    onScheduleMenuShow?: ((params: string | ((event: {
        source: Scheduler;
        items: Record<string, MenuItemConfig>;
        menu: Menu;
        resourceRecord: SchedulerResourceModel;
        date: Date;
        targetElement: HTMLElement;
    }) => void)) => any) | undefined;
    onScrollButtonClick?: ((params: string | ((event: {
        domEvent: Event;
    }) => boolean | void | Promise<boolean>)) => any) | undefined;
    onTimeSelectionChange?: ((params: string | ((event: {
        source: Scheduler;
        startDate: Date;
        endDate: Date;
    }) => void)) => any) | undefined;
    onTimeSelectionElementClick?: ((params: string | ((event: {
        source: Scheduler;
        startDate: Date;
        endDate: Date;
        domEvent: Event;
    }) => void)) => any) | undefined;
    onTaskEditCanceled?: ((params: string | ((event: {
        source: SchedulerPro;
        taskRecord: EventModel;
        editor: TaskEditorBase;
    }) => void)) => any) | undefined;
    onTransactionChange?: ((params: string | ((event: {
        hasChanges: boolean;
    }) => void)) => any) | undefined;
    onTimeRangeHeaderClick?: ((params: string | ((event: {
        source: Scheduler;
        timeRangeRecord: TimeSpan;
        domEvent: MouseEvent;
    }) => void)) => any) | undefined;
    onTimeRangeHeaderContextMenu?: ((params: string | ((event: {
        source: Scheduler;
        timeRangeRecord: TimeSpan;
        domEvent: MouseEvent;
    }) => void)) => any) | undefined;
    onTimeRangeHeaderDblClick?: ((params: string | ((event: {
        source: Scheduler;
        timeRangeRecord: TimeSpan;
        domEvent: MouseEvent;
    }) => void)) => any) | undefined;
}, {}, {}>;
export default _default;
declare type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
declare type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
