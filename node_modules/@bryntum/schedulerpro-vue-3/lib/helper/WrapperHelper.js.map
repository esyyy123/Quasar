{"version":3,"file":"WrapperHelper.js","sources":["../../src/helper/WrapperHelper.ts"],"sourcesContent":["/**\n * Vue 3 widget helper\n */\n\nimport { type ComponentInternalInstance, nextTick } from 'vue';\nimport { StringHelper, Widget } from '@bryntum/schedulerpro';\n\ninterface RenderElement extends HTMLElement {\n    vueKey: string;\n}\n\nexport type Data = Record<string, unknown>;\n\ntype SuppressNew<T> = { [K in keyof T]: T[ K ] }\n\ntype AnyConstructor<\n    Instance extends object = object,\n    Static extends object = object\n> = (new (...input: any[]) => Instance) & SuppressNew<Static>\n\ntype AnyWidget = AnyConstructor<any, any>;\n\ntype RenderData = {\n    record: any,\n    row: any,\n    column: any,\n    cellElement: RenderElement\n}\n\nexport type WidgetData<T extends AnyWidget> = {\n    instanceClass: T,\n    instanceName: string\n    isView?: boolean,\n    dataStores?: object,\n    projectStores?: boolean,\n    configNames: string[]\n    propertyConfigNames: string[]\n    propertyNames: string[]\n    eventNames: string[]\n    featureNames?: string[]\n}\n\nexport type WidgetConfig<T extends AnyWidget> = {\n    me?: ComponentInternalInstance;\n    props: Data;\n    widgetData: WidgetData<T>,\n    emit: (...args: any[]) => any\n    element: HTMLDivElement;\n    processCellContent?: Function;\n    hasFrameworkRenderer?: Function;\n    toRaw?: Function\n}\n\nexport type BryntumConfig = Record<string, any> & {\n    vueComponent?: Object,\n    listeners: Record<string, Function>,\n    features: {},\n    processCellContent: Function,\n    hasFrameworkRenderer: Function\n};\n\nexport class WrapperHelper {\n\n    /**\n     * Development warning. Showed when environment is set to 'development'\n     * @param {String} clsName vue component instance\n     * @param {String} msg console message\n     */\n    static devWarning(clsName: string, msg: string) {\n        // @ts-ignore\n        if (window['bryntum'].isTestEnv || process.env.NODE_ENV === 'development') {\n            console.warn(`Bryntum${clsName}Component development warning!\\n${msg}\\n` +\n                'Please check Vue integration guide: https://bryntum.com/products/grid/docs/guide/Grid/integration/vue/guide'\n            );\n        }\n    }\n\n    static devWarningContainer(clsName: string, containerParam: string) {\n        WrapperHelper.devWarning(clsName,\n            `Using \"${containerParam}\" parameter for configuration is not recommended.\\n` +\n            'Widget is placed automatically inside it\\'s container element.\\n' +\n            `Solution: remove \"${containerParam}\" parameter from configuration.`\n        );\n    }\n\n    static devWarningConfigProp(clsName: string, prop: string) {\n        WrapperHelper.devWarning(clsName,\n            `Using \"${prop}\" parameter for configuration is not recommended.\\n` +\n            `Solution: Use separate parameter for each \"${prop}\" value to enable reactive updates of the API instance`\n        );\n    }\n\n    static devWarningUpdateProp(clsName: string, prop: string) {\n        WrapperHelper.devWarning(clsName,\n            `\"${prop}\" is a static config option for component constructor only. No runtime changes are supported!`\n        );\n    }\n\n    /**\n     * Creates bryntum component config from vue component\n     * @param {Object} context\n     * @param {Object} context.me vue component instance\n     * @param {Object} context.props reference to props\n     * @param {Object} context.widgetData reference to data\n     * @param {Function} context.emit reference to emit\n     * @param {Object} context.element HTML element\n     * @param {Function} context.processCellContent cell renderer method\n     * @param {Function} context.hasFrameworkRenderer checks presence of vue renderer\n     * @param {Function} context.toRaw Vue fn to unwrap reactive object\n     * @returns {Object} config object\n     */\n    static createConfig<T extends AnyWidget>({\n        me,\n        props,\n        widgetData,\n        emit,\n        element,\n        processCellContent,\n        hasFrameworkRenderer,\n        toRaw\n    }: WidgetConfig<T>) {\n        const\n            {\n                instanceClass,\n                instanceName\n            }                   = widgetData,\n            filter              = (arr: string[]) => arr.filter(prop => props[prop] !== undefined),\n            configNames         = filter(widgetData.configNames || []),\n            propertyConfigNames = filter(widgetData.propertyConfigNames || []),\n            propertyNames       = filter(widgetData.propertyNames || []),\n            featureNames        = filter(widgetData.featureNames || []),\n            bryntumConfig       = {\n                vueComponent : me,\n                listeners    : {},\n                features     : {},\n                processCellContent,\n                hasFrameworkRenderer\n            } as BryntumConfig;\n\n        // Setup events listeners\n        widgetData.eventNames.forEach(eventName => {\n            const onFunctionName = `on${StringHelper.capitalize(eventName)}`;\n            // Vue prefixes DOM events with on, for example click becomes `onClick`, which\n            // is same as our on-Function. Therefore, the DOM events' handlers are called twice.\n            // This prevents firing the event if we already have on-created by Vue.\n            if (!props[onFunctionName]) {\n                bryntumConfig.listeners[eventName] = (params: any) => emit(eventName, params);\n            }\n        });\n\n        // Assign configs. Skip properties\n        [\n            ...configNames,\n            ...propertyConfigNames,\n            ...featureNames\n        ].forEach(prop => {\n            WrapperHelper.applyPropValue(bryntumConfig, prop, props[prop], true, toRaw);\n            if (['features', 'config'].includes(prop)) {\n                WrapperHelper.devWarningConfigProp(instanceClass.$name, prop);\n            }\n        });\n\n        // Add vue wrapper class name\n        bryntumConfig.cls = (bryntumConfig.cls || '') + ` b-vue-${instanceClass.$name.toLowerCase()}-container`;\n\n        // Prepare watch arrays\n        widgetData.configNames   = configNames;\n        widgetData.propertyNames = [\n            ...configNames,\n            ...propertyNames,\n            ...propertyConfigNames,\n            ...featureNames\n        ];\n\n        // Cleanup unused instance arrays\n        widgetData.eventNames          = [];\n        widgetData.propertyConfigNames = [];\n        widgetData.featureNames        = [];\n\n        // If component has no container specified in config then use adopt to Wrapper's element\n        const\n            containerParam = [\n                'adopt',\n                'appendTo',\n                'insertAfter',\n                'insertBefore'\n            ].find((prop: string) => bryntumConfig[prop]);\n\n        if (!containerParam) {\n            if (instanceName === 'Button') {\n                // Button should always be <a> or <button> inside owner element\n                bryntumConfig.appendTo = element;\n            }\n            else {\n                bryntumConfig.adopt = element;\n            }\n        }\n        else {\n            WrapperHelper.devWarningContainer(instanceClass.$name, containerParam);\n        }\n        return bryntumConfig;\n    }\n\n    /**\n     * Setup store events relay\n     * @param {Object} data reference to data\n     * @param {Object} instance bryntum widget instance\n     */\n    static relayStores(data: any, instance: any) {\n        const { dataStores, projectStores } = data;\n\n        if (dataStores) {\n            Object.keys(dataStores).forEach(storeName => {\n                const store = projectStores ? instance.project[storeName] : instance[storeName];\n                if (store) {\n                    // Set `syncDataOnLoad` to `true` by default\n                    // TODO: remove when https://github.com/bryntum/support/issues/2764 is done\n                    store.syncDataOnLoad = store.syncDataOnLoad == null ? true : store.syncDataOnLoad;\n                    // Vue-3 fails to compile nullish coalescing https://github.com/bryntum/support/issues/2872\n                    // store.syncDataOnLoad = store.syncDataOnLoad ?? true;\n\n                    // Makes relaying store events configurable but off by default\n                    if (instance && instance.relayStoreEvents) {\n                        store.relayAll(instance, dataStores[storeName]);\n                    }\n                }\n            });\n            delete data.dataStores;\n        }\n    }\n\n    /**\n     * Creates bryntum Widget from vue component\n     * @param {Object} config\n     * @param {Object} config.me vue component instance\n     * @param {Object} config.props reference to props\n     * @param {Object} config.widgetData reference to data\n     * @param {Function} config.emit reference to emit\n     * @param {Object} config.element HTML element\n     * @param {Function} config.processCellContent cell renderer method\n     * @param {Function} config.hasFrameworkRenderer check the presence of vue renderer\n     * @param {Function} config.toRaw Vue fn to unwrap reactive object\n     * @returns {Object} widget object\n     */\n    static createWidget<T extends AnyWidget>(config: WidgetConfig<T>): InstanceType<T> {\n        const\n            { instanceClass } = config.widgetData,\n            cfg               = WrapperHelper.createConfig(config);\n        return (instanceClass.$name === 'Widget' ? Widget.create(cfg) : new instanceClass(cfg)) as InstanceType<T>;\n    }\n\n    /**\n     * Applies property value to Bryntum config or instance.\n     * @param {Object} configOrInstance target object\n     * @param {String} prop property name\n     * @param {Object} value value\n     * @param {Boolean} [isConfig] config setting mode\n     * @param {Function} [toRaw] Vue fn to unwrap reactive object\n     */\n    static applyPropValue(configOrInstance: any, prop: string, value: any, isConfig = true, toRaw?: Function) {\n\n        if (prop === 'project') {\n            // Allow use ProjectModel component as project\n            if (value && typeof value === 'object') {\n                configOrInstance[prop] = value.instance ? value.instance.value || value.instance : value;\n            }\n        }\n        else if (prop === 'features' && typeof value === 'object') {\n            Object.keys(value).forEach(key => WrapperHelper.applyPropValue(configOrInstance, `${key}Feature`, value[key], isConfig, toRaw));\n        }\n        else if (prop === 'config' && typeof value === 'object') {\n            Object.keys(value).forEach(key => WrapperHelper.applyPropValue(configOrInstance, key, value[key], isConfig, toRaw));\n        }\n        else if (prop === 'columns' && !isConfig) {\n            configOrInstance['columns'].data = value;\n        }\n        else if (prop.endsWith('Feature')) {\n            const\n                features    = configOrInstance['features'],\n                featureName = prop.replace('Feature', '');\n            if (isConfig) {\n                features[featureName] = value;\n            }\n            else {\n                const feature = features[featureName];\n                if (feature) {\n                    feature.setConfig(value);\n                }\n            }\n        }\n        else {\n            configOrInstance[prop] = toRaw ? toRaw(value) : value;\n        }\n    }\n\n    /**\n     * Creates watches for vue component properties\n     * @param {Object} me vue component instance\n     * @param {Object} instance bryntum widget instance\n     * @param {Object} props reference to props\n     * @param {Object} data reference to data\n     * @param {Function} watcher watch method reference (Accepts: prop and newValue)\n     */\n    static watchProps<T extends AnyWidget>(\n        instance: InstanceType<T>,\n        data: WidgetData<T>,\n        watcher: (prop: string, callback: (value: any) => void) => void) {\n        const\n            {\n                configNames,\n                propertyNames,\n                instanceClass\n            } = data;\n\n        propertyNames.forEach(prop => watcher(prop, newValue => {\n            const value = Array.isArray(newValue) ? newValue.slice() : newValue;\n            WrapperHelper.applyPropValue(instance, prop, value, false);\n\n            // Check if property is a config and notify\n            if (configNames.includes(prop)) {\n                WrapperHelper.devWarningUpdateProp(instanceClass.$name, prop);\n            }\n        }));\n\n        // Cleanup unused instance arrays\n        data.configNames   = [];\n        data.propertyNames = [];\n    }\n\n    /**\n     * Cell renderer method\n     * @param {Object} context\n     * @param {RenderData} context.rendererData\n     * @param {*} context.rendererHtml\n     * @returns {Boolean}\n     */\n    static processCellContent({ rendererData, rendererHtml }: { rendererData: RenderData, rendererHtml: any }) {\n        const { record, column, cellElement, row } = rendererData;\n\n        // Only run for cells with vue renderers\n        if (column.data.vue && column.data.renderer) {\n            const\n                // `this` is a caller component\n                { vueComponent }                      = this as any,\n                // `teleports` is javascript Map object\n                { teleports : { value : teleports } } = vueComponent.provides,\n                key                                   = `${column.id}-${record.id}`,\n                renderElement                         = column.tree\n                    ? cellElement.querySelector('.b-tree-cell-value')\n                    : cellElement;\n\n            // If the cell already has a teleport, release it\n            if (cellElement.vueKey) {\n                teleports.delete(cellElement.vueKey);\n            }\n\n            const\n                bind   = { ...rendererHtml },\n                { is } = bind;\n\n            delete bind.is;\n\n            // Create new teleport\n            nextTick(() => {\n                // Only teleport if the row is still used for the same record. Since this happens async, we might have\n                // scrolled over the entire block of rows since the render\n                if (row.id === record.id) {\n                    teleports.set(key, {\n                        bind,\n                        key,\n                        is,\n                        to         : renderElement,\n                        generation : record.generation\n                    });\n                }\n            });\n\n            // Link cell to the teleport, to be able to release it above\n            cellElement.vueKey = key;\n        }\n    }\n\n    /**\n     *\n     * @param {Object} context\n     * @param {*} context.cellContent Content to be rendered in cell (set by renderer)\n     * @param {*} context.column Column being rendered\n     * @returns {Boolean} `true` if there is a Vue Renderer in this cell, `false` otherwise\n     */\n    static hasFrameworkRenderer({ cellContent, column }: { cellContent: any, column: any }) {\n        return cellContent && typeof cellContent === 'object' && column?.data.vue;\n    }\n\n}\n"],"names":["WrapperHelper","clsName","msg","containerParam","prop","me","props","widgetData","emit","element","processCellContent","hasFrameworkRenderer","toRaw","instanceClass","instanceName","filter","arr","configNames","propertyConfigNames","propertyNames","featureNames","bryntumConfig","eventName","onFunctionName","StringHelper","params","data","instance","dataStores","projectStores","storeName","store","config","cfg","Widget","configOrInstance","value","isConfig","key","features","featureName","feature","watcher","newValue","rendererData","rendererHtml","record","column","cellElement","row","vueComponent","teleports","renderElement","bind","is","nextTick","cellContent"],"mappings":"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"}