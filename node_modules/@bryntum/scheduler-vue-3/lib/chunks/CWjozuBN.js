import { defineComponent as b, ref as f, computed as g, onMounted as x, openBlock as k, createElementBlock as v, createElementVNode as o, toDisplayString as C, unref as B, renderSlot as y, createVNode as t } from "vue";
import { _ as $ } from "./B3OVxBBp.js";
import { _ as i } from "./xqKaSF8z.js";
import { DemoCodeEditor as h, CSSHelper as d, AjaxHelper as E } from "@bryntum/scheduler";
const R = { class: "demo-header" }, D = { id: "title-container" }, S = ["href"], j = { id: "tools" }, a = "../", T = /* @__PURE__ */ b({
  __name: "BryntumDemoHeader",
  props: {
    title: {}
  },
  setup(H, { expose: _ }) {
    const l = f(null), s = f(null), c = document.title.split(" - ")[1] || document.title, n = !h.monacoCodePath;
    let p;
    const u = g(() => {
      const e = /(.*?\/)(examples.*?\/frameworks\/.*?)\/dist/.exec(document.location.href);
      return e ? `${e[1]}examples/#example-${e[2].replace(/\//gm, "-").replace("examples-frameworks", "frameworks")}` : "#";
    }), m = async () => {
      p = await h.toggleCodeEditor(
        p,
        l.value.instance.value,
        {
          appFolder: a,
          preferredSources: [
            /App\.vue/,
            /\w+Config\.[tj]s/
          ]
        }
      );
    }, w = async () => {
      const e = (await E.get(`${a}app.config.json`, { parseJson: !0 })).parsedJson;
      if (e.zip) {
        const r = s.value.instance.value;
        r.hidden = !1, r.href = `${a}${e.zip}`;
      }
    };
    return x(() => {
      n || (d.insertRule("body { flex-direction : row !important }"), d.insertRule("#__nuxt, #container, #app { flex : 1 !important; overflow : hidden !important }"), d.insertRule(".b-codeeditor-header { padding : 0.5em !important }"), w());
    }), _({
      link: u,
      headerTitle: c,
      hiddenEditor: n,
      toggleCodeEditor: m
    }), (e, r) => (k(), v("header", R, [
      o("div", D, [
        o("a", {
          id: "title",
          href: u.value
        }, [
          o("h1", null, C(B(c)), 1)
        ], 8, S)
      ]),
      y(e.$slots, "default"),
      o("div", j, [
        t(i, {
          text: "Download Trial",
          href: "https://bryntum.com/download/?product=scheduler",
          cls: "b-green b-raised"
        }),
        t(i, {
          ref_key: "codeButtonRef",
          ref: l,
          icon: "b-icon-code",
          tooltip: "Click to show the code viewer",
          cls: "b-raised b-blue b-code-button",
          hidden: n,
          onClick: m
        }, null, 512),
        t(i, {
          ref_key: "downloadButtonRef",
          ref: s,
          icon: "b-icon-download",
          tooltip: "Click to show the code viewer",
          cls: "b-raised b-blue",
          href: "#",
          hidden: !0
        }, null, 512),
        t($)
      ])
    ]));
  }
});
export {
  T as _
};
//# sourceMappingURL=CWjozuBN.js.map
